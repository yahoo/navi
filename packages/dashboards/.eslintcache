[{"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/.eslintrc.js":"1","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/.prettierrc.js":"2","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/.template-lintrc.js":"3","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/components/dashboard-actions/export.js":"4","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/components/dashboard-actions/schedule.js":"5","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/components/dashboard-dimension-selector.js":"6","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/components/navi-widget.js":"7","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/controllers/dashboards/dashboard/view.js":"8","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/helpers/get-widget.js":"9","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/initializers/report-controllers.js":"10","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/initializers/user-model.js":"11","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/mixins/controllers/report-to-widget.js":"12","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboard-collections/collection.js":"13","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboard-collections/index.js":"14","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboards/dashboard/view.js":"15","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboards/dashboard/widgets/new.js":"16","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboards-print/dashboards/dashboard/index.js":"17","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboards-print/dashboards/dashboard/view.js":"18","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/services/dashboard-data.js":"19","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/transforms/moment.js":"20","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/adapters/dashboard-collection.js":"21","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-action-list.js":"22","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-actions/add-widget.js":"23","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-actions/export.js":"24","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-actions/schedule.js":"25","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-dimension-selector.js":"26","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-filters.js":"27","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-header.js":"28","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/navi-dashboard.js":"29","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/navi-widget.js":"30","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/report-actions/add-to-dashboard.js":"31","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/controllers/dashboards/dashboard/view.js":"32","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/controllers/dashboards/dashboard/widgets/add.js":"33","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/controllers/dashboards/dashboard/widgets/widget/view.js":"34","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/controllers/dashboards/dashboard/widgets/widget.js":"35","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/controllers/dashboards/dashboard.js":"36","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/helpers/dashboard-action.js":"37","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/helpers/get-widget.js":"38","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/initializers/report-controllers.js":"39","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/initializers/user-model.js":"40","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/models/dashboard-collection.js":"41","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboard-collections/collection.js":"42","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboard-collections/index.js":"43","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/clone.js":"44","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/index.js":"45","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/view.js":"46","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/add.js":"47","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/new.js":"48","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/widget/clone-to-report.js":"49","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/widget/edit.js":"50","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/widget/view.js":"51","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/widget.js":"52","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets.js":"53","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard.js":"54","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/index.js":"55","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/new.js":"56","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards-print/dashboards/dashboard/index.js":"57","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards-print/dashboards/dashboard/view.js":"58","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards-print/dashboards/dashboard.js":"59","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards.js":"60","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/services/dashboard-data.js":"61","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/common/navi-loader.js":"62","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboard-collections/collection.js":"63","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboard-collections/error.js":"64","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboard-collections/index.js":"65","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboard-collections/loading.js":"66","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboard-collections.js":"67","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/index.js":"68","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/view.js":"69","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget/edit.js":"70","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget/error.js":"71","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget/invalid.js":"72","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget/loading.js":"73","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget/view.js":"74","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget.js":"75","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets.js":"76","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/error.js":"77","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/index.js":"78","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/loading.js":"79","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/new.js":"80","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards-print/dashboards/dashboard/view.js":"81","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards.js":"82","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/transforms/moment.js":"83","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/config/coverage.js":"84","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/config/ember-try.js":"85","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/config/environment.js":"86","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/ember-cli-build.js":"87","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/index.js":"88","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/testem.js":"89","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/add-widget-test.js":"90","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/dashboard-collections-test.js":"91","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/dashboard-filter-test.js":"92","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/dashboards-test.js":"93","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/explore-widget-test.js":"94","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/mutli-datasource-dashboards-test.js":"95","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/print-dashboard-test.js":"96","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/report-action-test.js":"97","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/schedule-modal-test.js":"98","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/share-link-test.js":"99","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/app/app.js":"100","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/app/routes/directory/my-data.js":"101","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/config/deprecation-workflow.js":"102","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/config/ember-intl.js":"103","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/config/environment.js":"104","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/config/targets.js":"105","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/config.js":"106","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/dashboard-collection.js":"107","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/dashboard-widget.js":"108","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/dashboard.js":"109","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/delivery-rules.js":"110","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/reports.js":"111","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/users.js":"112","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/scenarios/default.js":"113","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/serializers/application.js":"114","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/dashboard-actions/add-widget-test.js":"115","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/dashboard-actions/export-test.js":"116","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/dashboard-dimension-selector-test.js":"117","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/dashboard-filters-test.js":"118","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/navi-dashboard-test.js":"119","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/navi-widget-test.js":"120","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/report-actions/add-to-dashboard-test.js":"121","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/controllers/dashboards/dashboard/view-test.js":"122","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/controllers/dashboards/dashboard/widgets/add-test.js":"123","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/helpers/get-widget-test.js":"124","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/initializers/user-model-test.js":"125","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/mixins/controllers/report-to-widget-test.js":"126","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/models/dashboard-collection-test.js":"127","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboard-collections/dashboard-collections-test.js":"128","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboard-collections/index-test.js":"129","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/clone-test.js":"130","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/view-test.js":"131","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/widgets/add-test.js":"132","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/widgets/new-test.js":"133","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/widgets/widget/clone-to-report-test.js":"134","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/widgets/widget-test.js":"135","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboards-test.js":"136","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/index-test.js":"137","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/new-test.js":"138","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/services/dashboard-data-test.js":"139","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/transforms/moment-test.js":"140"},{"size":2360,"mtime":1617393917759,"results":"141","hashOfConfig":"142"},{"size":136,"mtime":1617379677157,"results":"143","hashOfConfig":"142"},{"size":134,"mtime":1617379256752,"results":"144","hashOfConfig":"142"},{"size":1386,"mtime":1617378882999,"results":"145","hashOfConfig":"142"},{"size":841,"mtime":1617378882999,"results":"146","hashOfConfig":"142"},{"size":4845,"mtime":1617380294070,"results":"147","hashOfConfig":"142"},{"size":2544,"mtime":1617394524403,"results":"148","hashOfConfig":"142"},{"size":4244,"mtime":1617393762099,"results":"149","hashOfConfig":"142"},{"size":482,"mtime":1617380147478,"results":"150","hashOfConfig":"142"},{"size":549,"mtime":1617378883003,"results":"151","hashOfConfig":"142"},{"size":508,"mtime":1617391174895,"results":"152","hashOfConfig":"142"},{"size":1893,"mtime":1617391215441,"results":"153","hashOfConfig":"142"},{"size":445,"mtime":1617378883005,"results":"154","hashOfConfig":"142"},{"size":403,"mtime":1617378883005,"results":"155","hashOfConfig":"142"},{"size":5752,"mtime":1617392081205,"results":"156","hashOfConfig":"142"},{"size":1255,"mtime":1617378883008,"results":"157","hashOfConfig":"142"},{"size":431,"mtime":1617378883005,"results":"158","hashOfConfig":"142"},{"size":741,"mtime":1617378883006,"results":"159","hashOfConfig":"142"},{"size":7625,"mtime":1617393881966,"results":"160","hashOfConfig":"142"},{"size":1169,"mtime":1617391904457,"results":"161","hashOfConfig":"142"},{"size":64,"mtime":1617378883017,"results":"162","hashOfConfig":"142"},{"size":76,"mtime":1617378883017,"results":"163","hashOfConfig":"142"},{"size":83,"mtime":1617378883018,"results":"164","hashOfConfig":"142"},{"size":79,"mtime":1617378883018,"results":"165","hashOfConfig":"142"},{"size":81,"mtime":1617378883018,"results":"166","hashOfConfig":"142"},{"size":83,"mtime":1617378883019,"results":"167","hashOfConfig":"142"},{"size":72,"mtime":1617378883019,"results":"168","hashOfConfig":"142"},{"size":71,"mtime":1617378883019,"results":"169","hashOfConfig":"142"},{"size":69,"mtime":1617378883020,"results":"170","hashOfConfig":"142"},{"size":66,"mtime":1617378883020,"results":"171","hashOfConfig":"142"},{"size":86,"mtime":1617378883020,"results":"172","hashOfConfig":"142"},{"size":81,"mtime":1617378883021,"results":"173","hashOfConfig":"142"},{"size":88,"mtime":1617378883021,"results":"174","hashOfConfig":"142"},{"size":96,"mtime":1617378883022,"results":"175","hashOfConfig":"142"},{"size":91,"mtime":1617378883021,"results":"176","hashOfConfig":"142"},{"size":76,"mtime":1617378883021,"results":"177","hashOfConfig":"142"},{"size":85,"mtime":1617378883022,"results":"178","hashOfConfig":"142"},{"size":62,"mtime":1617378883022,"results":"179","hashOfConfig":"142"},{"size":87,"mtime":1617378883023,"results":"180","hashOfConfig":"142"},{"size":79,"mtime":1617378883023,"results":"181","hashOfConfig":"142"},{"size":71,"mtime":1617378883023,"results":"182","hashOfConfig":"142"},{"size":83,"mtime":1617378883023,"results":"183","hashOfConfig":"142"},{"size":78,"mtime":1617378883024,"results":"184","hashOfConfig":"142"},{"size":77,"mtime":1617378883025,"results":"185","hashOfConfig":"142"},{"size":77,"mtime":1617378883025,"results":"186","hashOfConfig":"142"},{"size":76,"mtime":1617378883026,"results":"187","hashOfConfig":"142"},{"size":83,"mtime":1617378883026,"results":"188","hashOfConfig":"142"},{"size":83,"mtime":1617378883026,"results":"189","hashOfConfig":"142"},{"size":102,"mtime":1617378883027,"results":"190","hashOfConfig":"142"},{"size":91,"mtime":1617378883027,"results":"191","hashOfConfig":"142"},{"size":91,"mtime":1617378883027,"results":"192","hashOfConfig":"142"},{"size":86,"mtime":1617378883027,"results":"193","hashOfConfig":"142"},{"size":79,"mtime":1617378883026,"results":"194","hashOfConfig":"142"},{"size":71,"mtime":1617378883025,"results":"195","hashOfConfig":"142"},{"size":67,"mtime":1617378883028,"results":"196","hashOfConfig":"142"},{"size":65,"mtime":1617378883028,"results":"197","hashOfConfig":"142"},{"size":94,"mtime":1617378883024,"results":"198","hashOfConfig":"142"},{"size":93,"mtime":1617378883024,"results":"199","hashOfConfig":"142"},{"size":71,"mtime":1617378883024,"results":"200","hashOfConfig":"142"},{"size":61,"mtime":1617378883025,"results":"201","hashOfConfig":"142"},{"size":67,"mtime":1617378883028,"results":"202","hashOfConfig":"142"},{"size":72,"mtime":1617378883033,"results":"203","hashOfConfig":"142"},{"size":86,"mtime":1617378883034,"results":"204","hashOfConfig":"142"},{"size":81,"mtime":1617378883034,"results":"205","hashOfConfig":"142"},{"size":81,"mtime":1617378883039,"results":"206","hashOfConfig":"142"},{"size":83,"mtime":1617378883041,"results":"207","hashOfConfig":"142"},{"size":75,"mtime":1617378883033,"results":"208","hashOfConfig":"142"},{"size":80,"mtime":1617378883041,"results":"209","hashOfConfig":"142"},{"size":79,"mtime":1617378883042,"results":"210","hashOfConfig":"142"},{"size":70,"mtime":1617378883044,"results":"211","hashOfConfig":"142"},{"size":71,"mtime":1617378883044,"results":"212","hashOfConfig":"142"},{"size":73,"mtime":1617378883045,"results":"213","hashOfConfig":"142"},{"size":73,"mtime":1617378883045,"results":"214","hashOfConfig":"142"},{"size":70,"mtime":1617378883045,"results":"215","hashOfConfig":"142"},{"size":89,"mtime":1617378883043,"results":"216","hashOfConfig":"142"},{"size":82,"mtime":1617378883043,"results":"217","hashOfConfig":"142"},{"size":70,"mtime":1617378883046,"results":"218","hashOfConfig":"142"},{"size":70,"mtime":1617378883046,"results":"219","hashOfConfig":"142"},{"size":72,"mtime":1617378883048,"results":"220","hashOfConfig":"142"},{"size":68,"mtime":1617378883050,"results":"221","hashOfConfig":"142"},{"size":96,"mtime":1617378883041,"results":"222","hashOfConfig":"142"},{"size":64,"mtime":1617378883041,"results":"223","hashOfConfig":"142"},{"size":61,"mtime":1617378883053,"results":"224","hashOfConfig":"142"},{"size":61,"mtime":1617378883054,"results":"225","hashOfConfig":"142"},{"size":1667,"mtime":1617379231260,"results":"226","hashOfConfig":"142"},{"size":565,"mtime":1617379219595,"results":"227","hashOfConfig":"142"},{"size":983,"mtime":1617378883057,"results":"228","hashOfConfig":"142"},{"size":313,"mtime":1617379196800,"results":"229","hashOfConfig":"142"},{"size":589,"mtime":1617378884514,"results":"230","hashOfConfig":"142"},{"size":2059,"mtime":1617378883071,"results":"231","hashOfConfig":"142"},{"size":1884,"mtime":1617378883071,"results":"232","hashOfConfig":"142"},{"size":17268,"mtime":1617378883071,"results":"233","hashOfConfig":"142"},{"size":24800,"mtime":1617378883072,"results":"234","hashOfConfig":"142"},{"size":13358,"mtime":1617384711494,"results":"235","hashOfConfig":"142"},{"size":4766,"mtime":1617390805974,"results":"236","hashOfConfig":"142"},{"size":1991,"mtime":1617378883074,"results":"237","hashOfConfig":"142"},{"size":1937,"mtime":1617378883074,"results":"238","hashOfConfig":"142"},{"size":4284,"mtime":1617378883074,"results":"239","hashOfConfig":"142"},{"size":1144,"mtime":1617378883075,"results":"240","hashOfConfig":"142"},{"size":388,"mtime":1617378884029,"results":"241","hashOfConfig":"142"},{"size":137,"mtime":1617378883079,"results":"242","hashOfConfig":"142"},{"size":567,"mtime":1617395107847,"results":"243","hashOfConfig":"142"},{"size":47,"mtime":1617378883081,"results":"244","hashOfConfig":"142"},{"size":1891,"mtime":1617379209100,"results":"245","hashOfConfig":"142"},{"size":305,"mtime":1617391904461,"results":"246","hashOfConfig":"142"},{"size":1145,"mtime":1617378883084,"results":"247","hashOfConfig":"142"},{"size":541,"mtime":1617378883084,"results":"248","hashOfConfig":"142"},{"size":70,"mtime":1617378883084,"results":"249","hashOfConfig":"142"},{"size":63,"mtime":1617378883085,"results":"250","hashOfConfig":"142"},{"size":68,"mtime":1617378883085,"results":"251","hashOfConfig":"142"},{"size":61,"mtime":1617378883086,"results":"252","hashOfConfig":"142"},{"size":59,"mtime":1617378883087,"results":"253","hashOfConfig":"142"},{"size":89,"mtime":1617378883088,"results":"254","hashOfConfig":"142"},{"size":120,"mtime":1617378883089,"results":"255","hashOfConfig":"142"},{"size":2462,"mtime":1617378883091,"results":"256","hashOfConfig":"142"},{"size":2133,"mtime":1617378883092,"results":"257","hashOfConfig":"142"},{"size":4936,"mtime":1617390934752,"results":"258","hashOfConfig":"142"},{"size":6890,"mtime":1617394470875,"results":"259","hashOfConfig":"142"},{"size":6174,"mtime":1617378883093,"results":"260","hashOfConfig":"142"},{"size":7344,"mtime":1617391978081,"results":"261","hashOfConfig":"142"},{"size":6028,"mtime":1617378883094,"results":"262","hashOfConfig":"142"},{"size":8329,"mtime":1617378883095,"results":"263","hashOfConfig":"142"},{"size":347,"mtime":1617378883095,"results":"264","hashOfConfig":"142"},{"size":613,"mtime":1617378883096,"results":"265","hashOfConfig":"142"},{"size":1115,"mtime":1617378883097,"results":"266","hashOfConfig":"142"},{"size":3881,"mtime":1617378883097,"results":"267","hashOfConfig":"142"},{"size":1179,"mtime":1617378883098,"results":"268","hashOfConfig":"142"},{"size":983,"mtime":1617378883109,"results":"269","hashOfConfig":"142"},{"size":822,"mtime":1617378883110,"results":"270","hashOfConfig":"142"},{"size":4042,"mtime":1617378883110,"results":"271","hashOfConfig":"142"},{"size":3141,"mtime":1617378883111,"results":"272","hashOfConfig":"142"},{"size":2105,"mtime":1617378883111,"results":"273","hashOfConfig":"142"},{"size":2394,"mtime":1617391750481,"results":"274","hashOfConfig":"142"},{"size":2326,"mtime":1617378883112,"results":"275","hashOfConfig":"142"},{"size":3200,"mtime":1617378883111,"results":"276","hashOfConfig":"142"},{"size":7965,"mtime":1617378883112,"results":"277","hashOfConfig":"142"},{"size":1098,"mtime":1617378883112,"results":"278","hashOfConfig":"142"},{"size":2839,"mtime":1617378883113,"results":"279","hashOfConfig":"142"},{"size":12073,"mtime":1617395202367,"results":"280","hashOfConfig":"142"},{"size":1272,"mtime":1617378883113,"results":"281","hashOfConfig":"142"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"151db2d",{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/.eslintrc.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/.prettierrc.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/.template-lintrc.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/components/dashboard-actions/export.js",["579"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *    <DashboardActions::Export\n *      @dashboard={{@dashboard}}\n *      @title={{@dashboard.title}}\n *      @disabled={{not @dashboard.validations.isTruelyValid}}\n *    >\n *      Inner template\n *    </DashboardActions::Export>\n */\n\nimport { computed } from '@ember/object';\nimport MultipleFormatExport from 'navi-reports/components/report-actions/multiple-format-export';\n\nexport default class DashboardMultipleFormatExport extends MultipleFormatExport {\n  /**\n   * @property {String} filename - filename for the downloaded file\n   * @override\n   */\n  @computed('dashboard.title')\n  get filename() {\n    return `${this.dashboard.title}-dashboard`;\n  }\n\n  /**\n   * @property {undefined} csvHref - CSV export is not available for dashboards\n   * @override\n   */\n  csvHref = undefined;\n\n  /**\n   * @property {Promise} exportHref - Promise resolving to export to file link\n   * @override\n   */\n  @computed('dashboard.id')\n  get exportHref() {\n    return Promise.resolve(`/export?dashboard=${this.dashboard.id}`);\n  }\n\n  /**\n   * @property {Array} exportFormats - A list of export formats\n   * @override\n   */\n  @computed('exportHref')\n  get exportFormats() {\n    return super.exportFormats.filter((format) => format.type !== 'CSV');\n  }\n}\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/components/dashboard-actions/schedule.js",["580"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   <DashboardActions::Schedule\n *     @model={{@dashboard}}\n *     @disabled={{not @dashboard.validations.isTruelyValid}}\n *     @onSave={{this.onSave}}\n *     @onRevert={{this.onRevert}}\n *     @onDelete={{this.onDelete}}\n *   >\n *     Inner template\n *   </DashboardActions::Schedule>\n */\n\nimport { A as arr } from '@ember/array';\nimport ScheduleActionComponent from 'navi-reports/components/common-actions/schedule';\nimport { computed } from '@ember/object';\n\nexport default class DashboardScheduleActionComponent extends ScheduleActionComponent {\n  /**\n   * @property {Array} formats\n   * @override\n   */\n  @computed\n  get formats() {\n    return arr(super.formats.without('csv'));\n  }\n}\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/components/dashboard-dimension-selector.js",["581","582"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   <DashboardDimensionSelector\n *      @dashboard={{this.dashboardModel}}\n *      @onChange={{this.changeAction}}\n *   />\n */\nimport Component from '@ember/component';\nimport { computed } from '@ember/object';\nimport layout from '../templates/components/dashboard-dimension-selector';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\nimport { getDefaultDataSourceName } from 'navi-data/utils/adapter';\nimport { groupBy } from 'lodash-es';\n\n@templateLayout(layout)\n@tagName('')\nexport default class DashboardDimensionSelectorComponent extends Component {\n  /**\n   * @property {Promise} -- creates powerselect options of all dimensions that can be pick based on widgets on the dashboard\n   */\n  @computed('dashboard.widgets', 'mergeWidgetDimensions')\n  get groupedDimensions() {\n    const widgetPromises = this.dashboard.widgets;\n    /*\n     * get a list of dimensions per table/timeGrain involved\n     * do this so each table/timegrain combination is unique and we don't have to flatten more than we have to.\n     * shape will be: {table: [{id, name, category}, ...], ...}\n     */\n    return widgetPromises.then(this.mergeWidgetDimensions).then((dimensionMap) => {\n      /*\n       * merge and build category: dimension map\n       * shape will be: {categoryName: {dimensionName: {dimension, name, tables}, ...}, ....}\n       */\n      const dimObject = this.buildCategoryMap(dimensionMap);\n\n      /*\n       * transform into powerselect friendly option\n       * shape will be [{groupName, options: [{dimension, name, tables}, ...]}, ...]\n       */\n      const selectOptions = this.buildPowerSelectOptions(dimObject);\n\n      //sort groups\n      selectOptions.sort((a, b) => a.groupName.localeCompare(b.groupName));\n      return selectOptions;\n    });\n  }\n\n  /**\n   * Takes category mapped dimension objects and maps it to power-select grouped list\n   * @param {Object} dimObject - {categoryName: {dimensionName: {dimension, name, tables}, ...}, ....}\n   * @returns {Object} - [{groupName, options: [{dimension, name, tables}, ...]}, ...]\n   */\n  buildPowerSelectOptions(dimObject) {\n    return Object.entries(dimObject).reduce((selectOptions, [category, dimensions]) => {\n      dimensions = groupBy(Object.values(dimensions), 'dataSource');\n      const needsDatasourceSpecifier = Object.keys(dimensions).length > 1;\n      Object.entries(dimensions).forEach(([dataSource, dims]) => {\n        dims.sort((a, b) => a.name.localeCompare(b.name));\n        selectOptions.push({\n          groupName: needsDatasourceSpecifier ? `${category} (${dataSource})` : category,\n          options: dims,\n        });\n      });\n      return selectOptions;\n    }, []);\n  }\n\n  /**\n   * Takes an object that is mapped by table and list of dimensions, and merges them into a object\n   * that is keyed by {category: [dimensions]}\n   * @param {Object} dimensionMap - {table: [{id, name, category}, ...], ...}\n   * @return {Object} - {categoryName: {dimensionName: {dimension, name, tables}, ...}, ....}\n   */\n  buildCategoryMap(dimensionMap) {\n    return Object.entries(dimensionMap).reduce((results, [table, dimensions]) => {\n      let dataSource = getDefaultDataSourceName();\n      if (table.includes('.')) {\n        [dataSource, ...table] = table.split('.');\n        table = table.join('.');\n      }\n\n      dimensions.forEach((dimension) => {\n        if (!results[dimension.category]) {\n          results[dimension.category] = {};\n        }\n\n        if (!results[dimension.category][`${dataSource}.${dimension.id}`]) {\n          results[dimension.category][`${dataSource}.${dimension.id}`] = {\n            type: dimension.metadataType,\n            field: dimension.id,\n            name: dimension.name,\n            tables: [table],\n            dataSource,\n          };\n        } else {\n          results[dimension.category][`${dataSource}.${dimension.id}`].tables.push(table);\n        }\n      });\n      return results;\n    }, {});\n  }\n\n  /**\n   * Takes a list of widgets and builds an object keyed by table and list of dimensions\n   * @param {Widget} widgets\n   * @returns {Object} - {table: [{id, name, category}, ...], ...}\n   */\n  mergeWidgetDimensions(widgets) {\n    return widgets.reduce((dimensionMap, widget) => {\n      // TODO: Consider including timeDimensions? This would potentially conflict with visualization manifests so skipping for now\n      const { id: tableKey, dimensions } = widget.requests?.firstObject?.tableMetadata || {};\n      const dataSource = widget?.requests?.firstObject?.dataSource;\n      const key = `${dataSource}.${tableKey}`;\n      if (!dimensionMap[key]) {\n        dimensionMap[key] = [...dimensions];\n      }\n      return dimensionMap;\n    }, {});\n  }\n}\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/components/navi-widget.js",["583","584"],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/controllers/dashboards/dashboard/view.js",["585","586","587"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\n\nimport Controller from '@ember/controller';\nimport { inject as service } from '@ember/service';\nimport { isEqual } from 'lodash-es';\nimport { get, set, setProperties, action } from '@ember/object';\nimport ReportToWidget from 'navi-dashboards/mixins/controllers/report-to-widget';\n\nexport default class DashboardsDashboardViewController extends Controller.extend(ReportToWidget) {\n  /**\n   * @property {Service} compression\n   */\n  @service compression;\n\n  /**\n   * @property {Service} metadataService\n   */\n  @service('navi-metadata') metadataService;\n\n  /**\n   * @property {Service} store\n   */\n  @service store;\n\n  /**\n   * @property {String[]} queryParams\n   */\n  queryParams = ['filters'];\n\n  /**\n   * @property {String} filters query param holding encoded filters for the dashboard\n   */\n  filters = null;\n\n  /**\n   * @action updateFilter\n   * @param {Object} dashboard\n   * @param {Object} originalFilter\n   * @param {Object} changeSet\n   */\n  @action\n  async updateFilter(dashboard, originalFilter, changeSet) {\n    const origFilter = originalFilter.serialize();\n    origFilter.source = originalFilter.source;\n    const newFilters = get(dashboard, 'filters')\n      .toArray()\n      .map((fil) => {\n        const newFil = fil.serialize();\n        newFil.source = fil.source;\n        return newFil;\n      }); //Native array of serialized filters\n    const filterToUpdate = newFilters.find((fil) => isEqual(fil, origFilter));\n\n    setProperties(filterToUpdate, changeSet);\n\n    const newFilter = this.store\n      .createFragment('bard-request-v2/fragments/filter', {\n        field: filterToUpdate.field,\n        parameters: filterToUpdate.parameters,\n        type: filterToUpdate.type,\n        operator: filterToUpdate.operator,\n        values: filterToUpdate.values,\n        source: filterToUpdate.source,\n      })\n      .serialize();\n    newFilter.source = originalFilter.source;\n\n    const index = newFilters.indexOf(filterToUpdate);\n    newFilters[index] = newFilter;\n\n    const filterQueryParams = await this.compression.compress({ filters: newFilters });\n\n    this.transitionToRoute('dashboards.dashboard', { queryParams: { filters: filterQueryParams } });\n  }\n\n  /**\n   * @action removeFilter\n   * @param {Object} dashboard\n   * @param {Object} filter\n   */\n  @action\n  async removeFilter(dashboard, filter) {\n    const removedFilter = filter.serialize();\n    removedFilter.source = filter.source;\n    const newFilters = get(dashboard, 'filters')\n      .toArray()\n      .map((fil) => {\n        const newFil = fil.serialize();\n        newFil.source = fil.source;\n        return newFil;\n      })\n      .filter((fil) => !isEqual(fil, removedFilter));\n    const filterQueryParams = await this.compression.compress({ filters: newFilters });\n\n    this.transitionToRoute('dashboards.dashboard', { queryParams: { filters: filterQueryParams } });\n  }\n\n  /**\n   * @action addFilter\n   * @param {Object} dashboard\n   * @param {Object} filter\n   */\n  @action\n  async addFilter(dashboard, filter) {\n    const store = this.store;\n    const { metadataService } = this;\n    const filters = dashboard.filters.toArray().map((fil) => {\n      const newFil = fil.serialize();\n      newFil.source = fil.source;\n      return newFil;\n    }); //Native array of serialized filters\n    const dimensionMeta = metadataService.getById(filter.type, filter.field, filter.dataSource);\n    const newFilter = store\n      .createFragment('bard-request-v2/fragments/filter', {\n        type: filter.type,\n        field: filter.field,\n        parameters: dimensionMeta.getDefaultParameters(),\n        operator: 'in',\n        values: [],\n        source: filter.dataSource,\n      })\n      .serialize();\n    newFilter.source = filter.dataSource;\n\n    filters.push(newFilter);\n\n    const filterQueryParams = await this.compression.compress({ filters });\n\n    this.transitionToRoute('dashboards.dashboard', { queryParams: { filters: filterQueryParams } });\n  }\n\n  /**\n   * @action clearFilterQueryParams - Remove query params as model enters clean state\n   */\n  @action\n  clearFilterQueryParams() {\n    set(this, 'filters', null);\n  }\n}\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/helpers/get-widget.js",["588"],"/**\n * Copyright 2018, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport { inject as service } from '@ember/service';\nimport Helper from '@ember/component/helper';\n\nexport default Helper.extend({\n  store: service(),\n\n  /**\n   * @method compute\n   * @param {String} id - widget id\n   * @returns {DS.Model} widget model\n   */\n  compute([id]) {\n    return this.store.peekRecord('dashboard-widget', id);\n  },\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/initializers/report-controllers.js",["589"],"/**\n * Copyright 2019, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * This initializer adds the report-to-widget logic to navi-reports controllers\n */\nimport ReportToWidget from 'navi-dashboards/mixins/controllers/report-to-widget';\nimport ReportsReportController from 'navi-reports/controllers/reports/report';\n\nexport function initialize(/* application */) {\n  ReportsReportController.reopen(ReportToWidget);\n}\n\nexport default {\n  name: 'report-controllers',\n  initialize,\n};\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/initializers/user-model.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/mixins/controllers/report-to-widget.js",["590"],"/**\n * Copyright 2021, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport Mixin from '@ember/object/mixin';\n\nexport default Mixin.create({\n  /**\n   * @method _createWidget\n   * @private\n   * @param {DS.Model} report - report to create a widget from\n   * @param {String} title - name of new widget\n   * @returns {DS.Model} unsaved widget model\n   */\n  _createWidget(report, title) {\n    let visualization = report.visualization.serialize();\n\n    return this.store.createRecord('dashboard-widget', {\n      title,\n      requests: [report.request.clone()],\n      visualization,\n    });\n  },\n\n  actions: {\n    /**\n     * Creates a widget and adds it to an existing dashboard\n     *\n     * @action addToDashboard\n     * @param {DS.Model} report - report to add\n     * @param {Number} id - target dashboard id\n     * @param {String} widgetTitle - name of new widget\n     */\n    addToDashboard(report, id, widgetTitle) {\n      // Create widget model\n      let widget = this._createWidget(report, widgetTitle);\n\n      // Transition to widgets/new route\n      this.transitionToRoute('dashboards.dashboard.widgets.add', id, {\n        queryParams: {\n          unsavedWidgetId: widget.tempId,\n        },\n      });\n    },\n\n    /**\n     * Creates a widget and adds it to a new dashboard\n     *\n     * @action addToNewDashboard\n     * @param {DS.Model} report - report to add\n     * @param {String} dashboardTitle - name of new dashboard\n     * @param {String} widgetTitle - name of new widget\n     */\n    addToNewDashboard(report, dashboardTitle, widgetTitle) {\n      // Create widget model\n      let widget = this._createWidget(report, widgetTitle);\n\n      this.transitionToRoute('dashboards.new', {\n        queryParams: {\n          title: dashboardTitle,\n          unsavedWidgetId: widget.tempId,\n        },\n      });\n    },\n  },\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboard-collections/collection.js",["591"],"/**\n * Copyright 2019, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\n\nimport Route from '@ember/routing/route';\n\nexport default Route.extend({\n  /**\n   * @method model\n   * @override\n   *\n   * Makes an ajax request to retrieve relevant dashbords in the collection\n   */\n  model({ collection_id }) {\n    return this.store.find('dashboard-collection', collection_id);\n  },\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboard-collections/index.js",["592"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport Route from '@ember/routing/route';\n\nexport default Route.extend({\n  /**\n   * @method model\n   * @override\n   * @returns {Object} - with an array of dashboard Collection models\n   */\n  model() {\n    return this.store.findAll('dashboardCollection');\n  },\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboards/dashboard/view.js",["593","594","595"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\n\nimport { inject as service } from '@ember/service';\nimport Route from '@ember/routing/route';\nimport { isEmpty } from '@ember/utils';\n\nexport default Route.extend({\n  /**\n   * @property {Ember.Service} dashboardData\n   */\n  dashboardData: service(),\n\n  /**\n   * @property {Service} compression\n   */\n  compression: service(),\n\n  /**\n   * @property {Service} metadataService\n   */\n  metadataService: service('navi-metadata'),\n\n  /**\n   * @property {Service} store\n   */\n  store: service(),\n\n  /**\n   * @property {Service} naviNotifications\n   */\n  naviNotifications: service(),\n\n  /**\n   * @private\n   * @property {Object} _widgetDataCache - stores most recent widget data\n   */\n  _widgetDataCache: null,\n\n  /**\n   * @override\n   * @property {Object} queryParams - any time the filters query params changes, rerun the model hook\n   */\n  queryParams: {\n    filters: {\n      refreshModel: true,\n    },\n  },\n\n  /**\n   * Adds filters from query params to the dashboard then\n   * makes an ajax request to retrieve relevant widgets in the dashboard\n   *\n   * @override\n   * @method model\n   * @param {Object} transition\n   */\n  async model(_, transition) {\n    const dashboard = this.modelFor('dashboards.dashboard');\n    const filterQueryParams = transition.to.queryParams.filters;\n    const cachedWidgetData = this._widgetDataCache;\n\n    //Record filters before and after setting from query params\n    const originalFilters = dashboard.get('filters').serialize();\n    try {\n      await this._addFiltersFromQueryParams(dashboard, filterQueryParams);\n    } catch (e) {\n      this.naviNotifications.add({\n        title: `Error decoding filter query params. Using default dashboard filters.`,\n        style: 'danger',\n        timeout: 'medium',\n      });\n    }\n    const newFilters = dashboard.get('filters').serialize();\n\n    const originalValuelessFilters = originalFilters.filter((fil) => fil.values.length === 0);\n    const newValuelessFilters = newFilters.filter((fil) => fil.values.length === 0);\n\n    const wasEmptyFilterAdded =\n      newValuelessFilters.length === originalValuelessFilters.length + 1 &&\n      newFilters.length === originalFilters.length + 1;\n    const wasEmptyFilterRemoved =\n      newValuelessFilters.length === originalValuelessFilters.length - 1 &&\n      newFilters.length === originalFilters.length - 1;\n\n    /**\n     * If we just added a new filter (no values yet) or just removed a filter with no values,\n     * return the last set of widget data because the requests will not have changed because\n     * empty filters are pruned from the request\n     */\n    if (cachedWidgetData && (wasEmptyFilterAdded || wasEmptyFilterRemoved)) {\n      return { dashboard, taskByWidget: cachedWidgetData };\n    }\n\n    this._cancelWidgetDataTasks();\n    const widgetsData = await this.dashboardData.fetchDataForDashboard(dashboard);\n    this.set('_widgetDataCache', widgetsData);\n\n    return { dashboard, taskByWidget: widgetsData };\n  },\n\n  /**\n   * Cancel running and enqueued widget data tasks, if any\n   *\n   * @private\n   * @method _cancelWidgetDataTasks\n   * @returns {Boolean} - true after canceling\n   */\n  _cancelWidgetDataTasks() {\n    const { id: dashboardId } = this.modelFor('dashboards.dashboard');\n    const { _widgetDataCache } = this;\n\n    if (!_widgetDataCache) {\n      return true;\n    }\n\n    for (const [widgetId, widgetTask] of Object.entries(_widgetDataCache)) {\n      widgetTask.cancel(`dashboard ${dashboardId} canceled widget task ${widgetId}`);\n    }\n\n    return true;\n  },\n\n  /**\n   * Update Model to have dirty attributes that match the filter query params\n   *\n   * @private\n   * @method addFiltersFromQueryParams\n   * @param {Object} dashboard\n   * @param {String} filterQueryParams\n   */\n  async _addFiltersFromQueryParams(dashboard, filterQueryParams) {\n    const modelFilters = dashboard.get('filters');\n\n    if (isEmpty(filterQueryParams)) {\n      return;\n    }\n\n    try {\n      const decompressedFilters = await this.compression.decompress(filterQueryParams);\n\n      if (!('filters' in decompressedFilters) || !Array.isArray(decompressedFilters.filters)) {\n        throw Error('Filter query params are not valid filters');\n      }\n\n      //Remove all filters from the fragment array\n      if (modelFilters.get('length') > 0) {\n        modelFilters.removeAt(0, modelFilters.get('length'));\n      }\n\n      decompressedFilters.filters.map((fil) => {\n        const newFragmentFields = {\n          type: fil.type,\n          field: fil.field,\n          parameters: fil.parameters,\n          operator: fil.operator,\n          values: fil.values,\n          source: fil.source,\n        };\n\n        const newFragment = this.store.createFragment('bard-request-v2/fragments/filter', newFragmentFields);\n        modelFilters.pushObject(newFragment);\n      });\n    } catch (e) {\n      throw Error(`Error decompressing filter query params: ${filterQueryParams}\\n${e}`);\n    }\n  },\n\n  /**\n   * @override\n   * @method deactivate - cancel tasks and reset filters, cache on exit of route\n   */\n  deactivate() {\n    this._super(...arguments);\n\n    this.controller.set('filters', null);\n\n    this.set('_widgetDataCache', null);\n  },\n\n  actions: {\n    /**\n     * @override\n     * @action willTransition\n     * @param {Transition} transition\n     */\n    willTransition(transition) {\n      //don't cancel on filters updates, cancelation is in the `model` hook if model or filter values have changed\n      if (transition.targetName !== this.routeName && transition.targetName !== 'dashboards.dashboard.index') {\n        this._cancelWidgetDataTasks();\n      }\n      return true;\n    },\n  },\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboards/dashboard/widgets/new.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboards-print/dashboards/dashboard/index.js",["596"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\n\nimport Route from '@ember/routing/route';\n\nexport default Route.extend({\n  /**\n   * @method redirect\n   * @override\n   */\n  redirect() {\n    let { id } = this.modelFor('dashboards-print.dashboards.dashboard');\n    this.replaceWith('dashboards-print.dashboards.dashboard.view', id);\n  },\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/routes/dashboards-print/dashboards/dashboard/view.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/services/dashboard-data.js",["597","598","599"],"/**\n * Copyright 2021, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport { A as arr } from '@ember/array';\nimport Service, { inject as service } from '@ember/service';\nimport { isEmpty } from '@ember/utils';\nimport { merge, flow } from 'lodash-es';\nimport { task, all, didCancel } from 'ember-concurrency';\nimport { computed, get } from '@ember/object';\nimport { v1 } from 'ember-uuid';\nimport config from 'ember-get-config';\nimport { isForbidden } from 'navi-core/helpers/is-forbidden';\nimport { getDefaultDataSourceName } from 'navi-data/utils/adapter';\n\nconst FETCH_MAX_CONCURRENCY = config.navi.widgetsRequestsMaxConcurrency || Infinity;\n\nexport default class DashboardDataService extends Service {\n  /**\n   * @property {Service} naviFacts\n   */\n  @service naviFacts;\n\n  /**\n   * @property {Service} store\n   */\n  @service store;\n\n  /**\n   * @property {Object} widgetOptions - options for the fact request\n   */\n  @computed\n  get widgetOptions() {\n    return {\n      page: 1,\n      perPage: 10000,\n    };\n  }\n\n  /**\n   * @method fetchDataForDashboard\n   * @param {Object} dashboard - dashboard model\n   * @returns {Promise} - Promise that resolves to a hash of the widget id to its TaskInstance\n   */\n  async fetchDataForDashboard(dashboard) {\n    const widgets = await dashboard.widgets;\n    const layout = dashboard.presentation?.layout;\n\n    return this.fetchDataForWidgets(dashboard.id, widgets, layout, [], this.widgetOptions);\n  }\n\n  /**\n   * @method fetchDataForWidgets\n   * @param {Number} dashboardId\n   * @param {Array} widgets - list of widget models with requests to fetch\n   * @param {Array} layout - dashboard layout\n   * @param {Array} decorators - array of functions to modify each request\n   * @param {Object} options - options for web service fetch\n   * @returns {Object} hash of the widget id to its TaskInstance\n   */\n  fetchDataForWidgets(dashboardId, widgets = [], layout = [], decorators = [], options = {}) {\n    const uuid = v1(),\n      taskByWidget = {};\n\n    // sort widgets by order in layout\n    const sortedWidgets = arr(layout)\n      .sortBy('row', 'column')\n      .map((layoutItem) => widgets.find((widget) => widget.id == layoutItem.widgetId))\n      .filter((widget) => widget);\n\n    sortedWidgets.forEach((widget) => {\n      const taskInstance = this._fetchRequestsForWidget.perform(dashboardId, widget, decorators, options, uuid);\n\n      taskByWidget[widget.id] = taskInstance;\n\n      /**\n       * bubbling 403 errors causes acceptance test to fail https://github.com/emberjs/ember-qunit/issues/592\n       * task still expectedly fails.\n       * TODO: no need for catch block when ^ resolves (needlessly catches task cancelation errors as well)\n       */\n      taskInstance.catch((e) => {\n        if (didCancel(e) || isForbidden(e)) {\n          return;\n        }\n        throw e;\n      });\n    });\n\n    return taskByWidget;\n  }\n\n  /**\n   * @property {Task} _fetchRequestsForWidget\n   * @private\n   * @param {Number} dashboardId\n   * @param {Object} widget - dashboard widget model\n   * @param {Array} decorators - array of functions to modify each request\n   * @param {Object} options - options for web service fetch\n   * @param {String} uuid - v1 UUID\n   * @yields {TaskInstance}\n   */\n  @task *_fetchRequestsForWidget(dashboardId, widget, decorators, options, uuid) {\n    const { dashboard, requests, id: widgetId } = widget;\n    const fetchTasks = [];\n\n    requests.forEach((request) => {\n      //construct custom header for each widget with uuid\n      options.customHeaders = {\n        uiView: `dashboard.${dashboardId}.${uuid}.${widgetId}`,\n      };\n\n      options.dataSourceName = request.dataSource || getDefaultDataSourceName();\n\n      const requestWithFilters = this._applyFilters(dashboard, request);\n      const filterErrors = this._getFilterErrors(dashboard, request);\n\n      // Replace serialized request with request fragment\n      let result = this._fetchRequest.perform(requestWithFilters, decorators, options, filterErrors);\n      fetchTasks.push(result);\n    });\n\n    return yield fetchTasks.length ? all(fetchTasks) : [];\n  }\n\n  /**\n   * @property {Task} _fetchRequest\n   * @private\n   * @param {Object} request\n   * @param {Object} options - options for web service fetch\n   * @param {Array} filterErrors - invalid Filter error objects\n   * @yields {TaskInstance}\n   */\n  @task({ enqueue: true, maxConcurrency: FETCH_MAX_CONCURRENCY })\n  *_fetchRequest(requestFragment, decorators, options, filterErrors) {\n    const request = this._decorate(decorators, requestFragment.serialize());\n    return yield this._fetch(request, options, filterErrors).then((result) => {\n      const serverErrors = result.response?.meta?.errors ?? [];\n\n      return merge({}, result, {\n        request: requestFragment,\n        response: { meta: { errors: [...serverErrors, ...filterErrors] } },\n      });\n    });\n  }\n\n  /**\n   * @method _fetch\n   * @private\n   * @param {Object} request - object to modify\n   * @param {Object} options - options for web service fetch\n   * @returns {Promise} response from request\n   */\n  _fetch(request, options) {\n    return this.naviFacts.fetch.perform(request, options);\n  }\n\n  /**\n   * @method _decorate\n   * @private\n   * @param {Array} decorators - array of functions to modify request\n   * @param {Object} request - object to modify\n   * @returns {Object} transformed version of request\n   */\n  _decorate(decorators, request) {\n    return isEmpty(decorators) ? request : flow(...decorators)(request);\n  }\n\n  /**\n   * Takes a dashboard and a request on a widget in that\n   * dashboard and returns a new request object filtered with\n   * applicable global dashboard filters.\n   *\n   * @param {Object} dashboard\n   * @param {Object} request\n   * @returns {Object}\n   */\n  _applyFilters(dashboard, request) {\n    const requestClone = request.clone();\n    this._getValidGlobalFilters(dashboard, request)\n      .filter((filter) => filter.values.length > 0)\n      .forEach((filter) => requestClone.addFilter(filter));\n\n    return requestClone;\n  }\n\n  /**\n   * Finds the invalid global filters for a\n   * request and return them.\n   *\n   * @param {Object} dashboard\n   * @param {Object} request\n   * @returns {Array<Object>}\n   */\n  _getInvalidGlobalFilters(dashboard, request) {\n    const filters = get(dashboard, 'filters') || [];\n\n    return filters.filter((filter) => !this._isFilterValid(request, filter));\n  }\n\n  /**\n   * Finds the valid global filters for a\n   * request and return them.\n   *\n   * @param {Object} dashboard\n   * @param {Object} request\n   * @returns {Array<Object>}\n   */\n  _getValidGlobalFilters(dashboard, request) {\n    const filters = get(dashboard, 'filters') || [];\n\n    return filters.filter((filter) => this._isFilterValid(request, filter));\n  }\n\n  /**\n   * Generate the Invalid Filter error objects for a\n   * request on a widget in a dashboard.\n   *\n   * @param {Object} dashboard\n   * @param {Object} request\n   * @return {Array<Object>}\n   */\n  _getFilterErrors(dashboard, request) {\n    const invalidFilters = this._getInvalidGlobalFilters(dashboard, request);\n\n    return invalidFilters.map((filter) => ({\n      detail: `\"${filter.field}\" is not a dimension in the \"${request.table}\" table.`,\n      title: 'Invalid Filter',\n    }));\n  }\n\n  /**\n   *\n   * @param {Object} request\n   * @param {Object} filter\n   * @returns {Boolean}\n   */\n  _isFilterValid(request, filter) {\n    const validDimensions = request.tableMetadata.dimensionIds;\n\n    return filter.source === request.dataSource && validDimensions.includes(filter.columnMetadata.id);\n  }\n}\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/addon/transforms/moment.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/adapters/dashboard-collection.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-action-list.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-actions/add-widget.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-actions/export.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-actions/schedule.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-dimension-selector.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-filters.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/dashboard-header.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/navi-dashboard.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/navi-widget.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/components/report-actions/add-to-dashboard.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/controllers/dashboards/dashboard/view.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/controllers/dashboards/dashboard/widgets/add.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/controllers/dashboards/dashboard/widgets/widget/view.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/controllers/dashboards/dashboard/widgets/widget.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/controllers/dashboards/dashboard.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/helpers/dashboard-action.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/helpers/get-widget.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/initializers/report-controllers.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/initializers/user-model.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/models/dashboard-collection.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboard-collections/collection.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboard-collections/index.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/clone.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/index.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/view.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/add.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/new.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/widget/clone-to-report.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/widget/edit.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/widget/view.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets/widget.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard/widgets.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/dashboard.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/index.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards/new.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards-print/dashboards/dashboard/index.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards-print/dashboards/dashboard/view.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards-print/dashboards/dashboard.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/routes/dashboards.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/services/dashboard-data.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/common/navi-loader.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboard-collections/collection.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboard-collections/error.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboard-collections/index.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboard-collections/loading.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboard-collections.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/index.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/view.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget/edit.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget/error.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget/invalid.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget/loading.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget/view.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets/widget.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/dashboard/widgets.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/error.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/index.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/loading.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards/new.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards-print/dashboards/dashboard/view.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/templates/dashboards.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/app/transforms/moment.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/config/coverage.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/config/ember-try.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/config/environment.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/ember-cli-build.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/index.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/testem.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/add-widget-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/dashboard-collections-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/dashboard-filter-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/dashboards-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/explore-widget-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/mutli-datasource-dashboards-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/print-dashboard-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/report-action-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/schedule-modal-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/acceptance/share-link-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/app/app.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/app/routes/directory/my-data.js",["600"],"import Route from '@ember/routing/route';\n\nexport default Route.extend({\n  beforeModel() {\n    this.transitionTo('dashboards');\n  },\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/config/deprecation-workflow.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/config/ember-intl.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/config/environment.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/config/targets.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/config.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/dashboard-collection.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/dashboard-widget.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/dashboard.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/delivery-rules.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/reports.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/fixtures/users.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/scenarios/default.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/dummy/mirage/serializers/application.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/dashboard-actions/add-widget-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/dashboard-actions/export-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/dashboard-dimension-selector-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/dashboard-filters-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/navi-dashboard-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/navi-widget-test.js",["601"],"import { A as arr } from '@ember/array';\nimport Component from '@ember/component';\nimport { helper as buildHelper } from '@ember/component/helper';\nimport { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, triggerEvent } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\nimport { assertTooltipContent } from 'ember-tooltips/test-support';\nimport { ForbiddenError } from 'ember-ajax/errors';\n\nconst WIDGET = {\n  id: 1,\n  title: 'Widget 1',\n  visualization: {\n    type: 'my-test-visualization',\n  },\n};\n\nmodule('Integration | Component | navi widget', function (hooks) {\n  setupRenderingTest(hooks);\n\n  hooks.beforeEach(function () {\n    this.owner.register(\n      'helper:route-action',\n      buildHelper(() => undefined),\n      {\n        instantiate: false,\n      }\n    );\n\n    // Mock a visualization component\n    this.owner.register('component:navi-visualizations/my-test-visualization', class extends Component {});\n  });\n\n  test('it renders', async function (assert) {\n    assert.expect(8);\n\n    this.set('widgetModel', WIDGET);\n    this.set('taskInstance', undefined);\n\n    await render(hbs`\n      <NaviWidget\n        @model={{this.widgetModel}}\n        @taskInstance={{this.taskInstance}}\n      />\n    `);\n\n    assert.dom('.navi-widget__title').hasText(WIDGET.title, 'widget title is rendered');\n\n    assert.dom('.loader-container').isVisible('loader is visible if task instance is not defined');\n\n    this.set('taskInstance', { isRunning: true });\n\n    assert.dom('.loader-container').isVisible('loader is visible if task instance is running');\n\n    assert.dom('.visualization-container').doesNotExist('visualization is not rendered while data is loading');\n\n    this.set('taskInstance', {\n      isSuccessful: true,\n      value: [],\n    });\n\n    assert.dom('.visualization-container').exists('visualization exists when task is finished');\n\n    assert.dom('.loader-container').isNotVisible('loader is hidden when task is finished');\n\n    this.set('taskInstance', {\n      isError: true,\n    });\n\n    assert.dom('.error-container').isVisible('error is shown on rejected promise');\n\n    this.set('taskInstance', {\n      isError: true,\n      error: new ForbiddenError(),\n    });\n\n    assert\n      .dom('.navi-report-invalid__info-message .fa-lock')\n      .isVisible('Unauthorized view should be shown when receiving ForbiddenError');\n  });\n\n  test('layout', async function (assert) {\n    assert.expect(4);\n\n    this.set('widgetModel', WIDGET);\n\n    this.set('layoutOptions', {\n      column: 2,\n      row: 1,\n      height: 4,\n      width: 10,\n    });\n\n    await render(hbs`\n      <NaviWidget\n        @model={{this.widgetModel}}\n        @layoutOptions={{this.layoutOptions}}\n      />\n    `);\n\n    assert\n      .dom('.grid-stack-item')\n      .hasAttribute('data-gs-x', '2', 'given column is correctly translated to gridstack data attribute');\n\n    assert\n      .dom('.grid-stack-item')\n      .hasAttribute('data-gs-y', '1', 'given row is correctly translated to gridstack data attribute');\n\n    assert\n      .dom('.grid-stack-item')\n      .hasAttribute('data-gs-width', '10', 'given width is correctly translated to gridstack data attribute');\n\n    assert\n      .dom('.grid-stack-item')\n      .hasAttribute('data-gs-height', '4', 'given height is correctly translated to gridstack data attribute');\n  });\n\n  test('visualization', async function (assert) {\n    assert.expect(4);\n\n    const data = arr([1, 2, 3]),\n      metadata = {\n        xAxis: 'timeseries',\n      },\n      taskInstance = {\n        isSuccessful: true,\n        value: data,\n      };\n\n    this.set('widgetModel', {\n      id: 1,\n      title: 'Widget 1',\n      visualization: {\n        type: 'my-test-visualization',\n        version: 1,\n        metadata,\n      },\n    });\n\n    this.set('taskInstance', taskInstance);\n\n    // Make sure we have a reference to the grid-stack-item so we can test the event system\n    let containerComponent = null;\n\n    this.owner.register(\n      'component:navi-visualizations/my-test-visualization',\n      class extends Component {\n        classNames = ['test-visualization'];\n\n        didInsertElement() {\n          super.didInsertElement(...arguments);\n\n          containerComponent = this.containerComponent;\n\n          // Assert model and options are correct\n          assert.deepEqual(this.options, metadata, 'metadata is passed to visualization as options');\n\n          assert.deepEqual(this.model.toArray(), data, 'data is passed to visualization as model');\n\n          this.containerComponent.element.addEventListener('resizestop', () => {\n            assert.ok(true, 'visualization can listen to resize events on containerComponent property');\n          });\n        }\n      }\n    );\n\n    await render(hbs`\n      <NaviWidget\n        @model={{this.widgetModel}}\n        @taskInstance={{this.taskInstance}}\n      />\n    `);\n\n    assert.dom('.test-visualization').exists('visualization component is rendered');\n\n    // Test visualization listening to events\n    triggerEvent(containerComponent.element, 'resizestop');\n  });\n\n  test('delete action visibility', async function (assert) {\n    assert.expect(2);\n\n    this.set('widgetModel', WIDGET);\n\n    await render(hbs`\n      <NaviWidget\n        @model={{this.widgetModel}}\n        @canEdit={{this.canEdit}}\n      />\n    `);\n\n    this.set('canEdit', true);\n    assert.dom('.navi-widget__delete-btn').isVisible('Delete action is visible when user can edit');\n\n    this.set('canEdit', false);\n    assert.dom('.navi-widget__delete-btn').isNotVisible('Delete action is hidden when user can not edit');\n  });\n\n  test('filter warning icon', async function (assert) {\n    assert.expect(3);\n\n    const data = arr([\n      {\n        response: {\n          meta: {\n            errors: [\n              {\n                title: 'Invalid Filter',\n                detail: \"Dimension A doesn't exist in this widget's logical table\",\n              },\n              {\n                title: 'Invalid Filter',\n                detail: \"Dimension B doesn't exist in this widget's logical table\",\n              },\n            ],\n          },\n        },\n      },\n    ]);\n\n    this.set('widgetModel', WIDGET);\n\n    this.set('taskInstance', {\n      isSuccessful: true,\n      value: data,\n    });\n\n    await render(hbs`\n      <NaviWidget\n        @model={{this.widgetModel}}\n        @taskInstance={{this.taskInstance}}\n      />\n    `);\n\n    assert\n      .dom('.navi-widget__filter-errors-icon')\n      .isVisible('Widget Filters Error icon is visible when the widget has invalid filters');\n\n    //Render tooltip on warning icon\n    await triggerEvent('.navi-widget__filter-errors-icon', 'mouseenter');\n\n    //Tooltip contains all error messages separated by new line characters\n    assertTooltipContent(assert, {\n      contentString: `Unable to apply filter(s):\\nDimension A doesn't exist in this widget's logical table\\nDimension B doesn't exist in this widget's logical table`,\n    });\n\n    const newData = arr([\n      {\n        response: {\n          meta: {},\n        },\n      },\n    ]);\n\n    this.set('taskInstance', {\n      isSuccessful: true,\n      value: newData,\n    });\n\n    assert\n      .dom('.navi-widget__filter-errors-icon')\n      .isNotVisible('Widget Filters Error icon is not visible when the widget has no invalid filters');\n  });\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/integration/components/report-actions/add-to-dashboard-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/controllers/dashboards/dashboard/view-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/controllers/dashboards/dashboard/widgets/add-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/helpers/get-widget-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/initializers/user-model-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/mixins/controllers/report-to-widget-test.js",["602","603","604","605","606","607"],"import EmberObject from '@ember/object';\nimport Ember from 'ember';\nimport ReportToWidgetMixin from 'navi-dashboards/mixins/controllers/report-to-widget';\nimport { module, test } from 'qunit';\n\nmodule('Unit | Mixin | controllers/report to widget', function () {\n  test('addToDashboard', function (assert) {\n    assert.expect(3);\n\n    const visualizationMetadata = 'foo bar',\n      serializedRequest = 123,\n      dashboardId = 5,\n      tempWidgetId = 1000,\n      reportModel = {\n        request: {\n          clone: () => serializedRequest,\n        },\n        visualization: {\n          serialize: () => visualizationMetadata,\n        },\n      },\n      subject = EmberObject.extend(ReportToWidgetMixin, Ember.ActionHandler, {\n        /* == Transition Asserts == */\n        transitionToRoute: (route, id, { queryParams }) => {\n          assert.equal(\n            route,\n            'dashboards.dashboard.widgets.add',\n            'addToDashboard action transitions to new widget route'\n          );\n\n          assert.equal(id, dashboardId, 'addToDashboard transitions to correct dashboard id');\n\n          assert.equal(queryParams.unsavedWidgetId, tempWidgetId, \"Widget's temporary id is passed as a query param\");\n        },\n      }).create({\n        store: {\n          createRecord() {\n            return { tempId: tempWidgetId };\n          },\n        },\n      });\n\n    // Trigger the action\n    subject.send('addToDashboard', reportModel, dashboardId, 'Test Title');\n  });\n\n  test('addToNewDashboard', function (assert) {\n    assert.expect(3);\n\n    const visualizationMetadata = 'foo bar',\n      serializedRequest = 123,\n      tempWidgetId = 1000,\n      reportModel = {\n        request: {\n          clone: () => serializedRequest,\n        },\n        visualization: {\n          serialize: () => visualizationMetadata,\n        },\n      },\n      subject = EmberObject.extend(ReportToWidgetMixin, Ember.ActionHandler, {\n        /* == Transition Asserts == */\n        transitionToRoute(route, { queryParams }) {\n          assert.equal(route, 'dashboards.new', 'addToNewDashboard action transitions to new dashboard route');\n\n          assert.equal(queryParams.title, 'Custom Dashboard Title', 'Dashboard title is passed as a query param');\n\n          assert.equal(queryParams.unsavedWidgetId, tempWidgetId, \"Widget's temporary id is passed as a query param\");\n        },\n      }).create({\n        store: {\n          createRecord() {\n            return { tempId: tempWidgetId };\n          },\n        },\n      });\n\n    // Trigger the action\n    subject.send('addToNewDashboard', reportModel, 'Custom Dashboard Title', 'Test Title');\n  });\n\n  test('_createWidget', function (assert) {\n    assert.expect(4);\n\n    let visualizationMetadata = 'foo bar',\n      serializedRequest = 123,\n      tempWidgetId = 1000,\n      reportModel = {\n        request: {\n          clone: () => serializedRequest,\n        },\n        visualization: {\n          serialize: () => visualizationMetadata,\n        },\n      },\n      subject = EmberObject.extend(ReportToWidgetMixin).create({\n        /* == Store Asserts == */\n        store: {\n          createRecord(type, record) {\n            assert.equal(type, 'dashboard-widget', 'Widget model is created through store');\n\n            assert.equal(record.title, 'Test Title', 'Given title is used for widget');\n\n            assert.deepEqual(\n              record.requests,\n              [serializedRequest],\n              'Requests is populated with the serialized request from the model'\n            );\n\n            assert.equal(\n              record.visualization,\n              visualizationMetadata,\n              'visualization metadata is populated by property in report'\n            );\n\n            return {\n              tempId: tempWidgetId,\n            };\n          },\n        },\n      });\n\n    subject._createWidget(reportModel, 'Test Title');\n  });\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/models/dashboard-collection-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboard-collections/dashboard-collections-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboard-collections/index-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/clone-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/view-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/widgets/add-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/widgets/new-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/widgets/widget/clone-to-report-test.js",["608"],"import { run } from '@ember/runloop';\nimport Service from '@ember/service';\nimport { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\n\nlet Store, MockAuthor;\n\nmodule('Unit | Route | dashboards/dashboard/widgets/widget/clone-to-report', function (hooks) {\n  setupTest(hooks);\n\n  hooks.beforeEach(function () {\n    Store = this.owner.lookup('service:store');\n    MockAuthor = Store.createRecord('user', { id: 'Gannon' });\n\n    this.owner.register(\n      'service:user',\n      Service.extend({\n        getUser: () => MockAuthor,\n      })\n    );\n  });\n\n  test('model', function (assert) {\n    assert.expect(2);\n\n    return run(() => {\n      let widget = {\n          title: 'Twilight Princess',\n          author: 'Wolf Link',\n          request: {\n            clone: () => null,\n          },\n          visualization: {\n            type: 'goal-gauge',\n          },\n          toJSON() {\n            return Object.assign({}, this);\n          },\n        },\n        route = this.owner.factoryFor('route:dashboards/dashboard/widgets/widget/clone-to-report').create({\n          modelFor() {\n            return widget;\n          },\n        });\n\n      let report = route.model();\n      assert.equal(\n        report.get('title'),\n        `Copy of ${widget.title}`,\n        'Created report title is \"Copy of\" + original title'\n      );\n\n      assert.equal(report.get('author.id'), MockAuthor.id, 'Current user is the author of the created report');\n    });\n  });\n\n  test('_cloneToReport', function (assert) {\n    assert.expect(2);\n\n    return run(() => {\n      const route = this.owner.lookup('route:dashboards/dashboard/widgets/widget/clone-to-report'),\n        widget = {\n          title: 'Twilight Princess',\n          author: 'Wolf Link',\n          request: {\n            clone: () => null,\n          },\n          visualization: {\n            type: 'goal-gauge',\n          },\n          toJSON() {\n            return Object.assign({}, this);\n          },\n        };\n\n      let clonedReport = route._cloneToReport(widget);\n      assert.equal(\n        clonedReport.get('title'),\n        `Copy of ${widget.title}`,\n        'Created report title is \"Copy of\" + original title'\n      );\n\n      assert.equal(clonedReport.get('author.id'), MockAuthor.id, 'Current user is the author of the created report');\n    });\n  });\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboard/widgets/widget-test.js",["609"],"import Route from '@ember/routing/route';\nimport { getOwner } from '@ember/application';\nimport { run } from '@ember/runloop';\nimport { reject, resolve } from 'rsvp';\nimport { A as array } from '@ember/array';\nimport { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\n\nmodule('Unit | Route | dashboards/dashboard/widgets/widget', function (hooks) {\n  setupTest(hooks);\n\n  test('model hook', async function (assert) {\n    assert.expect(3);\n\n    let route = this.owner.factoryFor('route:dashboards/dashboard/widgets/widget').create({\n      store: {\n        peekAll() {\n          return array([{ id: undefined, tempId: '123-456' }]);\n        },\n      },\n      modelFor() {\n        return array([{ id: 1 }]);\n      },\n    });\n\n    /* == Persisted id == */\n    let model = await route.model({ widget_id: 1 });\n    assert.equal(model.id, 1, 'Route model looks up widget based on id');\n\n    /* == Temp id == */\n    model = await route.model({ widget_id: '123-456' });\n    assert.equal(model.tempId, '123-456', 'Route can find widgets based on temp id');\n\n    /* == Error widget not found == */\n    try {\n      route.model({ widget_id: 10 });\n    } catch (error) {\n      assert.equal(\n        error.message,\n        'Widget 10 could not be found',\n        'An error notification is shown when widget does not exist in dashboard'\n      );\n    }\n  });\n\n  test('_findByTempId', function (assert) {\n    assert.expect(2);\n\n    let route = this.owner.factoryFor('route:dashboards/dashboard/widgets/widget').create({\n      store: {\n        peekAll() {\n          return [{ tempId: 1 }, { tempId: 2 }, { tempId: 3 }];\n        },\n      },\n    });\n\n    assert.equal(route._findByTempId(2).tempId, 2, 'Widgets can be found by temp id');\n\n    assert.equal(route._findByTempId(50), undefined, 'Undefined is returned when no widget has the given temp id');\n  });\n\n  test('saveWidget action', function (assert) {\n    assert.expect(3);\n\n    let savePromise = reject(),\n      mockWidget = {\n        save: () => savePromise,\n      },\n      mockNotificationService = {},\n      route = this.owner.factoryFor('route:dashboards/dashboard/widgets/widget').create({\n        naviNotifications: mockNotificationService,\n        replaceWith: () => undefined, // Functionality covered in acceptance test\n      });\n\n    return run(() => {\n      /* == Error save == */\n      mockNotificationService.add = ({ style }) => {\n        assert.equal(style, 'danger', 'Danger notification is shown when save was unsuccessful');\n      };\n\n      route.send('saveWidget', mockWidget);\n\n      return savePromise.catch(() => {\n        /* == Successful save == */\n        mockNotificationService.add = ({ style }) => {\n          assert.equal(style, 'success', 'Success notification is shown when save was successful');\n        };\n        getOwner(route).register(\n          'route:dashboards/dashboard',\n          Route.extend({\n            refresh() {\n              assert.ok(true, 'Parent dashboard route is asked to refresh with latest widget changes');\n            },\n          })\n        );\n        savePromise = resolve();\n\n        route.send('saveWidget', mockWidget);\n        return savePromise;\n      });\n    });\n  });\n});\n","/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/dashboards-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/index-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/routes/dashboards/new-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/services/dashboard-data-test.js",[],"/Users/hinterlong/Desktop/trash/yavin/packages/dashboards/tests/unit/transforms/moment-test.js",[],{"ruleId":"610","severity":1,"message":"611","line":15,"column":1,"nodeType":"612","endLine":15,"endColumn":42},{"ruleId":"610","severity":1,"message":"611","line":19,"column":1,"nodeType":"612","endLine":19,"endColumn":42},{"ruleId":"613","severity":1,"message":"614","line":11,"column":8,"nodeType":"615","endLine":11,"endColumn":17},{"ruleId":"610","severity":1,"message":"611","line":12,"column":1,"nodeType":"612","endLine":12,"endColumn":42},{"ruleId":"613","severity":1,"message":"614","line":14,"column":8,"nodeType":"615","endLine":14,"endColumn":17},{"ruleId":"610","severity":1,"message":"611","line":15,"column":1,"nodeType":"612","endLine":15,"endColumn":42},{"ruleId":"616","severity":1,"message":"617","line":10,"column":1,"nodeType":"612","endLine":10,"endColumn":82},{"ruleId":"618","severity":1,"message":"619","line":48,"column":24,"nodeType":"620","endLine":48,"endColumn":49,"fix":"621"},{"ruleId":"618","severity":1,"message":"619","line":88,"column":24,"nodeType":"620","endLine":88,"endColumn":49,"fix":"622"},{"ruleId":"623","severity":1,"message":"624","line":8,"column":16,"nodeType":"620","endLine":19,"endColumn":3},{"ruleId":"616","severity":1,"message":"617","line":7,"column":1,"nodeType":"612","endLine":7,"endColumn":82},{"ruleId":"625","severity":1,"message":"626","line":7,"column":16,"nodeType":"620","endLine":66,"endColumn":3},{"ruleId":"623","severity":1,"message":"624","line":8,"column":16,"nodeType":"620","endLine":18,"endColumn":3},{"ruleId":"623","severity":1,"message":"624","line":7,"column":16,"nodeType":"620","endLine":16,"endColumn":3},{"ruleId":"623","severity":1,"message":"624","line":10,"column":16,"nodeType":"620","endLine":197,"endColumn":3},{"ruleId":"627","severity":1,"message":"628","line":178,"column":5,"nodeType":"629","endLine":178,"endColumn":20},{"ruleId":"630","severity":1,"message":"631","line":183,"column":3,"nodeType":"632","endLine":196,"endColumn":4},{"ruleId":"623","severity":1,"message":"624","line":8,"column":16,"nodeType":"620","endLine":17,"endColumn":3},{"ruleId":"610","severity":1,"message":"611","line":10,"column":1,"nodeType":"612","endLine":10,"endColumn":47},{"ruleId":"618","severity":1,"message":"619","line":195,"column":21,"nodeType":"620","endLine":195,"endColumn":46,"fix":"633"},{"ruleId":"618","severity":1,"message":"619","line":209,"column":21,"nodeType":"620","endLine":209,"endColumn":46,"fix":"634"},{"ruleId":"623","severity":1,"message":"624","line":3,"column":16,"nodeType":"620","endLine":7,"endColumn":3},{"ruleId":"613","severity":1,"message":"614","line":2,"column":8,"nodeType":"615","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"617","line":3,"column":1,"nodeType":"612","endLine":3,"endColumn":87},{"ruleId":"625","severity":1,"message":"626","line":22,"column":17,"nodeType":"620","endLine":35,"endColumn":9},{"ruleId":"623","severity":1,"message":"624","line":22,"column":17,"nodeType":"620","endLine":35,"endColumn":9},{"ruleId":"625","severity":1,"message":"626","line":61,"column":17,"nodeType":"620","endLine":70,"endColumn":9},{"ruleId":"623","severity":1,"message":"624","line":61,"column":17,"nodeType":"620","endLine":70,"endColumn":9},{"ruleId":"625","severity":1,"message":"626","line":96,"column":17,"nodeType":"620","endLine":96,"endColumn":56},{"ruleId":"623","severity":1,"message":"624","line":17,"column":7,"nodeType":"620","endLine":19,"endColumn":9},{"ruleId":"623","severity":1,"message":"624","line":90,"column":11,"nodeType":"620","endLine":94,"endColumn":13},"ember/no-computed-properties-in-native-classes","Don't use computed properties with native classes. Use getters or @tracked properties instead.","ImportDeclaration","ember/no-classic-components","Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)","ImportDefaultSpecifier","ember/no-mixins","Don't use a mixin","ember/no-get","Use ES5 getters (`this.property`) instead of Ember's `get` function","CallExpression",{"range":"635","text":"636"},{"range":"637","text":"636"},"ember/no-classic-classes","Native JS classes should be used instead of classic classes","ember/no-new-mixins","Don't create new mixins","ember/no-controller-access-in-routes","Do not access controller in route outside of setupController/resetController","MemberExpression","ember/no-actions-hash","Use the @action decorator instead of declaring an actions hash","Property",{"range":"638","text":"636"},{"range":"639","text":"636"},[1280,1305],"dashboard.filters",[2572,2597],[6341,6366],[6704,6729]]