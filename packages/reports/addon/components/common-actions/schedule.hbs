{{!-- Copyright 2021, Yahoo Holdings Inc. Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms. --}}
{{yield (queue (toggle "showModal" this) this.onOpen)}}
<DenaliModal
  @isOpen={{this.showModal}}
  @onClose={{queue this.closeModal (fn this.onRevert this.localDeliveryRule)}}
  ...attributes as |Modal|
>
  <Modal.Content>
    <h3 class="schedule__header--primary m-b-10">Schedule {{this.localDeliveryRule.deliveryType}}</h3>
    {{#if (is-rejected this.deliveryRule)}}
        <DenaliAlert @style="danger" class="m-b-30" as |Alert|>
          <Alert.Title>Error</Alert.Title>
          <Alert.Context>An error occurred while fetching the schedule for this {{this.localDeliveryRule.deliveryType}}.</Alert.Context>
        </DenaliAlert>
    {{else}}
        {{#if this.notification}}	
          <DenaliAlert @style="danger" class="m-b-30" as |Alert|>
            <Alert.Title>Error</Alert.Title>
            <Alert.Context>{{this.notification.text}}</Alert.Context>
          </DenaliAlert>
        {{/if}}
    {{/if}}

    {{debugger}}
    {{#if (is-pending this.deliveryRule)}}
      <NaviLoader />
    {{else}}
      <DenaliInputGroup
        @label="Recipients"
        @isStacked={{true}}
        class="{{unless this.isRuleValid "schedule-modal__recipients--invalid"}} m-b-30"
      >
        <NaviEmailInput
          class="schedule-modal__input--recipients w-full"
          @emails={{readonly this.localDeliveryRule.recipients}}
          @onUpdateEmails={{this.updateRecipients}}
          @isDisabled={{is-rejected this.deliveryRule}}
        />
        <div class="schedule-modal__helper-recipients">
          Please enter valid email addresses separated by commas.
        </div>
      </DenaliInputGroup>
      <DenaliInputGroup @label="Frequency" class="m-b-30">
        <PowerSelect
          class="w-full"
          @triggerClass="schedule-modal__frequency-trigger w-full"
          @dropdownClass="w-full"
          @options={{this.frequencies}}
          @selected={{this.localDeliveryRule.frequency}}
          @disabled={{is-rejected this.deliveryRule}}
          @searchEnabled={{false}}
          @onChange={{fn (mut this.localDeliveryRule.frequency)}}
          @renderInPlace={{true}}
          as | frequency |
        >
          {{capitalize frequency}}
        </PowerSelect>
      </DenaliInputGroup>
      <DenaliInputGroup @label="Format" class="m-b-30">
        <PowerSelect
          class="w-full"
          @triggerClass="schedule-modal__format-trigger w-full"
          @dropdownClass="w-full"
          @disabled={{lt this.formats.length 2}}
          @options={{this.formats}}
          @selected={{this.localDeliveryRule.format.type}}
          @searchEnabled={{false}}
          @onChange={{this.updateFormat}}
          @renderInPlace={{true}}
          as | format |
        >
          {{format}}
        </PowerSelect>
      </DenaliInputGroup>
      {{#if (feature-flag "enabledNotifyIfData")}}
        <DenaliInputGroup @label="Only send if data is present" class="m-b-30">
          <DenaliSwitch
            class="schedule-modal__must-have-data-toggle"
            @isEnabled={{this.localDeliveryRule.schedulingRules.mustHaveData}}
            @onChange={{toggle "mustHaveData" this.localDeliveryRule.schedulingRules}}/>
        </DenaliInputGroup>
      {{/if}}
      {{#if (is-rejected this.deliveryRule)}}
        <DenaliButton
          class="schedule-modal__cancel-btn m-r-5"
          @style="solid"
          disabled={{this.isSaving}}
          type="button"
          {{on "click" (queue this.closeModal (fn this.onRevert this.localDeliveryRule))}}
        > Cancel
        </DenaliButton>
      {{else}}
        <DenaliButton
          class="schedule-modal__save-btn m-r-5"
          disabled={{this.disableSave}}
          isLoading={{this.isSaving}}
          {{on "click" (queue (toggle "isSaving" this) this.doSave)}}
        >        
          {{#if this.localDeliveryRule.isNew}}
            Save
          {{else}}
            Save Changes
          {{/if}}
        </DenaliButton>
        <DenaliButton
          class="schedule-modal__cancel-btn m-r-5"
          disabled={{this.isSaving}}
          style="ghost"
          type="button"
          {{on "click" (queue this.closeModal (fn this.onRevert this.localDeliveryRule))}}
        >
          {{#if this.localDeliveryRule.hasDirtyAttributes}}
            Cancel
          {{else}}
            Close
          {{/if}}
        </DenaliButton>
      {{/if}}
      {{#unless this.localDeliveryRule.isNew}}
        <CommonActions::Delete
          class="schedule-modal__delete-btn button is-danger"
          @disabled={{this.isSaving}}
          @model={{this.localDeliveryRule}}
          @deleteAction={{queue this.doDelete this.closeModal}}
        >
          Delete
        </CommonActions::Delete>
      {{/unless}}
    {{/if}}
  </Modal.Content>
</DenaliModal>
