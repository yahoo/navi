{{!-- Copyright 2020, Yahoo Holdings Inc. Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms. --}}

<div ...attributes>
  {{!-- Check if in need of disabling the button when the action should be disabled --}}
  <button type="button" class="schedule-action__button" disabled={{@disabled}} {{on "click" (queue (toggle "showModal" this) this.onOpen)}}>
    <NaviIcon @icon="clock-o" class="schedule-action__icon" />
    {{#if hasBlock}}
      <span class="schedule-action__icon-label">{{yield}}</span>
    {{/if}}
  </button>

  <DenaliModal
    @isOpen={{this.showModal}}
    @onClose={{queue this.closeModal (fn this.onRevert this.localDeliveryRule)}}
    ...attributes as | modal |
  >
    <modal.Header class="schedule-modal__header navi-modal-header">
      <div class="schedule-modal__header--primary primary-header">Schedule "{{capitalize @model.title}}"</div>
    </modal.Header>
    <modal.Content>
      {{#if (is-rejected this.deliveryRule)}}
          <DenaliAlert @type="danger" class="m-b-30" as |Alert|>
            <Alert.Title>Error</Alert.Title>
            <Alert.Context>An error occurred while fetching the schedule for this {{this.localDeliveryRule.deliveryType}}.</Alert.Context>
          </DenaliAlert>
      {{else}}
          {{#if this.notification}}	
            <DenaliAlert @type="danger" class="m-b-30" as |Alert|>
              <Alert.Title>Error</Alert.Title>
              <Alert.Context>{{this.notification.text}}</Alert.Context>
            </DenaliAlert>
          {{/if}}
      {{/if}}
      {{#if (is-pending this.deliveryRule)}}
          <NaviLoader />
      {{else}}
          <NaviEmailInput
            class="schedule-modal__input--recipients text-input"
            @emails={{readonly this.localDeliveryRule.recipients}}
            @onUpdateEmails={{this.updateRecipients}}
            @isDisabled={{is-rejected this.deliveryRule}}
          />
          <div class="schedule-modal__helper-recipients  m-b-30">
            Please enter valid email addresses separated by commas.
          </div>
          <DenaliInputGroup class="m-b-30" @label="Frequency" as |Group|>
              <Group.Select
                class="schedule-modal__dropdown schedule-modal__dropdown--frequency"
                @options={{this.frequencies}}
                @selectedOption={{this.localDeliveryRule.frequency}}
                @onChange={{fn (mut this.localDeliveryRule.frequency)}}
                disabled={{is-rejected this.deliveryRule}}
                as | frequency |
              >
                {{capitalize frequency}}
              </Group.Select>
          </DenaliInputGroup>
          <DenaliInputGroup class="m-b-30" @label="Format" as |Group|>
              <Group.Select
                class="schedule-modal__dropdown schedule-modal__dropdown--format"
                disabled={{lt this.formats.length 2}}
                @options={{this.formats}}
                @selectedOption={{this.localDeliveryRule.format.type}}
                @onChange={{this.updateFormat}}
                as | format |
              >
                {{format}}
              </Group.Select>
          </DenaliInputGroup>
          {{#if (feature-flag "enabledNotifyIfData")}}
            <DenaliInputGroup class="m-b-30" @label="Only send if data is present" as |Group|>
              <Group.Switch
                class="schedule-modal__must-have-data-toggle"
                @isEnabled={{this.localDeliveryRule.schedulingRules.mustHaveData}}
                @onChange={{toggle "mustHaveData" this.localDeliveryRule.schedulingRules}}
              />
            </DenaliInputGroup>
          {{/if}}
          <div class="schedule-modal__btn-container btn-container">
            {{#if (is-rejected this.deliveryRule)}}
              <DenaliButton
                class="schedule-modal__cancel-btn m-5"
                @style="solid"
                disabled={{this.isSaving}}
                type="button"
                {{on "click" (queue this.closeModal (fn this.onRevert this.localDeliveryRule))}}
              > Cancel
              </DenaliButton>
            {{else}}
              <DenaliButton
                class="schedule-modal__save-btn m-5"
                disabled={{this.disableSave}}
                {{on "click" (queue (toggle "isSaving" this) this.doSave)}}
              >
                {{#if this.isSaving}}
                  <NaviLoadingMessage>
                    Saving schedule
                  </NaviLoadingMessage>
                {{else}}
                  {{#if this.localDeliveryRule.isNew}}Save{{else}}Save Changes{{/if}}
                {{/if}}
              </DenaliButton>
              <DenaliButton
                class="schedule-modal__cancel-btn m-5"
                disabled={{this.isSaving}}
                type="button"
                {{on "click" (queue this.closeModal (fn this.onRevert this.localDeliveryRule))}}
              >
                {{#if this.localDeliveryRule.hasDirtyAttributes}}
                  Cancel
                {{else}}
                  Close
                {{/if}}
              </DenaliButton>
            {{/if}}
            {{#unless this.localDeliveryRule.isNew}}
              <CommonActions::Delete
                class="schedule-modal__delete-btn m-5"
                @disabled={{this.isSaving}}
                @model={{this.localDeliveryRule}}
                @modelName="schedule"
                @headerMsg={{concat "Delete schedule for " "\"" @model.title "\""}}
                @warnMsg={{concat "Are you sure you want to delete the schedule for this" this.localDeliveryRule.deliveryType}}
                @deleteAction={{queue this.doDelete this.closeModal}}
              >
                Delete
              </CommonActions::Delete>
            {{/unless}}
          </div>
      {{/if}}
    </modal.Content>
  </DenaliModal>
</div>
