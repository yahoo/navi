[{"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/.eslintrc.js":"1","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/.prettierrc.js":"2","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/.template-lintrc.js":"3","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/dimension-bulk-import-simple.js":"4","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/dimension-bulk-import.js":"5","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/dropdown-date-picker.js":"6","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/editable-label.js":"7","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/metric-filter-config.js":"8","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/missing-intervals-warning.js":"9","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-collection.js":"10","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-date-picker.js":"11","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-email-input.js":"12","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-loading-message.js":"13","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-modal.js":"14","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-table-select-item.js":"15","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-table-select-trigger.js":"16","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-tag-input.js":"17","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/paginated-scroll-list.js":"18","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/print-report-view.js":"19","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-actions/base-action.js":"20","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-actions/export.js":"21","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-actions/multiple-format-export.js":"22","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-actions.js":"23","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-builder.js":"24","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-view.js":"25","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-visualization.js":"26","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/unauthorized-table.js":"27","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/can-having.js":"28","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/delivery-rule-action.js":"29","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/format-interval-inclusive-inclusive.js":"30","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/get-user.js":"31","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/guess-timezone.js":"32","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/item-action.js":"33","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/model-for.js":"34","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/string-contains.js":"35","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/update-report-action.js":"36","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/mixins/collection-selector.js":"37","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/mixins/report-route.js":"38","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/models/report-collection.js":"39","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/routes/report-collections/collection.js":"40","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/routes/report-collections/index.js":"41","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/serializers/report-collection.js":"42","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon-test-support/vertical-collection.js":"43","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/adapters/report-collection.js":"44","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/column-selector.js":"45","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/common-actions/delete.js":"46","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/common-actions/get-api.js":"47","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/common-actions/schedule.js":"48","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/common-actions/share.js":"49","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/dimension-bulk-import-simple.js":"50","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/dimension-bulk-import.js":"51","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/dropdown-date-picker.js":"52","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/editable-label.js":"53","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/favorite-item.js":"54","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-builders/base.js":"55","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-builders/collapsed.js":"56","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-builders/dimension.js":"57","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-builders/metric.js":"58","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-builders/time-dimension.js":"59","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-collection.js":"60","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/dimension-select.js":"61","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/invalid-value.js":"62","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/multi-value-input.js":"63","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/null-input.js":"64","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/range-input.js":"65","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/time-dimension/current.js":"66","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/time-dimension/date.js":"67","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/time-dimension/lookback-trigger.js":"68","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/time-dimension/lookback.js":"69","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/time-dimension/range.js":"70","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/value-input.js":"71","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/grouped-list.js":"72","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/metric-filter-config.js":"73","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/missing-intervals-warning.js":"74","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-action-list.js":"75","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-collection.js":"76","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-column-config/base.js":"77","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-column-config/item.js":"78","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-column-config.js":"79","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-date-picker.js":"80","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-email-input.js":"81","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-email-tag.js":"82","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-loading-message.js":"83","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-modal.js":"84","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-table-select-item.js":"85","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-table-select-trigger.js":"86","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-table-select.js":"87","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-tag-input/tag.js":"88","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-tag-input.js":"89","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/paginated-scroll-list.js":"90","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/parameter-list-item.js":"91","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/pick-single.js":"92","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/power-select-bulk-import-trigger.js":"93","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/power-select-collection-options.js":"94","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/print-report-view.js":"95","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-actions/base-action.js":"96","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-actions/export.js":"97","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-actions/multiple-format-export.js":"98","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-actions/save-as.js":"99","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-actions.js":"100","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-builder.js":"101","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-header.js":"102","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-view-overlay.js":"103","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-view.js":"104","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-visualization.js":"105","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/routes/reports-report-error.js":"106","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/unauthorized-table.js":"107","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/visualization-toggle.js":"108","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/delivery-rule.js":"109","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/item.js":"110","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/report/table-visualization.js":"111","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/column.js":"112","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/constraint.js":"113","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/fili.js":"114","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/filter.js":"115","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/sort.js":"116","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/table.js":"117","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/controllers/dashboards/index.js":"118","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/controllers/reports/report/save-as.js":"119","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/controllers/reports/report/view.js":"120","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/controllers/reports/report.js":"121","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/controllers/reports-print/reports/report.js":"122","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/can-having.js":"123","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/delivery-rule-action.js":"124","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/format-dimension-value.js":"125","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/format-interval-inclusive-inclusive.js":"126","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/get-user.js":"127","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/guess-timezone.js":"128","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/item-action.js":"129","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/model-for.js":"130","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/string-contains.js":"131","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/update-report-action.js":"132","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/models/report-collection.js":"133","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/report-collections/collection.js":"134","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/report-collections/index.js":"135","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/index.js":"136","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/new.js":"137","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/clone.js":"138","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/edit.js":"139","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/index.js":"140","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/save-as.js":"141","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/unauthorized.js":"142","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/view.js":"143","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report.js":"144","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports-print/reports/new.js":"145","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports-print/reports/report/index.js":"146","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports-print/reports/report/view.js":"147","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports-print/reports/report.js":"148","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports.js":"149","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/serializers/report-collection.js":"150","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/delivery-rule-action-dispatcher.js":"151","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/item-action-dispatcher.js":"152","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/navi-visualizations.js":"153","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/request-action-dispatcher.js":"154","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/request-constrainer.js":"155","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/update-report-action-dispatcher.js":"156","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/report-collections/collection.js":"157","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/report-collections/error.js":"158","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/report-collections/index.js":"159","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/report-collections/loading.js":"160","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/report-collections.js":"161","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/error.js":"162","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/index.js":"163","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/new.js":"164","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/edit.js":"165","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/error.js":"166","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/invalid.js":"167","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/loading.js":"168","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/unauthorized.js":"169","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/view.js":"170","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report.js":"171","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports-print/reports/report/error.js":"172","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports-print/reports/report/invalid.js":"173","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports-print/reports/report/view.js":"174","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports-print/reports/report.js":"175","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports.js":"176","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/blueprints/navi-reports/index.js":"177","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/config/coverage.js":"178","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/config/ember-try.js":"179","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/config/environment.js":"180","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/ember-cli-build.js":"181","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/index.js":"182","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/testem.js":"183","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/.eslintrc.js":"184","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/metric-parameters-test.js":"185","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/multi-datasource-test.js":"186","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/print-report-test.js":"187","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/report-collections-test.js":"188","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/report-test.js":"189","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/report-visualizations-test.js":"190","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/schedule-modal-test.js":"191","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/share-link-test.js":"192","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/app/app.js":"193","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/app/routes/directory/my-data.js":"194","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/app/routes/index.js":"195","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/config/deprecation-workflow.js":"196","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/config/ember-intl.js":"197","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/config/environment.js":"198","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/config/targets.js":"199","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/bard-lite/dimensions/displayCurrency.js":"200","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/bard-lite/dimensions/property.js":"201","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/config.js":"202","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/fixtures/dashboard.js":"203","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/fixtures/delivery-rules.js":"204","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/fixtures/report-collections.js":"205","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/fixtures/reports.js":"206","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/fixtures/users.js":"207","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/scenarios/default.js":"208","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/serializers/application.js":"209","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/common-actions/delete-test.js":"210","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/common-actions/get-api-test.js":"211","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/common-actions/schedule-test.js":"212","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/common-actions/share-test.js":"213","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/dimension-bulk-import-simple-test.js":"214","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/dimension-bulk-import-test.js":"215","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/dropdown-date-picker-test.js":"216","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/editable-label-test.js":"217","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/grouped-list-test.js":"218","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/metric-filter-config-test.js":"219","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/missing-intervals-warning-test.js":"220","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-collection-test.js":"221","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-column-config/metric-test.js":"222","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-column-config/time-dimension-test.js":"223","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-column-config-test.js":"224","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-date-picker-test.js":"225","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-email-input-test.js":"226","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-email-tag-test.js":"227","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-loading-message-test.js":"228","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-table-select-test.js":"229","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-tag-input-test.js":"230","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/paginated-scroll-list-test.js":"231","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/power-select-bulk-import-trigger-test.js":"232","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/print-report-view-test.js":"233","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/report-actions/export-test.js":"234","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/report-actions/multiple-format-export-test.js":"235","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/report-builder-test.js":"236","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/report-view-test.js":"237","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/report-visualization-test.js":"238","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/unauthorized-table-test.js":"239","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/visualization-toggle-test.js":"240","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/test-helper.ts":"241","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/components/navi-collection-test.js":"242","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/components/navi-date-picker-test.js":"243","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/components/paginated-scroll-list-test.js":"244","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/components/report-actions/base-action-test.js":"245","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/components/report-builder-test.js":"246","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/consumers/delivery-rule-test.js":"247","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/consumers/item-test.js":"248","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/consumers/request/column-test.js":"249","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/consumers/request/filter-test.js":"250","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/controllers/reports/report-test.js":"251","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/helpers/format-interval-inclusive-inclusive-test.js":"252","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/helpers/guess-timezone-test.js":"253","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/helpers/item-action-test.js":"254","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/helpers/string-contains-test.js":"255","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/helpers/update-report-action-test.js":"256","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/mixins/collection-selector-test.js":"257","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/mixins/report-route-test.js":"258","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/report-collections/collection-test.js":"259","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/reports/index-test.js":"260","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/reports/new-test.js":"261","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/reports/report/clone-test.js":"262","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/reports/report/view-test.js":"263","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/reports/report-test.js":"264","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/serializers/report-test.js":"265","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/utils/request-metric-test.js":"266"},{"size":2727,"mtime":1618256664895,"results":"267","hashOfConfig":"268"},{"size":136,"mtime":1618256664896,"results":"269","hashOfConfig":"268"},{"size":159,"mtime":1615310652674,"results":"270","hashOfConfig":"268"},{"size":1572,"mtime":1615310652677,"results":"271","hashOfConfig":"268"},{"size":4752,"mtime":1615310652678,"results":"272","hashOfConfig":"268"},{"size":589,"mtime":1615310652678,"results":"273","hashOfConfig":"268"},{"size":1913,"mtime":1615310652678,"results":"274","hashOfConfig":"268"},{"size":2020,"mtime":1615310652683,"results":"275","hashOfConfig":"268"},{"size":2705,"mtime":1615310652683,"results":"276","hashOfConfig":"268"},{"size":2497,"mtime":1615310652684,"results":"277","hashOfConfig":"268"},{"size":7633,"mtime":1618256664902,"results":"278","hashOfConfig":"268"},{"size":1095,"mtime":1615310652685,"results":"279","hashOfConfig":"268"},{"size":432,"mtime":1615310652685,"results":"280","hashOfConfig":"268"},{"size":951,"mtime":1615310652685,"results":"281","hashOfConfig":"268"},{"size":387,"mtime":1615310652685,"results":"282","hashOfConfig":"268"},{"size":392,"mtime":1615310652685,"results":"283","hashOfConfig":"268"},{"size":2895,"mtime":1615310652686,"results":"284","hashOfConfig":"268"},{"size":6370,"mtime":1618256664902,"results":"285","hashOfConfig":"268"},{"size":762,"mtime":1615310652688,"results":"286","hashOfConfig":"268"},{"size":1257,"mtime":1615310652688,"results":"287","hashOfConfig":"268"},{"size":2141,"mtime":1615310652688,"results":"288","hashOfConfig":"268"},{"size":4337,"mtime":1618256664903,"results":"289","hashOfConfig":"268"},{"size":583,"mtime":1615310652688,"results":"290","hashOfConfig":"268"},{"size":1792,"mtime":1615310652688,"results":"291","hashOfConfig":"268"},{"size":5663,"mtime":1618256664903,"results":"292","hashOfConfig":"268"},{"size":1447,"mtime":1615310652689,"results":"293","hashOfConfig":"268"},{"size":713,"mtime":1615310652690,"results":"294","hashOfConfig":"268"},{"size":564,"mtime":1615310652693,"results":"295","hashOfConfig":"268"},{"size":1616,"mtime":1615310652693,"results":"296","hashOfConfig":"268"},{"size":3537,"mtime":1615310652694,"results":"297","hashOfConfig":"268"},{"size":505,"mtime":1615310652694,"results":"298","hashOfConfig":"268"},{"size":342,"mtime":1615310652694,"results":"299","hashOfConfig":"268"},{"size":1469,"mtime":1615310652694,"results":"300","hashOfConfig":"268"},{"size":1136,"mtime":1615310652694,"results":"301","hashOfConfig":"268"},{"size":221,"mtime":1615310652694,"results":"302","hashOfConfig":"268"},{"size":964,"mtime":1615310652695,"results":"303","hashOfConfig":"268"},{"size":1485,"mtime":1615310652695,"results":"304","hashOfConfig":"268"},{"size":499,"mtime":1615310652695,"results":"305","hashOfConfig":"268"},{"size":398,"mtime":1615310652695,"results":"306","hashOfConfig":"268"},{"size":660,"mtime":1615310652695,"results":"307","hashOfConfig":"268"},{"size":366,"mtime":1615310652695,"results":"308","hashOfConfig":"268"},{"size":264,"mtime":1615310652698,"results":"309","hashOfConfig":"268"},{"size":2221,"mtime":1618256664897,"results":"310","hashOfConfig":"268"},{"size":64,"mtime":1615310652709,"results":"311","hashOfConfig":"268"},{"size":67,"mtime":1618256664909,"results":"312","hashOfConfig":"268"},{"size":73,"mtime":1615310652710,"results":"313","hashOfConfig":"268"},{"size":74,"mtime":1615310652710,"results":"314","hashOfConfig":"268"},{"size":75,"mtime":1615310652710,"results":"315","hashOfConfig":"268"},{"size":72,"mtime":1615310652710,"results":"316","hashOfConfig":"268"},{"size":80,"mtime":1615310652711,"results":"317","hashOfConfig":"268"},{"size":73,"mtime":1615310652711,"results":"318","hashOfConfig":"268"},{"size":72,"mtime":1615310652711,"results":"319","hashOfConfig":"268"},{"size":66,"mtime":1615310652711,"results":"320","hashOfConfig":"268"},{"size":65,"mtime":1615310652712,"results":"321","hashOfConfig":"268"},{"size":72,"mtime":1615310652712,"results":"322","hashOfConfig":"268"},{"size":77,"mtime":1615310652712,"results":"323","hashOfConfig":"268"},{"size":77,"mtime":1615310652712,"results":"324","hashOfConfig":"268"},{"size":74,"mtime":1615310652712,"results":"325","hashOfConfig":"268"},{"size":82,"mtime":1615310652712,"results":"326","hashOfConfig":"268"},{"size":69,"mtime":1615310652712,"results":"327","hashOfConfig":"268"},{"size":82,"mtime":1615310652713,"results":"328","hashOfConfig":"268"},{"size":79,"mtime":1615310652713,"results":"329","hashOfConfig":"268"},{"size":83,"mtime":1615310652713,"results":"330","hashOfConfig":"268"},{"size":76,"mtime":1615310652713,"results":"331","hashOfConfig":"268"},{"size":77,"mtime":1615310652713,"results":"332","hashOfConfig":"268"},{"size":88,"mtime":1615310652713,"results":"333","hashOfConfig":"268"},{"size":85,"mtime":1615310652714,"results":"334","hashOfConfig":"268"},{"size":97,"mtime":1615310652714,"results":"335","hashOfConfig":"268"},{"size":89,"mtime":1615310652714,"results":"336","hashOfConfig":"268"},{"size":86,"mtime":1615310652714,"results":"337","hashOfConfig":"268"},{"size":77,"mtime":1615310652714,"results":"338","hashOfConfig":"268"},{"size":64,"mtime":1615310652715,"results":"339","hashOfConfig":"268"},{"size":72,"mtime":1615310652715,"results":"340","hashOfConfig":"268"},{"size":77,"mtime":1615310652715,"results":"341","hashOfConfig":"268"},{"size":68,"mtime":1617904982620,"results":"342","hashOfConfig":"268"},{"size":67,"mtime":1615310652715,"results":"343","hashOfConfig":"268"},{"size":75,"mtime":1615310652716,"results":"344","hashOfConfig":"268"},{"size":75,"mtime":1615310652716,"results":"345","hashOfConfig":"268"},{"size":70,"mtime":1615310652716,"results":"346","hashOfConfig":"268"},{"size":68,"mtime":1615310652716,"results":"347","hashOfConfig":"268"},{"size":68,"mtime":1615310652717,"results":"348","hashOfConfig":"268"},{"size":66,"mtime":1615310652717,"results":"349","hashOfConfig":"268"},{"size":72,"mtime":1615310652717,"results":"350","hashOfConfig":"268"},{"size":62,"mtime":1615310652718,"results":"351","hashOfConfig":"268"},{"size":74,"mtime":1615310652718,"results":"352","hashOfConfig":"268"},{"size":77,"mtime":1615310652718,"results":"353","hashOfConfig":"268"},{"size":69,"mtime":1615310652718,"results":"354","hashOfConfig":"268"},{"size":70,"mtime":1615310652719,"results":"355","hashOfConfig":"268"},{"size":66,"mtime":1615310652718,"results":"356","hashOfConfig":"268"},{"size":73,"mtime":1615310652719,"results":"357","hashOfConfig":"268"},{"size":71,"mtime":1615310652719,"results":"358","hashOfConfig":"268"},{"size":63,"mtime":1615310652719,"results":"359","hashOfConfig":"268"},{"size":84,"mtime":1615310652719,"results":"360","hashOfConfig":"268"},{"size":83,"mtime":1615310652719,"results":"361","hashOfConfig":"268"},{"size":69,"mtime":1615310652719,"results":"362","hashOfConfig":"268"},{"size":78,"mtime":1615310652720,"results":"363","hashOfConfig":"268"},{"size":73,"mtime":1615310652720,"results":"364","hashOfConfig":"268"},{"size":89,"mtime":1615310652720,"results":"365","hashOfConfig":"268"},{"size":74,"mtime":1615310652720,"results":"366","hashOfConfig":"268"},{"size":66,"mtime":1615310652719,"results":"367","hashOfConfig":"268"},{"size":66,"mtime":1615310652720,"results":"368","hashOfConfig":"268"},{"size":65,"mtime":1616183923547,"results":"369","hashOfConfig":"268"},{"size":71,"mtime":1615310652720,"results":"370","hashOfConfig":"268"},{"size":63,"mtime":1615310652721,"results":"371","hashOfConfig":"268"},{"size":72,"mtime":1615310652721,"results":"372","hashOfConfig":"268"},{"size":79,"mtime":1615310652721,"results":"373","hashOfConfig":"268"},{"size":70,"mtime":1615310652721,"results":"374","hashOfConfig":"268"},{"size":72,"mtime":1615310652721,"results":"375","hashOfConfig":"268"},{"size":64,"mtime":1615310652722,"results":"376","hashOfConfig":"268"},{"size":55,"mtime":1615310652722,"results":"377","hashOfConfig":"268"},{"size":77,"mtime":1615310652722,"results":"378","hashOfConfig":"268"},{"size":65,"mtime":1615310652722,"results":"379","hashOfConfig":"268"},{"size":69,"mtime":1615310652723,"results":"380","hashOfConfig":"268"},{"size":63,"mtime":1615310652723,"results":"381","hashOfConfig":"268"},{"size":65,"mtime":1615310652723,"results":"382","hashOfConfig":"268"},{"size":63,"mtime":1615310652723,"results":"383","hashOfConfig":"268"},{"size":64,"mtime":1615310652724,"results":"384","hashOfConfig":"268"},{"size":69,"mtime":1615310652724,"results":"385","hashOfConfig":"268"},{"size":75,"mtime":1615310652725,"results":"386","hashOfConfig":"268"},{"size":72,"mtime":1615310652725,"results":"387","hashOfConfig":"268"},{"size":67,"mtime":1615310652725,"results":"388","hashOfConfig":"268"},{"size":81,"mtime":1615310652724,"results":"389","hashOfConfig":"268"},{"size":70,"mtime":1615310652725,"results":"390","hashOfConfig":"268"},{"size":89,"mtime":1615310652725,"results":"391","hashOfConfig":"268"},{"size":93,"mtime":1615310652726,"results":"392","hashOfConfig":"268"},{"size":100,"mtime":1615310652726,"results":"393","hashOfConfig":"268"},{"size":66,"mtime":1615310652726,"results":"394","hashOfConfig":"268"},{"size":78,"mtime":1615310652726,"results":"395","hashOfConfig":"268"},{"size":72,"mtime":1615310652727,"results":"396","hashOfConfig":"268"},{"size":68,"mtime":1615310652727,"results":"397","hashOfConfig":"268"},{"size":80,"mtime":1615310652727,"results":"398","hashOfConfig":"268"},{"size":69,"mtime":1615310652727,"results":"399","hashOfConfig":"268"},{"size":65,"mtime":1615310652728,"results":"400","hashOfConfig":"268"},{"size":77,"mtime":1615310652728,"results":"401","hashOfConfig":"268"},{"size":72,"mtime":1615310652728,"results":"402","hashOfConfig":"268"},{"size":61,"mtime":1615310652730,"results":"403","hashOfConfig":"268"},{"size":59,"mtime":1615310652730,"results":"404","hashOfConfig":"268"},{"size":68,"mtime":1615310652731,"results":"405","hashOfConfig":"268"},{"size":67,"mtime":1615310652731,"results":"406","hashOfConfig":"268"},{"size":68,"mtime":1615310652731,"results":"407","hashOfConfig":"268"},{"size":70,"mtime":1615310652731,"results":"408","hashOfConfig":"268"},{"size":75,"mtime":1615310652731,"results":"409","hashOfConfig":"268"},{"size":67,"mtime":1615310652732,"results":"410","hashOfConfig":"268"},{"size":62,"mtime":1615310652730,"results":"411","hashOfConfig":"268"},{"size":73,"mtime":1615310652729,"results":"412","hashOfConfig":"268"},{"size":82,"mtime":1615310652729,"results":"413","hashOfConfig":"268"},{"size":81,"mtime":1615310652729,"results":"414","hashOfConfig":"268"},{"size":62,"mtime":1615310652729,"results":"415","hashOfConfig":"268"},{"size":55,"mtime":1615310652730,"results":"416","hashOfConfig":"268"},{"size":70,"mtime":1615310652732,"results":"417","hashOfConfig":"268"},{"size":81,"mtime":1615310652732,"results":"418","hashOfConfig":"268"},{"size":72,"mtime":1615310652733,"results":"419","hashOfConfig":"268"},{"size":69,"mtime":1615310652733,"results":"420","hashOfConfig":"268"},{"size":75,"mtime":1615310652733,"results":"421","hashOfConfig":"268"},{"size":69,"mtime":1615310652733,"results":"422","hashOfConfig":"268"},{"size":81,"mtime":1615310652740,"results":"423","hashOfConfig":"268"},{"size":80,"mtime":1615310652753,"results":"424","hashOfConfig":"268"},{"size":75,"mtime":1615310652753,"results":"425","hashOfConfig":"268"},{"size":75,"mtime":1615310652753,"results":"426","hashOfConfig":"268"},{"size":77,"mtime":1615310652753,"results":"427","hashOfConfig":"268"},{"size":69,"mtime":1615310652752,"results":"428","hashOfConfig":"268"},{"size":64,"mtime":1615310652755,"results":"429","hashOfConfig":"268"},{"size":64,"mtime":1615310652755,"results":"430","hashOfConfig":"268"},{"size":62,"mtime":1615310652755,"results":"431","hashOfConfig":"268"},{"size":70,"mtime":1615310652755,"results":"432","hashOfConfig":"268"},{"size":71,"mtime":1615310652756,"results":"433","hashOfConfig":"268"},{"size":73,"mtime":1615310652756,"results":"434","hashOfConfig":"268"},{"size":73,"mtime":1615310652756,"results":"435","hashOfConfig":"268"},{"size":78,"mtime":1615310652756,"results":"436","hashOfConfig":"268"},{"size":70,"mtime":1615310652756,"results":"437","hashOfConfig":"268"},{"size":65,"mtime":1615310652755,"results":"438","hashOfConfig":"268"},{"size":71,"mtime":1615310652754,"results":"439","hashOfConfig":"268"},{"size":73,"mtime":1615310652754,"results":"440","hashOfConfig":"268"},{"size":84,"mtime":1615310652754,"results":"441","hashOfConfig":"268"},{"size":79,"mtime":1615310652754,"results":"442","hashOfConfig":"268"},{"size":58,"mtime":1615310652755,"results":"443","hashOfConfig":"268"},{"size":229,"mtime":1615310652757,"results":"444","hashOfConfig":"268"},{"size":61,"mtime":1615310652757,"results":"445","hashOfConfig":"268"},{"size":1667,"mtime":1618256664913,"results":"446","hashOfConfig":"268"},{"size":760,"mtime":1615310652757,"results":"447","hashOfConfig":"268"},{"size":988,"mtime":1615310652758,"results":"448","hashOfConfig":"268"},{"size":312,"mtime":1615310652758,"results":"449","hashOfConfig":"268"},{"size":589,"mtime":1615310652760,"results":"450","hashOfConfig":"268"},{"size":232,"mtime":1615310652760,"results":"451","hashOfConfig":"452"},{"size":2621,"mtime":1615310652762,"results":"453","hashOfConfig":"452"},{"size":8989,"mtime":1618256664918,"results":"454","hashOfConfig":"452"},{"size":3807,"mtime":1615310652763,"results":"455","hashOfConfig":"452"},{"size":2195,"mtime":1618256664919,"results":"456","hashOfConfig":"452"},{"size":75272,"mtime":1618256666032,"results":"457","hashOfConfig":"452"},{"size":13235,"mtime":1615310652764,"results":"458","hashOfConfig":"452"},{"size":19612,"mtime":1618256666033,"results":"459","hashOfConfig":"452"},{"size":1135,"mtime":1615310652764,"results":"460","hashOfConfig":"452"},{"size":388,"mtime":1618256664922,"results":"461","hashOfConfig":"452"},{"size":134,"mtime":1615310652767,"results":"462","hashOfConfig":"452"},{"size":135,"mtime":1615310652767,"results":"463","hashOfConfig":"452"},{"size":920,"mtime":1618256664923,"results":"464","hashOfConfig":"452"},{"size":47,"mtime":1615310652768,"results":"465","hashOfConfig":"452"},{"size":2162,"mtime":1615310652769,"results":"466","hashOfConfig":"452"},{"size":305,"mtime":1618256664923,"results":"467","hashOfConfig":"452"},{"size":1356,"mtime":1615310652770,"results":"468","hashOfConfig":"452"},{"size":249,"mtime":1615310652770,"results":"469","hashOfConfig":"452"},{"size":980,"mtime":1615310652770,"results":"470","hashOfConfig":"452"},{"size":63,"mtime":1615310652770,"results":"471","hashOfConfig":"452"},{"size":68,"mtime":1615310652771,"results":"472","hashOfConfig":"452"},{"size":551,"mtime":1615310652771,"results":"473","hashOfConfig":"452"},{"size":61,"mtime":1615310652771,"results":"474","hashOfConfig":"452"},{"size":59,"mtime":1615310652771,"results":"475","hashOfConfig":"452"},{"size":89,"mtime":1615310652771,"results":"476","hashOfConfig":"452"},{"size":120,"mtime":1615310652772,"results":"477","hashOfConfig":"452"},{"size":1955,"mtime":1618256666034,"results":"478","hashOfConfig":"452"},{"size":4173,"mtime":1618256665307,"results":"479","hashOfConfig":"452"},{"size":10541,"mtime":1618256666140,"results":"480","hashOfConfig":"452"},{"size":2270,"mtime":1615310652774,"results":"481","hashOfConfig":"452"},{"size":2913,"mtime":1615310652774,"results":"482","hashOfConfig":"452"},{"size":9220,"mtime":1618256664925,"results":"483","hashOfConfig":"452"},{"size":1749,"mtime":1615310652774,"results":"484","hashOfConfig":"452"},{"size":3198,"mtime":1615310652775,"results":"485","hashOfConfig":"452"},{"size":3129,"mtime":1615310652778,"results":"486","hashOfConfig":"452"},{"size":4715,"mtime":1615310652778,"results":"487","hashOfConfig":"452"},{"size":3465,"mtime":1615310652778,"results":"488","hashOfConfig":"452"},{"size":6077,"mtime":1615310652778,"results":"489","hashOfConfig":"452"},{"size":6972,"mtime":1616183923563,"results":"490","hashOfConfig":"452"},{"size":2046,"mtime":1616183923563,"results":"491","hashOfConfig":"452"},{"size":22181,"mtime":1616183923562,"results":"492","hashOfConfig":"452"},{"size":17780,"mtime":1615310652780,"results":"493","hashOfConfig":"452"},{"size":1754,"mtime":1615310652780,"results":"494","hashOfConfig":"452"},{"size":861,"mtime":1615310652780,"results":"495","hashOfConfig":"452"},{"size":637,"mtime":1618256664927,"results":"496","hashOfConfig":"452"},{"size":4844,"mtime":1615310652781,"results":"497","hashOfConfig":"452"},{"size":3459,"mtime":1615310652781,"results":"498","hashOfConfig":"452"},{"size":6157,"mtime":1618256664927,"results":"499","hashOfConfig":"452"},{"size":5480,"mtime":1615310652782,"results":"500","hashOfConfig":"452"},{"size":4558,"mtime":1615310652782,"results":"501","hashOfConfig":"452"},{"size":2279,"mtime":1615310652782,"results":"502","hashOfConfig":"452"},{"size":5354,"mtime":1615310652783,"results":"503","hashOfConfig":"452"},{"size":2292,"mtime":1615310652783,"results":"504","hashOfConfig":"452"},{"size":5944,"mtime":1615310652783,"results":"505","hashOfConfig":"452"},{"size":3749,"mtime":1615310652784,"results":"506","hashOfConfig":"452"},{"size":1066,"mtime":1615310652784,"results":"507","hashOfConfig":"452"},{"size":1667,"mtime":1615310652784,"results":"508","hashOfConfig":"452"},{"size":497,"mtime":1618256664928,"results":"509","hashOfConfig":"452"},{"size":1028,"mtime":1615310652786,"results":"510","hashOfConfig":"452"},{"size":907,"mtime":1615310652787,"results":"511","hashOfConfig":"452"},{"size":1407,"mtime":1615310652787,"results":"512","hashOfConfig":"452"},{"size":1727,"mtime":1615310652787,"results":"513","hashOfConfig":"452"},{"size":1433,"mtime":1615310652787,"results":"514","hashOfConfig":"452"},{"size":3367,"mtime":1615310652788,"results":"515","hashOfConfig":"452"},{"size":2355,"mtime":1615310652788,"results":"516","hashOfConfig":"452"},{"size":5406,"mtime":1615310652789,"results":"517","hashOfConfig":"452"},{"size":2434,"mtime":1615310652790,"results":"518","hashOfConfig":"452"},{"size":2208,"mtime":1615310652791,"results":"519","hashOfConfig":"452"},{"size":5726,"mtime":1615310652791,"results":"520","hashOfConfig":"452"},{"size":370,"mtime":1615310652792,"results":"521","hashOfConfig":"452"},{"size":1447,"mtime":1615310652792,"results":"522","hashOfConfig":"452"},{"size":527,"mtime":1615310652792,"results":"523","hashOfConfig":"452"},{"size":2217,"mtime":1615310652792,"results":"524","hashOfConfig":"452"},{"size":1328,"mtime":1615310652792,"results":"525","hashOfConfig":"452"},{"size":699,"mtime":1615310652793,"results":"526","hashOfConfig":"452"},{"size":1245,"mtime":1615310652793,"results":"527","hashOfConfig":"452"},{"size":1109,"mtime":1615310652794,"results":"528","hashOfConfig":"452"},{"size":4263,"mtime":1615310652794,"results":"529","hashOfConfig":"452"},{"size":1109,"mtime":1615415288751,"results":"530","hashOfConfig":"452"},{"size":3485,"mtime":1618256664928,"results":"531","hashOfConfig":"452"},{"size":5942,"mtime":1615310652794,"results":"532","hashOfConfig":"452"},{"size":5406,"mtime":1615310652795,"results":"533","hashOfConfig":"452"},{"size":2567,"mtime":1615310652796,"results":"534","hashOfConfig":"452"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11wlez5",{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":11,"source":"546"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"561"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"582"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"591"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":3,"source":"594"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"606"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"617"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"622"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"627"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"630"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"635","messages":"636","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":4,"source":"637"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"646"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"649"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"900","messages":"901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"902","messages":"903","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fozslc",{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"944","messages":"945","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"946"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"955","messages":"956","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"957"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"963","messages":"964","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"965","messages":"966","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"967","messages":"968","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"971","messages":"972","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"973","messages":"974","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"975","messages":"976","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"977","messages":"978","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"983","messages":"984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"991","messages":"992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1001","messages":"1002","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1003","messages":"1004","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1005"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1014"},{"filePath":"1015","messages":"1016","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1019","messages":"1020","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1021","messages":"1022","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1023","messages":"1024","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1025","messages":"1026","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1033"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1036"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1043","messages":"1044","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1045","messages":"1046","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1047","messages":"1048","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1049","messages":"1050","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1051","messages":"1052","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":6,"source":"1063"},{"filePath":"1064","messages":"1065","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1068"},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"1071"},{"filePath":"1072","messages":"1073","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1078","messages":"1079","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1080","messages":"1081","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1082","messages":"1083","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1084","messages":"1085","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1086","messages":"1087","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1088","messages":"1089","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1090"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1093"},{"filePath":"1094","messages":"1095","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1096"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"1103"},{"filePath":"1104","messages":"1105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1106","messages":"1107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1108"},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/.eslintrc.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/.prettierrc.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/.template-lintrc.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/dimension-bulk-import-simple.js",["1115","1116"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   <DimensionBulkImportSimple\n *      @rawInput=\"list,of,ids\"\n *      @onSelectValues={{this.selectValues}}\n *   />\n */\nimport Component from '@ember/component';\nimport { computed } from '@ember/object';\nimport layout from '../templates/components/dimension-bulk-import-simple';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\n\n@tagName('')\n@templateLayout(layout)\nclass DimensionBulkImportSimpleComponent extends Component {\n  /**\n   * Filters the input list to a unique list of nonempty values\n   * @param {Array<String>} list - the list to filter\n   */\n  listFilter(list) {\n    const filter = list\n      .map((v) => v.trim()) // remove surrounding space\n      .filter((v) => v.length > 0); // remove empty values\n    return [...new Set(filter)]; // only unique values\n  }\n\n  /**\n   * @property {Array<String>} unsplitValue - empty/single value array of rawInput\n   */\n  @computed('rawInput')\n  get input() {\n    return this.rawInput || '';\n  }\n\n  /**\n   * @property {Array<String>} unsplitValue - empty/single value array of rawInput\n   */\n  @computed('input')\n  get unsplitValue() {\n    return this.listFilter([this.input]);\n  }\n\n  /**\n   * @property {Array<String>} splitValues - array of values split by commas from rawInput\n   */\n  @computed('input')\n  get splitValues() {\n    return this.listFilter(this.input.split(','));\n  }\n}\n\nexport default DimensionBulkImportSimpleComponent;\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/dimension-bulk-import.js",["1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130","1131","1132"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   <DimensionBulkImport\n *      @dimension={{@dimensionToImport}}\n *      @queryIds={{@queryIds}}\n *      @rawQuery={{@rawQuery}}\n *      @onSelectValues={{this.selectValues}}\n *      @onCancel={{this.cancel}}\n *   />\n */\nimport { not } from '@ember/object/computed';\nimport Component from '@ember/component';\nimport { get, set, computed, action } from '@ember/object';\nimport { A as arr } from '@ember/array';\nimport { isEmpty } from '@ember/utils';\nimport { inject as service } from '@ember/service';\nimport layout from '../templates/components/dimension-bulk-import';\nimport DS from 'ember-data';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\n\n@templateLayout(layout)\n@tagName('')\nclass DimensionBulkImportComponent extends Component {\n  /**\n   * @property {Object} - dimension - dimension metadata containing id and name properties\n   */\n  dimension = undefined;\n\n  /**\n   * @private\n   * @property {Array} _trimmedQueryIds - unique list of non-empty dimension ids to search for\n   */\n  @computed('queryIds')\n  get _trimmedQueryIds() {\n    const queryIds = get(this, 'queryIds') || [];\n\n    //Remove preceding and trailing white spaces, empty strings and duplicates\n    return arr(queryIds.map((key) => key.trim()).filter(Boolean)).uniq();\n  }\n\n  /**\n   * @private\n   * @property {Promise} _loadingPromise - loading spinner promise\n   */\n  _loadingPromise = undefined;\n\n  /**\n   * @private\n   * @property {Array} _validDimValues - Array of DS.Model Dimension Value Records\n   */\n  _validDimValues = undefined;\n\n  /**\n   * @private\n   * @property {Object} _validRawInputDimValue - the single value array with the dim value for raw input\n   */\n  _validRawInputDimValue = undefined;\n\n  /**\n   * @private\n   * @property {Array} _invalidDimValueIds - array of invalid dimension value Ids\n   */\n  @computed('_trimmedQueryIds', '_validDimValues')\n  get _invalidDimValueIds() {\n    const validDimVals = get(this, '_validDimValues');\n    return arr(\n      get(this, '_trimmedQueryIds').reject((queryId) =>\n        validDimVals.any((validDimVal) => get(validDimVal, 'id') === queryId)\n      )\n    );\n  }\n\n  /**\n   * @private\n   * @property {Boolean} _disableButton - if true button is disabled else not\n   */\n  @not('_loadingPromise.isSettled') _disableButton;\n\n  /**\n   * @private\n   * @property {Ember.Service} dimensionService\n   */\n  @service('bard-dimensions') _dimensionService;\n\n  /**\n   * @private\n   * @property {Ember.Service} - navi metadata\n   */\n  @service('navi-metadata') naviMetadata;\n\n  /**\n   * @method didInsertElement\n   * @override\n   */\n  didInsertElement() {\n    super.didInsertElement(...arguments);\n    this._search();\n  }\n\n  /**\n   * Queries dimension service for the given list of dimension value IDs\n   *\n   * @method search\n   * @returns {Void}\n   */\n  _search() {\n    // Nothing to search for\n    if (isEmpty(get(this, '_trimmedQueryIds'))) {\n      this.onCancel();\n      return;\n    }\n\n    const splitValuesPromise = get(this, '_dimensionService')\n      .find(\n        this.dimension?.id,\n        [\n          {\n            values: get(this, '_trimmedQueryIds'),\n            field: get(this, 'searchableIdField'),\n          },\n        ],\n        { dataSourceName: this.dimension?.source }\n      )\n      .then((dimValues) => {\n        set(this, '_validDimValues', dimValues.toArray());\n      });\n\n    set(this, '_validRawInputDimValue', undefined);\n    const rawInputPromise = get(this, '_dimensionService')\n      .find(\n        this.dimension?.id,\n        [\n          {\n            field: get(this, 'searchableIdField'),\n            values: [this.rawQuery],\n          },\n        ],\n        { dataSourceName: this.dimension?.source }\n      )\n      .then((dimValue) => set(this, '_validRawInputDimValue', dimValue.toArray()));\n\n    //set loading promise\n    set(\n      this,\n      '_loadingPromise',\n      DS.PromiseObject.create({\n        promise: Promise.all([splitValuesPromise, rawInputPromise]),\n      })\n    );\n  }\n\n  /**\n   * @property {String} - which id field that we would want to search values against\n   */\n  @computed('dimension.{id,source}')\n  get searchableIdField() {\n    const meta = this.naviMetadata.getById('dimension', this.dimension?.id, this.dimension?.source);\n    return get(meta, 'idFieldName');\n  }\n\n  /**\n   * Action to trigger on removing pill\n   *\n   * @method removeRecord\n   * @param {DS.Record} record - record to be removed from valid results\n   * @returns {Void}\n   */\n  @action\n  removeRecord(record) {\n    return this._validDimValues.removeObject(record);\n  }\n}\n\nexport default DimensionBulkImportComponent;\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/dropdown-date-picker.js",["1133","1134"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   <DropdownDatePicker\n *       @onUpdate={{action this.onUpdate}}\n *       @date={{moment this.savedDate}}\n *       @dateTimePeriod=\"day\"\n *   />\n */\nimport Component from '@ember/component';\nimport layout from '../templates/components/dropdown-date-picker';\nimport { layout as templateLayout } from '@ember-decorators/component';\n\n@templateLayout(layout)\nclass DropdownDatePicker extends Component {}\n\nexport default DropdownDatePicker;\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/editable-label.js",["1135","1136","1137"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   <EditableLabel\n *      @value={{this.value}}\n *      @onChange={{this.onChange}}\n *   />\n */\n\nimport Component from '@ember/component';\nimport { computed, set, action } from '@ember/object';\nimport { oneWay } from '@ember/object/computed';\nimport { debounce, next } from '@ember/runloop';\nimport layout from '../templates/components/editable-label';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\n\n@tagName('')\n@templateLayout(layout)\nclass EditableLabelComponent extends Component {\n  /**\n   * @property {Boolean} isEditingValue\n   */\n  isEditingValue = false;\n\n  /**\n   * @property {String} _localValue\n   */\n  @oneWay('value') _localValue;\n\n  /**\n   * @property {Number} inputSize - length of the value with a max length of 50\n   */\n  @computed('_localValue.length')\n  get _inputSize() {\n    return Math.min(this._localValue.length, 49) + 1;\n  }\n\n  @action\n  setupInputElement(element) {\n    this.inputElement = element;\n  }\n\n  /**\n   * Switch to view mode and send update\n   * @action editComplete\n   * @param {String} value - updated input value\n   */\n  @action\n  editComplete(value) {\n    set(this, 'isEditingValue', false);\n    if (this.value !== value) {\n      debounce(this, this.onChange, value, 10);\n    }\n  }\n\n  /**\n   * Keep the input in sync with the latest value changes\n   * @action resetValue\n   */\n  @action\n  resetValue() {\n    set(this, '_localValue', this.value);\n  }\n\n  /**\n   * Selects label text\n   * @action highlightLabelInput\n   */\n  @action\n  highlightLabelInput() {\n    next(() => this.inputElement.focus());\n  }\n\n  /**\n   * Removes focus from label input\n   * @action blurLabelInput\n   */\n  @action\n  blurLabelInput() {\n    this.inputElement.blur();\n  }\n}\n\nexport default EditableLabelComponent;\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/metric-filter-config.js",["1138","1139"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Note: This component assumes there is only one possible parameter for a metric,\n * this would need to be changed if multiple parameters are supported by the app\n *\n * Usage:\n * {{metric-filter-config\n *   metric=metric\n *   request=request\n *   paramClicked=(action 'paramClicked')\n * }}\n *\n */\nimport Component from '@ember/component';\nimport layout from '../templates/components/metric-filter-config';\nimport { computed } from '@ember/object';\nimport { A as arr } from '@ember/array';\nimport { getUnfilteredMetricsOfBase } from 'navi-reports/utils/request-metric';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\n\n@tagName('')\n@templateLayout(layout)\nexport default class MetricFilterConfig extends Component {\n  /**\n   * @property {Array} otherParams - other selected params for the same metric\n   */\n  @computed('request.{metrics.[],having.[]}', 'metric.{metric,parameters}')\n  get otherParams() {\n    let unFilteredMetrics = getUnfilteredMetricsOfBase(this.metric.metric, this.request),\n      otherParameters = arr(unFilteredMetrics).mapBy('parameters');\n\n    return otherParameters.map((metricParam) => {\n      let entries = arr(Object.entries(metricParam)).reject(([key]) => key === 'as');\n      return entries.map(([, value]) => value);\n    });\n  }\n\n  /**\n   * @property {String} parameter - parameter to configure\n   */\n  @computed('metric.parameters')\n  get parameter() {\n    return arr(Object.keys(this.metric.parameters)).reject((key) => key === 'as')[0];\n  }\n\n  /**\n   * @method calculatePosition\n   * @returns {Object}\n   */\n  calculatePosition(trigger) {\n    let { top, left, width, height } = trigger.getBoundingClientRect(),\n      marginLeft = 25,\n      marginTop = 22,\n      style = {\n        left: left + width + marginLeft,\n        top: top + window.pageYOffset + height / 2 - marginTop,\n      };\n\n    return { style };\n  }\n}\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/missing-intervals-warning.js",["1140","1141","1142","1143"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   {{missing-intervals-warning\n *       response=response\n *       onDetailsToggle=(action 'resizeVisualization')\n *   }}\n */\nimport { notEmpty } from '@ember/object/computed';\nimport Component from '@ember/component';\nimport { computed, get } from '@ember/object';\nimport moment from 'moment';\nimport layout from '../templates/components/missing-intervals-warning';\nimport fade from 'ember-animated/transitions/fade';\nimport { Resize } from 'ember-animated/motions/resize';\nimport move from 'ember-animated/motions/move';\nimport { easeOut } from 'ember-animated/easings/cosine';\n\nconst DATE_FORMAT = 'YYYY[/]MM[/]DD';\n\nexport default class MissingIntervalWarning extends Component {\n  layout = layout;\n\n  /**\n   * @property {String} tagName\n   */\n  tagName = '';\n\n  /**\n   * @property {Array} classNames\n   */\n\n  /**\n   * @property {Array} missingIntervals - The formatted intervals displayed in the details section\n   */\n  @computed('response.meta.missingIntervals')\n  get missingIntervals() {\n    let rawIntervals = get(this, 'response.meta.missingIntervals') || [];\n\n    return rawIntervals.map((interval) => {\n      //Make both dates in the interval inclusive\n      let dates = interval.split('/'),\n        start = new moment(dates[0]).format(DATE_FORMAT),\n        end = new moment(dates[1]).subtract(1, 'second').format(DATE_FORMAT);\n\n      //If the interval only covers one day, return just that date\n      return start === end ? start : `${start} - ${end}`;\n    });\n  }\n\n  /**\n   * @property {Boolean} showDetails - Determines whether the component is expanded or collapsed\n   */\n  showDetails = false;\n\n  /**\n   * @property {Boolean} warningEnabled - Shows the warning if missing intervals are present\n   */\n  @notEmpty('missingIntervals')\n  warningEnabled;\n\n  /**\n   * @property fadeTransition - fade transition\n   */\n  fadeTransition = fade;\n\n  /**\n   * @param drawerTransition - drawer transition\n   */\n  *drawerTransition({ insertedSprites }) {\n    const y = document.querySelector('.missing-intervals-warning').getBoundingClientRect().bottom;\n    yield Promise.all(\n      insertedSprites.map((sprite) => {\n        sprite.startAtPixel({ y });\n        sprite.applyStyles({ 'z-index': '1' });\n        return move(sprite, { easing: easeOut, duration: 1000 });\n      })\n    );\n  }\n\n  /**\n   * @property resizeMotion - resize motion with callback\n   */\n  get resizeMotion() {\n    const { onDetailsToggle } = this;\n    return class extends Resize {\n      *animate() {\n        yield* super.animate();\n        onDetailsToggle();\n      }\n    };\n  }\n}\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-collection.js",["1144","1145","1146","1147","1148","1149","1150"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   <NaviCollection\n *      @items={{items}}\n *      @itemType=\"item type\"\n *      @config={{hash\n *          actions='actions-component'\n *          itemRoute='route for item link'\n *          itemNewRoute='route for new item link'\n *          emptyMsg='error message when items is empty'\n *          filterable='boolean flag for a filterable table'\n *      }}\n *   />\n */\nimport { oneWay, or } from '@ember/object/computed';\nimport { A as arr } from '@ember/array';\nimport Component from '@ember/component';\nimport { get, computed } from '@ember/object';\nimport { isEmpty } from '@ember/utils';\nimport layout from '../templates/components/navi-collection';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\n\n@templateLayout(layout)\n@tagName('')\nexport default class NaviCollection extends Component {\n  /**\n   * @property {DS.ArrayPromise} items - array of assets\n   */\n  items = undefined;\n\n  /**\n   * @param {Object} filter - current report table filter\n   */\n  @oneWay('filterOptions.firstObject')\n  filter;\n\n  /**\n   *\n   * @property {Array} filteredReports -  array of reports filtered by user selected filter\n   */\n  @computed('items.[]', 'filter')\n  get filteredItems() {\n    const { items, filter } = this;\n\n    return isEmpty(items) ? undefined : filter.filterFn(items);\n  }\n\n  /**\n   * @property {String} itemRoute - routes to ${itemType}.${item} by default\n   */\n  @computed('config.itemRoute', 'itemType')\n  get itemRoute() {\n    let itemType = get(this, 'itemType'),\n      itemRoute = get(this, 'config.itemRoute') || `${itemType}s.${itemType}`;\n\n    return itemRoute;\n  }\n\n  /**\n   * @property {String} itemNewRoute - routes to ${itemType}.new by default\n   */\n  @computed('config.itemNewRoute', 'itemType')\n  get itemNewRoute() {\n    let itemType = get(this, 'itemType'),\n      itemNewRoute = get(this, 'config.itemNewRoute') || `${itemType}s.new`;\n\n    return itemNewRoute;\n  }\n\n  /**\n   * @param {Array} filterOptions - list of filters for the report table\n   */\n  filterOptions = arr([\n    {\n      filterFn: (item) => item,\n      name: 'All',\n    },\n    {\n      filterFn: (items) => items.filterBy('isFavorite'),\n      name: 'Favorites',\n    },\n  ]);\n\n  /**\n   * @property {Boolean} hasTableLoaded - indicates if table has loaded\n   */\n  @or('items.isSettled', 'items.isLoaded') hasTableLoaded;\n}\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-date-picker.js",["1151","1152","1153","1154"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   <NaviDatePicker\n *      @date={{this.initialDate}}\n *      @centerDate={{this.centerDate}}\n *      @dateTimePeriod=\"month\"\n *      @onUpdate={{this.handleUpdate}}\n *   />\n */\nimport Component from '@ember/component';\nimport { set, computed, action } from '@ember/object';\nimport { assert } from '@ember/debug';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\nimport layout from '../templates/components/navi-date-picker';\nimport moment from 'moment';\nimport { range } from 'lodash-es';\nimport {\n  getFirstDayEpochForGrain,\n  getFirstDayOfGrain,\n  getLastDayOfGrain,\n  getPeriodForGrain,\n} from 'navi-data/utils/date';\n\nconst isValidCalendarDateMessage = 'The date is UTC and aligned to the start of the day grain';\nfunction isValidCalendarDate(date, dateTimePeriod) {\n  if (!moment.isMoment(date) || !date.isUTC()) {\n    return false;\n  }\n\n  assert('A dateTimePeriod is provided', dateTimePeriod);\n  const period = getPeriodForGrain(dateTimePeriod);\n  if (['second', 'minute', 'hour'].includes(period)) {\n    return true;\n  }\n  return date.clone().startOf('day').isSame(date);\n}\n\n@templateLayout(layout)\n@tagName('')\nclass NaviDatePicker extends Component {\n  /**\n   * @method init\n   * @override\n   */\n  init() {\n    super.init(...arguments);\n    const { centerDate, date, dateTimePeriod } = this;\n    const localDateAsUTCDay = moment().utc(true).startOf('day');\n    const center = centerDate || date || localDateAsUTCDay;\n\n    assert(isValidCalendarDateMessage, isValidCalendarDate(center, dateTimePeriod));\n\n    // convert utc date to local for ember-power-calendar\n    set(this, 'centerDate', center.clone().local(true));\n  }\n\n  /**\n   * @method didReceiveAttrs\n   * @override\n   */\n  didReceiveAttrs() {\n    super.didReceiveAttrs(...arguments);\n\n    const { previousDate, date, dateTimePeriod } = this;\n\n    let newDate;\n    if (date && date !== previousDate) {\n      assert(isValidCalendarDateMessage, isValidCalendarDate(date, dateTimePeriod));\n      // convert utc date to local for ember-power-calendar\n      newDate = date.clone().local(true);\n    }\n\n    if (date && !date.isSame(previousDate)) {\n      set(this, 'selectedDate', newDate);\n      set(this, 'centerDate', newDate);\n    }\n\n    //Store old date for re-render logic above\n    set(this, 'previousDate', newDate);\n    set(this, '_lastTimeDate', newDate);\n  }\n\n  /**\n   * @property {Moment} date - date should be after `minDate`\n   */\n  date;\n\n  /**\n   * @property {Moment} centerDate - The date that determines the current view of the calendar, defaults to selected date initially\n   */\n  centerDate;\n\n  /**\n   * @property {String} dateTimePeriod - unit of time being selected ('day', 'week', or 'month')\n   */\n  dateTimePeriod = 'day';\n\n  /**\n   * @property {Date} minDate - minimum selectable date\n   */\n  @computed('dateTimePeriod')\n  get minDate() {\n    return new Date(getFirstDayEpochForGrain(this.dateTimePeriod));\n  }\n\n  /**\n   * @property {String[]} months - The months available to pick from in the current year\n   */\n  @computed('centerDate', 'minDate')\n  get months() {\n    const { centerDate, minDate } = this;\n\n    let months = moment.months();\n    const minDateTime = moment(minDate);\n    if (centerDate.year() === minDateTime.year()) {\n      const minMonth = minDateTime.month - 1;\n      months = months.filter((m, i) => i >= minMonth);\n    }\n    return months;\n  }\n\n  /**\n   * @property {String[]} years - The years available to pick from\n   */\n  @computed('minDate')\n  get years() {\n    const start = moment(this.minDate).year();\n    const end = moment().year() + 1;\n    return range(start, end).map((y) => y.toString());\n  }\n\n  /**\n   * Switches the calendars center based on the selected month or year from the select\n   * @param unit - grain to switch\n   * @param calendar - reference to calendar object\n   * @param e - the input event\n   */\n  changeCenter(unit, calendar, e) {\n    let newCenter = moment(calendar.center).clone()[unit](e.target.value);\n    return calendar.actions.changeCenter(newCenter);\n  }\n\n  /**\n   * Applies a selected class to each day if it lies within the week being selected. This visually represents an\n   * entire week being selected on the calendar even though it is only the first day that is actually selected.\n   *\n   * @param {Object} day - The day to apply a custom style for\n   * @param {Object} calendar - The calendar object being rendered on\n   * @param {Array} weeks - The weeks being shown for the calendar\n   * @returns {string}\n   */\n  selectedIsoWeekClass(day, calendar, weeks) {\n    const selected = weeks.flatMap((w) => w.days).find((d) => d.isSelected);\n    const classes = ['ember-power-calendar-week-day'];\n    if (selected) {\n      const selectedWeekStart = moment(getFirstDayOfGrain(selected.moment, 'isoWeek'));\n      const selectedWeekEnd = moment(getLastDayOfGrain(selectedWeekStart, 'isoWeek'));\n      if (day.moment.isBetween(selectedWeekStart, selectedWeekEnd, undefined, '[]')) {\n        classes.push('ember-power-calendar-day--selected');\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  /**\n   * Applies a selected class to each day if it lies within the week being selected. This visually represents an\n   * entire week being selected on the calendar even though it is only the first day that is actually selected.\n   *\n   * @param {Object} day - The day to apply a custom style for\n   * @param {Object} calendar - The calendar object being rendered on\n   * @param {Array} weeks - The weeks being shown for the calendar\n   * @returns {string}\n   */\n  selectedWeekClass(day, calendar, weeks) {\n    const selected = weeks.flatMap((w) => w.days).find((d) => d.isSelected);\n    const classes = ['ember-power-calendar-week-day'];\n    if (selected) {\n      const selectedWeekStart = moment(getFirstDayOfGrain(selected.moment, 'week'));\n      const selectedWeekEnd = moment(getLastDayOfGrain(selectedWeekStart, 'week'));\n      if (day.moment.isBetween(selectedWeekStart, selectedWeekEnd, undefined, '[]')) {\n        classes.push('ember-power-calendar-day--selected');\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  /**\n   * @method _isDateSameAsLast - checks if the date is the same as the last time this method was called\n   * @private\n   * @param {Date} newDate - date to check\n   * @returns {boolean} true if date is the same\n   */\n  _isDateSameAsLast(newDate) {\n    const { _lastTimeDate: lastTime } = this;\n\n    set(this, '_lastTimeDate', newDate);\n\n    if (!lastTime) {\n      return false;\n    }\n\n    return lastTime.isSame(newDate);\n  }\n\n  /**\n   * Sets the center date from a power calendar event\n   *\n   * @action\n   * @param {Object} object - container for selected calendar date\n   */\n  @action\n  setCenterDate({ moment: newDate }) {\n    set(this, 'centerDate', newDate);\n  }\n\n  /**\n   * Action sent whenever user makes a selection\n   * Converts the selected Date into a moment and\n   * passes the action on\n   *\n   * @action\n   * @param {Object} object - container for selected calendar date\n   */\n  @action\n  changeDate({ moment: newDate }) {\n    // Don't do anything if the date is the same as the last time action was called\n    if (this._isDateSameAsLast(newDate)) {\n      return;\n    }\n\n    // Use date in local time for selected date\n    set(this, 'selectedDate', newDate);\n    const handleUpdate = this.onUpdate;\n    if (handleUpdate) {\n      // convert to utc before passing to action\n      handleUpdate(newDate.clone().utc(true));\n    }\n  }\n}\n\nexport default NaviDatePicker;\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-email-input.js",["1155"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   <NaviEmailInput\n *      @emails={{this.emails}}\n *      @addEmail={{this.addEmail}}\n *      @removeEmailAtIndex={{this.removeEmailAtIndex}}\n *      @isDisabled={{false}}\n *   />\n */\nimport { action } from '@ember/object';\nimport Component from '@ember/component';\nimport layout from '../templates/components/navi-email-input';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\n\n@tagName('')\n@templateLayout(layout)\nexport default class NaviEmailInput extends Component {\n  /**\n   * @property {Array} emails\n   */\n  emails = [];\n\n  /**\n   * @action addEmail\n   * @param {String} email\n   */\n  @action\n  addEmail(email) {\n    const { emails } = this;\n    this.onUpdateEmails([...emails, email]);\n  }\n\n  /**\n   * @action removeEmailAtIndex\n   * @param {Number} index\n   */\n  @action\n  removeEmailAtIndex(index) {\n    const { emails } = this;\n    this.onUpdateEmails(emails.filter((email, i) => i != index));\n  }\n}\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-loading-message.js",["1156","1157","1158"],"/**\n * Copyright 2019, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   {{#navi-loading-message}}\n *       Message\n *   {{/navi-loading-message}}}}\n */\nimport Component from '@ember/component';\nimport layout from '../templates/components/navi-loading-message';\n\nexport default Component.extend({\n  layout,\n\n  classNames: ['navi-loading-message'],\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-modal.js",["1159"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Description: Navi Modal Component\n *\n * Usage:\n * <NaviModal\n *   @isShown={{this.isShown}}\n *   as |modalContainer|>\n *     Inner Template\n * </NaviModal>\n */\n\nimport Component from '@ember/component';\nimport layout from '../templates/components/navi-modal';\nimport { action, set } from '@ember/object';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\n\n@tagName('')\n@templateLayout(layout)\nexport default class NaviModal extends Component {\n  /**\n   * @property {Boolean} isShown - if Modal should be shown\n   */\n  isShown = false;\n\n  /**\n   * Set the isShown to false in order to close the modal.\n   */\n  @action\n  closeModal() {\n    set(this, 'isShown', false);\n    const { onClose } = this;\n\n    if (onClose && typeof onClose === 'function') {\n      onClose();\n    }\n  }\n}\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-table-select-item.js",["1160"],"/**\n * Copyright 2019, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage: <NaviTableSelectItem @option={{@option}} />\n */\n\nimport Component from '@ember/component';\nimport layout from '../templates/components/navi-table-select-item';\n\nexport default class extends Component {\n  layout = layout;\n  tagName = '';\n}\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-table-select-trigger.js",["1161"],"/**\n * Copyright 2019, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage: <NaviTableSelectTrigger @option={{@option}} />\n */\nimport Component from '@ember/component';\nimport layout from '../templates/components/navi-table-select-trigger';\n\nexport default class extends Component {\n  layout = layout;\n  tagName = '';\n}\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/navi-tag-input.js",["1162","1163","1164"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n * Usage:\n *  {{#tag-input\n *    tags=tags\n *    addTag=(action 'addTag')\n *    removeTagAtIndex=(action 'removeTagAtIndex')\n *    tagComponent='my-custom-tag-component'\n *    splitOnPaste=false\n *    as |tag|\n *  }}\n *    {{tag}}\n *  {{/tag-input}}\n */\n\nimport layout from '../templates/components/navi-tag-input';\nimport TagInput from 'ember-tag-input/components/tag-input';\n\nconst COMMA_KEY_CODE = 188;\n\nexport default TagInput.extend({\n  layout,\n\n  /**\n   * @property {Array} classNames\n   */\n  classNames: ['navi-tag-input'],\n\n  /**\n   * @property {String} tagComponent - optional name of custom component for rendering tags\n   */\n  tagComponent: 'navi-tag-input/tag',\n\n  /**\n   * @property {Boolean} splitOnPaste - whether or not to listen for paste input and handle importing lists\n   */\n  splitOnPaste: false,\n\n  /**\n   * Ignore comma so that only 'enter' key adds new tags\n   *\n   * @param {InputEvent} e - The keydown input event\n   * @override https://github.com/calvinlough/ember-tag-input/blob/v1.2.2/addon/components/tag-input.js#L74-L106\n   */\n  _onInputKeyDown(e) {\n    if (e.which === COMMA_KEY_CODE) {\n      return;\n    }\n\n    return this._super(...arguments);\n  },\n\n  /**\n   * Allow simple imports of pasted lists\n   * @param {InputEvent} e - The paste event\n   */\n  _onInputPaste(e) {\n    const pastedText = e.clipboardData.getData('text/plain').trim();\n    if (this.splitOnPaste !== true || !pastedText.includes(',')) {\n      return;\n    }\n\n    e.preventDefault();\n    this.set('_showBulkImport', true);\n    this.set('_bulkImportValue', pastedText);\n  },\n\n  /**\n   * Add a listener for paste events\n   * @override https://github.com/calvinlough/ember-tag-input/blob/v1.2.2/addon/components/tag-input.js#L123-L136\n   */\n  initEvents() {\n    this._super(...arguments);\n\n    const onInputPaste = this._onInputPaste.bind(this);\n    const newTagInput = this.element.querySelector('.emberTagInput-input');\n    newTagInput.addEventListener('paste', onInputPaste);\n  },\n\n  /**\n   * Remove listener for paste events\n   * @override\n   */\n  willDestroyElement() {\n    this._super(...arguments);\n\n    const onInputPaste = this._onInputPaste.bind(this);\n    const newTagInput = this.element.querySelector('.emberTagInput-input');\n    newTagInput.removeEventListener('paste', onInputPaste);\n  },\n\n  actions: {\n    /**\n     * @action closeModal - Closes the modal and clears the pasted value\n     */\n    closeModal() {\n      this.set('_showBulkImport', false);\n      this.set('_bulkImportValue', undefined);\n    },\n\n    /**\n     * @action addTags - Imports new tags and only adds unique ones\n     * @param {Array<String>} tags - The tags to be imported\n     */\n    addTags(tags) {\n      return tags.forEach((tag) => this.addNewTag(tag));\n    },\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/paginated-scroll-list.js",["1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * List of items with show more functionality and infinite scroll\n *\n * Usage:\n *   {{#paginated-scroll-list\n *      items=itemsArray - {Array} array of items object\n *      trim=trimFlag {Boolean} - control for trimmed state (two-way binding)\n *      showMore=(action actionToTrigger) - [optional] {action} action to trigger on show more\n *      moreLabel='Show More' [optional] {String} show more text\n *      initialItemsToRender=20 - [optional] {Number} min number of items to render initially, default 20\n *      perPage=250 - [optional] {Number} number of items to load per page on scroll, default 250\n *      scrollPadding=250 - [optional] {Number} padding from bottom of scroll to initiate loading of more items, default 250\n *      as |item|\n *   }}\n *      {{item.name}}\n *   {{/paginated-scroll-list}}\n *\n *\n * styles examples:\n *   .paginated-scroll-list {\n *      .trimmed {\n *          max-height: 3 * @pill-height;\n *          overflow: hidden;\n *      }\n *      .show-all {\n *          max-height: 6 * @pill-height;\n *          overflow: auto;\n *      }\n *   }\n */\nimport { A } from '@ember/array';\nimport Component from '@ember/component';\nimport { set, computed } from '@ember/object';\nimport { run } from '@ember/runloop';\nimport layout from '../templates/components/paginated-scroll-list';\n\nconst DEFAULT_ITEMS_TO_RENDER = 20,\n  DEFAULT_PER_PAGE = 250,\n  DEFAULT_SCROLL_PADDING = 250;\n\nexport default Component.extend({\n  layout,\n\n  /**\n   * @property {Array} classNames\n   */\n  classNames: ['paginated-scroll-list'],\n\n  /**\n   * @private\n   * @property {String} _containerClass - class of container containing items, Wrapper for <ul>\n   */\n  _containerClass: 'items-container',\n\n  /**\n   * @private\n   * @property {String} _collectionClass - class of <ul> containing the elements\n   * Caution: ul.items-list element is used for height computation. Do not explicitly style its height!\n   */\n  _collectionClass: 'items-list',\n\n  /**\n   * @property {Array} items - list of items\n   */\n  items: undefined,\n\n  /**\n   * @property {Boolean} trim - if true collection is rendered in trimmed mode (mode with show more link)\n   */\n  trim: true,\n\n  /**\n   * @property {String} moreLabel - show more label\n   */\n  moreLabel: 'Show more',\n\n  /**\n   * @property {Number} initialItemsToRender - min items to render in trimmed state\n   */\n  initialItemsToRender: DEFAULT_ITEMS_TO_RENDER,\n\n  /**\n   * @property {Number} perPage - number of items loaded per page\n   */\n  perPage: DEFAULT_PER_PAGE,\n\n  /**\n   * @private\n   * @property {Number} _page - scroll pagination starting page number\n   */\n  _page: 0,\n\n  /**\n   * @property {Number} scrollPadding - padding from bottom of scroll to initiate loading of more items\n   */\n  scrollPadding: DEFAULT_SCROLL_PADDING,\n\n  /**\n   * @private\n   * @property {Boolean} _itemsExceedMaxHt - property depicts if items exceed max height\n   */\n  _itemsExceedMaxHt: false,\n\n  /**\n   * @private\n   * @property {Array} _itemsToRender - items to render\n   */\n  _itemsToRender: computed('items.[]', '_perPage', function () {\n    return A(this.items.slice(0, this._perPage));\n  }),\n\n  /**\n   * @private\n   * @property {Boolean} _isTrimmed - true of items collection is trimmed else false\n   */\n  _isTrimmed: computed('trim', '_itemsExceedMaxHt', '_hasMoreItems', function () {\n    return this.trim && (this._itemsExceedMaxHt || this._hasMoreItems);\n  }),\n\n  /**\n   * @private\n   * @property {Number} _perPage - number of items loaded per page based on trim flag\n   */\n  _perPage: computed('trim', 'perPage', 'initialItemsToRender', function () {\n    if (this.trim) {\n      return this.initialItemsToRender;\n    }\n    return this.perPage;\n  }),\n\n  /**\n   * Hook to execute after every render and re-render\n   *\n   * @event didRender\n   */\n  didRender() {\n    this._super(...arguments);\n    this._setItemsExceedMaxHt();\n  },\n\n  /**\n   * @private\n   * @property {Boolean} _hasMoreItems - true if infinite scroll has more items to render else false\n   */\n  _hasMoreItems: computed('items.[]', '_itemsToRender.[]', function () {\n    return this.items.length > this._itemsToRender.length;\n  }),\n\n  /**\n   * Sets _itemsExceedMaxHt property\n   *\n   * @private\n   * @method: _setItemsExceedMaxHt\n   * @returns {Void}\n   */\n  _setItemsExceedMaxHt() {\n    let containerSelector = `.${this._containerClass}`,\n      itemsCollectionSelector = `.${this._collectionClass}`,\n      itemsExceedMaxHt = this.$(itemsCollectionSelector).outerHeight() > this.$(containerSelector).innerHeight();\n\n    set(this, '_itemsExceedMaxHt', itemsExceedMaxHt);\n  },\n\n  /**\n   * @event didInsertElement\n   */\n  didInsertElement() {\n    this._super(...arguments);\n    let containerSelector = `.${this._containerClass}`;\n    // Bind scroll event\n    this.$(containerSelector).on('scroll.paginated-scroll', () => {\n      run.debounce(this, this.onScroll, 50);\n    });\n  },\n\n  /**\n   * @event willDestroyElement\n   */\n  willDestroyElement() {\n    this._super(...arguments);\n    let containerSelector = `.${this._containerClass}`;\n    // Unbind scroll event\n    this.$(containerSelector).off('scroll.paginated-scroll');\n  },\n\n  /**\n   * @event onScroll - event to trigger on scroll\n   */\n  onScroll() {\n    let containerSelector = `.${this._containerClass}`,\n      // detect scroll to bottom\n      scrolledToBottom =\n        this.$(containerSelector).scrollTop() + this.$(containerSelector).innerHeight() >=\n        this.$(containerSelector)[0].scrollHeight - this.scrollPadding;\n\n    if (scrolledToBottom && this._hasMoreItems) {\n      this._appendPaginatedResults();\n    }\n  },\n\n  /**\n   * Appends next set of paginated records to display on scroll\n   *\n   * @private\n   * @method _appendPaginatedResults\n   * @returns {Void}\n   */\n  _appendPaginatedResults() {\n    this.incrementProperty('_page');\n\n    let perPage = this.perPage,\n      startIndex = this._page * perPage,\n      endIndex = startIndex + perPage,\n      recordsToAppend = this.items.slice(startIndex, endIndex);\n\n    A(this._itemsToRender).pushObjects(recordsToAppend);\n  },\n\n  actions: {\n    /**\n     * @action onShowMore - action triggered when show more link is clicked\n     */\n    onShowMore() {\n      set(this, 'trim', false);\n      this.showMore();\n    },\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/print-report-view.js",["1179","1180","1181","1182"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *  {{print-report-view\n *    report=report\n *    response=response\n *  }}\n */\n\nimport Component from '@ember/component';\nimport { get, computed } from '@ember/object';\nimport layout from '../templates/components/print-report-view';\n\nexport default Component.extend({\n  layout,\n\n  /**\n   * @property {Array} classNames\n   */\n  classNames: ['print-report-view'],\n\n  /**\n   * @property {Boolean} hasNoData - whether or not there is data to display\n   */\n  hasNoData: computed('response.meta.pagination.numberOfResults', function () {\n    return get(this, 'response.meta.pagination.numberOfResults') === 0;\n  }),\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-actions/base-action.js",["1183","1184","1185","1186","1187","1188","1189"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport Component from '@ember/component';\nimport { warn } from '@ember/debug';\nimport { computed, get } from '@ember/object';\n\nexport default Component.extend({\n  /**\n   * @property {DS.Model} report - custom report\n   */\n  report: undefined,\n\n  /**\n   * @property {Boolean} checkPermission - if true permission check is performed\n   */\n  checkPermission: false,\n\n  /**\n   * @property {Array} classNames\n   */\n  classNames: ['report-control'],\n\n  /**\n   * @property {Array} classNameBindings\n   */\n  classNameBindings: ['actionDisabled:disabled'],\n\n  /**\n   * @override\n   * @method init\n   */\n  init() {\n    this._super(...arguments);\n    warn('report should be of type report', get(this, 'report.constructor.modelName') === 'report', {\n      id: 'navi-report-actions.base-action',\n    });\n  },\n\n  /**\n   * @property {Boolean} - actionDisabled\n   */\n  actionDisabled: computed('checkPermission', 'report.{isOwner,isNew}', function () {\n    if (get(this, 'report.isNew')) {\n      return true;\n    }\n\n    if (get(this, 'checkPermission')) {\n      return !get(this, 'report.isOwner');\n    }\n\n    return false;\n  }),\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-actions/export.js",["1190","1191","1192","1193","1194","1195","1196"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   {{#report-actions/export\n *      report=report\n *   }}\n *      Inner template\n *   {{/report-actions/export}}\n */\n\nimport { inject as service } from '@ember/service';\nimport Component from '@ember/component';\nimport { get, computed } from '@ember/object';\nimport layout from '../../templates/components/report-actions/export';\n\nexport default Component.extend({\n  layout,\n\n  /**\n   * @property {DS.Model} report\n   */\n  report: undefined,\n\n  /**\n   * @property {Array} classNames\n   */\n  classNames: ['report-control', 'export-action'],\n\n  /**\n   * @property {String} tagName - component DOM tag\n   */\n  tagName: 'a',\n\n  /**\n   * @property {Array} attributeBindings - component attribute binding\n   */\n  attributeBindings: ['target', 'href', 'download'],\n\n  /**\n   * @property {Service} facts - instance of navi facts service\n   */\n  facts: service('navi-facts'),\n\n  /**\n   * @property {Boolean} download - Boolean to check if request is valid and set download\n   */\n  download: computed('disabled', function () {\n    // No Download for disabled action\n    if (get(this, 'disabled')) {\n      return null;\n    } else {\n      return true;\n    }\n  }),\n\n  /**\n   * @property {Boolean} download - Boolean to check if request is valid and set target\n   */\n  target: computed('disabled', function () {\n    // No target for disabled action\n    if (get(this, 'disabled')) {\n      return null;\n    } else {\n      return '_blank';\n    }\n  }),\n\n  /**\n   * @property {String} href - API link for the report\n   */\n  href: computed('report.{request,request.validations.isTruelyValid}', 'disabled', function () {\n    /*\n     * Observe 'report.request.validations.isTruelyValid' to recompute with any request change\n     * Void the href on a should disabled\n     */\n    if (get(this, 'disabled')) {\n      return 'javascript:void(0);';\n    }\n\n    let request = get(this, 'report.request').serialize();\n    return this.facts.getURL(request, { format: 'csv', dataSourceName: request.dataSource });\n  }),\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-actions/multiple-format-export.js",["1197","1198","1199"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   <ReportActions::MultipleFormatExport @report={{report}}>\n *      Inner template\n *   </ReportActions::MultipleFormatExport>\n */\n\nimport { inject as service } from '@ember/service';\nimport Component from '@ember/component';\nimport { computed, action } from '@ember/object';\nimport { readOnly } from '@ember/object/computed';\nimport layout from '../../templates/components/report-actions/multiple-format-export';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\nimport { featureFlag } from 'navi-core/helpers/feature-flag';\nimport { later, cancel } from '@ember/runloop';\n\n@templateLayout(layout)\n@tagName('')\nexport default class MultipleFormatExport extends Component {\n  /**\n   * @property {Service} facts - instance of navi facts service\n   */\n  @service('navi-facts') facts;\n\n  /**\n   * @property {Service} compression\n   */\n  @service compression;\n\n  /**\n   * @property {Service} store\n   */\n  @service store;\n\n  /**\n   * @property {Service} naviNotifications\n   */\n  @service naviNotifications;\n\n  /**\n   * @property {String} filename - filename for the downloaded file\n   */\n  @readOnly('report.title') filename;\n\n  /**\n   * @property {Array} supportedFileTypes - supported file types for export\n   */\n  supportedFileTypes = featureFlag('exportFileTypes');\n\n  /**\n   * @property {String} csvHref - CSV download link for the report\n   */\n  @computed('report.{request,validations.isTruelyValid}')\n  get csvHref() {\n    let request = this.report.request.serialize();\n    return this.facts.getURL(request, { format: 'csv', dataSourceName: request.dataSource });\n  }\n\n  /**\n   * @property {Promise} exportHref - Promise resolving to export to file link\n   */\n  @computed('report.{request,visualization,validations.isTruelyValid}')\n  get exportHref() {\n    const { report: model, compression, store } = this;\n    const clonedModel = model.toJSON();\n\n    //Create new report model in case dealing with a widget model\n    const newModel = store.createRecord('report', {\n      title: clonedModel.title,\n      request: model.get('request').clone(),\n      visualization: store.createFragment(clonedModel.visualization.type, clonedModel.visualization),\n    });\n\n    //Model compression requires an id\n    newModel.set('id', newModel.tempId);\n\n    return compression.compressModel(newModel).then((serializedModel) => `/export?reportModel=${serializedModel}`);\n  }\n\n  /**\n   * @property {Array} exportFormats - A list of export formats\n   */\n  @computed('csvHref', 'exportHref', 'supportedFileTypes')\n  get exportFormats() {\n    const { supportedFileTypes } = this;\n\n    const exportFormats = [];\n\n    if (Array.isArray(supportedFileTypes)) {\n      if (supportedFileTypes.includes('csv') || supportedFileTypes.includes('CSV')) {\n        exportFormats.push({\n          type: 'CSV',\n          href: this.csvHref,\n          icon: 'file-text-o',\n        });\n      }\n\n      if (supportedFileTypes.includes('pdf') || supportedFileTypes.includes('PDF')) {\n        exportFormats.push({\n          type: 'PDF',\n          href: this.exportHref,\n          icon: 'file-pdf-o',\n        });\n      }\n\n      if (supportedFileTypes.includes('png') || supportedFileTypes.includes('PNG')) {\n        exportFormats.push({\n          type: 'PNG',\n          href: this.exportHref.then((href) => `${href}&fileType=png`),\n          icon: 'file-image-o',\n        });\n      }\n    }\n\n    return exportFormats;\n  }\n\n  /**\n   * @action open\n   * A hack to make the trigger responding to click\n   */\n  @action\n  open(dropdown) {\n    if (this.closeTimer) {\n      cancel(this.closeTimer);\n      this.closeTimer = null;\n    } else {\n      dropdown.actions.open();\n    }\n  }\n\n  /**\n   * @action close\n   */\n  @action\n  close(dropdown) {\n    this.closeTimer = later(() => {\n      this.closeTimer = null;\n      dropdown.actions.close();\n    }, 300);\n  }\n\n  /**\n   * Lets the user know to wait for the export download\n   * @action notify\n   * @param {String} type - user readable name for the selected export option\n   */\n  @action\n  notify(type) {\n    this.naviNotifications.add({\n      title: `The ${type} download should begin shortly`,\n      style: 'info',\n      timeout: 'medium',\n    });\n  }\n}\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-actions.js",["1200"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *  <ReportActions\n *    @model={{this.model}}\n *    @addToDashboard={{this.addToDashboard}}\n *    @addToNewDashboard={{this.addToNewDashboard}}\n *  />\n */\n\nimport Component from '@ember/component';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\nimport layout from '../templates/components/report-actions';\n\n@templateLayout(layout)\n@tagName('')\nexport default class ReportActions extends Component {}\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-builder.js",["1201","1202","1203"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport { readOnly } from '@ember/object/computed';\nimport { inject as service } from '@ember/service';\nimport Component from '@ember/component';\nimport { computed, action } from '@ember/object';\nimport layout from '../templates/components/report-builder';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\nimport { A } from '@ember/array';\n\n@templateLayout(layout)\n@tagName('')\nexport default class ReportBuilderComponent extends Component {\n  /**\n   * @property {Service} metadataService\n   */\n  @service('navi-metadata') metadataService;\n\n  /**\n   * @property {Object} request\n   */\n  @readOnly('report.request') request;\n\n  /**\n   * @property {boolean} -- whether report has valid table\n   */\n  get hasValidLogicalTable() {\n    return !!this.request.tableMetadata;\n  }\n\n  /**\n   * @property {Array} allTables - All metadata table records\n   */\n  @computed\n  get allTables() {\n    const factTables = this.metadataService.all('table').filter((t) => t.isFact === true);\n    return A(factTables).sortBy('name');\n  }\n\n  /**\n   * @method _expandFilters\n   * @param {Function} shouldExpand\n   * @private\n   */\n  _expandFilters(shouldExpand) {\n    const { isFiltersCollapsed, onUpdateFiltersCollapsed } = this;\n\n    if (isFiltersCollapsed && typeof onUpdateFiltersCollapsed === 'function' && shouldExpand()) {\n      onUpdateFiltersCollapsed(false);\n    }\n  }\n\n  /**\n   * Stores element reference\n   * @param element - element inserted\n   */\n  @action\n  setupElement(element) {\n    this.componentElement = element;\n  }\n\n  /**\n   * @action onAddFilter\n   */\n  @action\n  onAddFilter() {\n    this._expandFilters(() => true);\n  }\n}\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-view.js",["1204","1205","1206","1207","1208","1209","1210","1211","1212","1213"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *  {{report-view\n *    report=report\n *    response=response\n *  }}\n */\n\nimport { readOnly } from '@ember/object/computed';\nimport { scheduleOnce } from '@ember/runloop';\nimport { capitalize } from '@ember/string';\nimport { inject as service } from '@ember/service';\nimport Component from '@ember/component';\nimport { set, get, computed, action } from '@ember/object';\nimport layout from '../templates/components/report-view';\nimport { layout as templateLayout } from '@ember-decorators/component';\nimport { observes } from '@ember-decorators/object';\nimport move from 'ember-animated/motions/move';\nimport { easeOut, easeIn } from 'ember-animated/easings/cosine';\nimport { fadeOut, fadeIn } from 'ember-animated/motions/opacity';\n\nconst VISUALIZATION_RESIZE_EVENT = 'resizestop';\n\n@templateLayout(layout)\nclass ReportView extends Component {\n  /**\n   * Property representing any data useful for providing additional functionality to a visualization and request\n   * Acts a hook to be extended by other navi addons\n   * @property {Promise} annotationData\n   */\n  annotationData = undefined;\n\n  /**\n   * @property {Object} request\n   */\n  @readOnly('report.request')\n  request;\n\n  get classNames() {\n    const classNames = ['report-view'];\n\n    return classNames;\n  }\n\n  /**\n   * @property {Service} naviVisualizations - navi visualizations service\n   */\n  @service('navi-visualizations')\n  naviVisualizations;\n\n  @service('store')\n  store;\n\n  /**\n   * @property {Array} visualizations - array of available visualizations\n   * annotated with a field corresponding to whether the visualization type is valid based on the request\n   */\n  @computed('response.rows', 'report.request')\n  get validVisualizations() {\n    return get(this, 'naviVisualizations').validVisualizations(get(this, 'report.request'));\n  }\n\n  /**\n   * @property {String} visualizationTypeLabel - Display name of the visualization type\n   */\n  @computed('report.visualization.type')\n  get visualizationTypeLabel() {\n    return get(this, 'report.visualization.type').split('-').map(capitalize).join(' ');\n  }\n\n  /**\n   * @property {Boolean} isEditingVisualization - Display visualization config or not\n   */\n  isEditingVisualization = false;\n\n  /**\n   * @property {Boolean} hasMostRecentResponse - whether or not response matches the most recent version of report.request\n   */\n  hasMostRecentResponse = false;\n\n  /**\n   * @property {String} currentView - the visualization type of the report\n   */\n  @computed('report.visualization.type')\n  get currentView() {\n    return this.report.visualization.type;\n  }\n\n  /**\n   * @property {Boolean} hasNoData - whether or not there is data to display\n   */\n  @computed('response.meta.pagination.numberOfResults')\n  get hasNoData() {\n    return get(this, 'response.meta.pagination.numberOfResults') === 0;\n  }\n\n  /**\n   * @method didReceiveAttrs\n   * @override\n   */\n  didReceiveAttrs() {\n    super.didReceiveAttrs(...arguments);\n\n    // Assume any new response is always the most recent\n    set(this, 'hasMostRecentResponse', true);\n  }\n\n  /**\n   * @method doResizeVisualization\n   */\n  doResizeVisualization() {\n    if (this.element) {\n      this.element.dispatchEvent(new Event(VISUALIZATION_RESIZE_EVENT));\n    }\n  }\n\n  /**\n   * Observer that resizes the visualization when the number of filters or collapsed state change\n   * since the filter and visualization share the same vertical space\n   *\n   * @method filterCountOrCollapsedDidChange\n   */\n  @observes('isFiltersCollapsed', 'report.request.filters.[]')\n  filterCountOrCollapsedDidChange() {\n    scheduleOnce('afterRender', this, 'resizeVisualization');\n  }\n\n  /**\n   * @action toggleEditVisualization\n   */\n  @action\n  toggleEditVisualization() {\n    set(this, 'isEditingVisualization', !this.isEditingVisualization);\n  }\n\n  /**\n   * @action resizeVisualization\n   */\n  @action\n  resizeVisualization() {\n    scheduleOnce('afterRender', this, 'doResizeVisualization');\n  }\n\n  /**\n   * @action onVisualizationTypeUpdate\n   * @param {String} type\n   */\n  @action\n  onVisualizationTypeUpdate(type) {\n    const {\n      report,\n      report: { request },\n      response,\n    } = this;\n\n    let newVisualization = this.store.createFragment(type, {\n      _request: request, //Provide request for validation\n    });\n    newVisualization.rebuildConfig(request, response);\n    set(report, 'visualization', newVisualization);\n  }\n\n  /**\n   * Custom fade transition when editing a visualization\n   * @param context - animation context\n   */\n  *visFadeTransition({ removedSprites, insertedSprites }) {\n    // fadeIn a little bit longer so we can see the fade after the drawer closes\n    yield Promise.all(insertedSprites.map((s) => fadeIn(s, { duration: 500 })));\n    yield Promise.all(removedSprites.map(fadeOut));\n  }\n\n  /**\n   * Drawer transition\n   * @param context - animation context\n   */\n  @action\n  *drawerTransition({ insertedSprites, removedSprites }) {\n    const x = document.querySelector('.report-view__animation-container').getBoundingClientRect().right;\n    yield Promise.all(\n      insertedSprites.map((sprite) => {\n        sprite.startAtPixel({ x });\n        sprite.applyStyles({ 'z-index': '1' });\n        return move(sprite, { easing: easeOut });\n      })\n    );\n\n    yield Promise.all(\n      removedSprites.map((sprite) => {\n        sprite.applyStyles({ 'z-index': '1' });\n        sprite.endAtPixel({ x });\n        return move(sprite, { easing: easeIn });\n      })\n    );\n    this.doResizeVisualization();\n  }\n}\nexport default ReportView;\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/report-visualization.js",["1214","1215"],"/**\n * Copyright 2020, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *  {{report-visualization\n *    report=report\n *    response=response\n *  }}\n */\n\nimport Component from '@ember/component';\nimport { computed } from '@ember/object';\nimport { layout as templateLayout, tagName } from '@ember-decorators/component';\nimport { getOwner } from '@ember/application';\nimport layout from '../templates/components/report-visualization';\n\n@templateLayout(layout)\n@tagName('')\nclass ReportVisualization extends Component {\n  /**\n   * Object representing the metadata required by the visualization\n   * @property {Object} visualizationHash\n   */\n  @computed('report.request', 'response')\n  get visualizationHash() {\n    return {\n      request: this.report.request,\n      response: this.response || { rows: [] },\n    };\n  }\n\n  /**\n   * @property {String} visualizationComponent - name of the visualization component\n   */\n  @computed('report.visualization.type', 'print')\n  get visualizationComponent() {\n    const { type } = this.report.visualization;\n    let componentName = `navi-visualizations/${type}`;\n    if (this.print) {\n      const printComponent = `${componentName}-print`;\n      if (getOwner(this).factoryFor(`component:${printComponent}`)) {\n        componentName = printComponent;\n      }\n    }\n    return componentName;\n  }\n}\n\nexport default ReportVisualization;\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/components/unauthorized-table.js",["1216","1217"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n *\n * Usage:\n *   {{unauthorized-table report=reportModel}}\n */\n\nimport Component from '@ember/component';\nimport { set } from '@ember/object';\nimport layout from '../templates/components/unauthorized-table';\n\nexport default Component.extend({\n  layout,\n\n  /**\n   * Don't wrap the component\n   */\n  tagName: '',\n\n  /**\n   * Compute the table name first entry only.\n   *\n   * @property {String} tableName - name of the logical table\n   */\n  tableName: '',\n\n  init() {\n    this._super(...arguments);\n    set(this, 'tableName', this.report?.request?.tableMetadata?.name);\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/can-having.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/delivery-rule-action.js",["1218","1219"],"/**\n * Copyright 2018, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport Helper from '@ember/component/helper';\nimport { inject as service } from '@ember/service';\nimport { get } from '@ember/object';\nimport { assert } from '@ember/debug';\nimport { join } from '@ember/runloop';\nimport { DeliveryRuleActions } from 'navi-reports/services/delivery-rule-action-dispatcher';\nimport Ember from 'ember';\n\n//Used to mark the returned action as an instance of a closure action\nconst CLOSURE_ACTION_MODULE =\n  'ember-glimmer/helpers/action' in Ember.__loader.registry\n    ? Ember.__loader.require('ember-glimmer/helpers/action')\n    : {};\n\nexport default Helper.extend({\n  /**\n   * @property {Service} deliveryRuleActionDispatcher\n   */\n  deliveryRuleActionDispatcher: service(),\n\n  /**\n   * Validates a delivery-rule action and then dispatches it via the delivery-rule action dispatcher\n   *\n   * @method deliveryRuleAction\n   * @param {Array} array with the name of the action to dispatch\n   * @returns {Function} Closure action\n   */\n  compute([action, ...params]) {\n    let actionName = DeliveryRuleActions[action];\n    assert(`The action name \"${action}\" is not a valid delivery rule action`, actionName);\n    let deliveryRuleAction = (...parameters) =>\n        join(() => get(this, 'deliveryRuleActionDispatcher').dispatch(actionName, ...params, ...parameters)),\n      actionId = CLOSURE_ACTION_MODULE.ACTION;\n\n    //Make the delivery-rule action a \"real\" action\n    deliveryRuleAction[actionId] = true;\n\n    return deliveryRuleAction;\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/format-interval-inclusive-inclusive.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/get-user.js",["1220","1221"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport { get } from '@ember/object';\nimport { inject as service } from '@ember/service';\nimport Helper from '@ember/component/helper';\n\nexport default Helper.extend({\n  /**\n   * @property {Service} userService\n   */\n  userService: service('user'),\n\n  /*\n   * @method compute\n   * @override\n   */\n  compute() {\n    return get(this, 'userService').getUser();\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/guess-timezone.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/item-action.js",["1222","1223"],"/**\n * Copyright 2018, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport Helper from '@ember/component/helper';\nimport { inject as service } from '@ember/service';\nimport { get } from '@ember/object';\nimport { assert } from '@ember/debug';\nimport { join } from '@ember/runloop';\nimport { ItemActions } from 'navi-reports/services/item-action-dispatcher';\nimport Ember from 'ember';\n\n//Used to mark the returned action as an instance of a closure action\nconst CLOSURE_ACTION_MODULE =\n  'ember-glimmer/helpers/action' in Ember.__loader.registry\n    ? Ember.__loader.require('ember-glimmer/helpers/action')\n    : {};\n\nexport default Helper.extend({\n  /**\n   * @property {Service} itemActionDispatcher\n   */\n  itemActionDispatcher: service(),\n\n  /**\n   * Validates a report action and then dispatches it via the report action dispatcher\n   *\n   * @method itemAction\n   * @param {Array} array with the name of the action to dispatch\n   * @returns {Function} Closure action\n   */\n  compute([action, ...params]) {\n    let actionName = ItemActions[action];\n    assert(`The action name \"${action}\" is not a valid item action`, actionName);\n    let itemAction = () => join(() => get(this, 'itemActionDispatcher').dispatch(actionName, ...params)),\n      actionId = CLOSURE_ACTION_MODULE.ACTION;\n\n    //Make the report action a \"real\" action\n    itemAction[actionId] = true;\n\n    return itemAction;\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/model-for.js",["1224","1225","1226"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport { oneWay } from '@ember/object/computed';\nimport Helper from '@ember/component/helper';\nimport { getOwner } from '@ember/application';\nimport { set, observer, get } from '@ember/object';\n\nexport default Helper.extend({\n  /**\n   * @property {*} content - model of route\n   */\n  content: oneWay('route.controller.model'),\n\n  /**\n   * Returns the resolved model of a parent (or any ancestor) route\n   * in a route hierarchy. If the ancestor route's model was a promise,\n   * its resolved result is returned.\n   *\n   * @method modelFor\n   * @param {Array} array with the name of the route\n   * @return {Object} the model object\n   */\n  compute([name]) {\n    let route = getOwner(this).lookup(`route:${name}`);\n    set(this, 'route', route);\n    return get(this, 'content');\n  },\n\n  /**\n   * Observer that recomputes the value when route model changes\n   * @method contentDidChange\n   * @returns {Void}\n   */\n  contentDidChange: observer('content', function () {\n    this.recompute();\n  }),\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/string-contains.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/helpers/update-report-action.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/mixins/collection-selector.js",["1227","1228","1229","1230","1231","1232","1233"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport { A } from '@ember/array';\nimport { isEmpty } from '@ember/utils';\nimport { on } from '@ember/object/evented';\nimport Mixin from '@ember/object/mixin';\nimport { get, observer } from '@ember/object';\nimport { assert } from '@ember/debug';\n\nexport default Mixin.create({\n  /**\n   *  @property {String} tagName\n   */\n  tagName: 'fieldset',\n\n  /**\n   * @property {Array} items - An array of data objects\n   */\n  items: undefined,\n\n  /**\n   * @property {Object} [selectedItem] - Selected collection value\n   */\n  selectedItem: undefined,\n\n  /**\n   * @observer validate\n   * Validates selectedItem and item on init\n   */\n  validate: on(\n    'init',\n    observer('selectedItem', 'items.[]', function () {\n      let selectedItem = get(this, 'selectedItem.0') || get(this, 'selectedItem'),\n        items = get(this, 'items');\n\n      // Checks if items array is defined and not empty\n      assert('Items array should not be empty', !isEmpty(items));\n\n      // Check if items array is unique\n      assert('Items array should be unique', get(A(items).uniq(), 'length') === get(items, 'length'));\n\n      //Check if selectedItem is present in items array\n      if (selectedItem && !A(items).includes(selectedItem)) {\n        assert(`Selected item ${selectedItem} is not present in items array`, A(items).includes(selectedItem));\n      }\n    })\n  ),\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/mixins/report-route.js",["1234"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport { set } from '@ember/object';\nimport Mixin from '@ember/object/mixin';\n\nexport default Mixin.create({\n  actions: {\n    /**\n     * @action didUpdateVisualization\n     * @param {Object} metadata - config data for current visualization\n     */\n    didUpdateVisualization(metadata) {\n      set(this, 'currentModel.visualization', metadata);\n    },\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/models/report-collection.js",["1235","1236","1237","1238","1239","1240","1241","1242"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\n\nimport DS from 'ember-data';\n\nexport default DS.Model.extend({\n  author: DS.belongsTo('user', { async: true }),\n  title: DS.attr('string'),\n  createdOn: DS.attr('moment'),\n  updatedOn: DS.attr('moment'),\n  reports: DS.hasMany('report', { async: true }),\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/routes/report-collections/collection.js",["1243","1244","1245"],"/**\n * Copyright 2019, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport { get } from '@ember/object';\nimport { inject as service } from '@ember/service';\nimport Route from '@ember/routing/route';\n\nexport default Route.extend({\n  user: service(),\n\n  /**\n   * Fetches the current user, then loads a list of reports under the collectionId\n   * @param collectionId\n   * @returns {*|Promise|Promise.<TResult>}\n   */\n  model({ collection_id }) {\n    return get(this, 'user')\n      .findOrRegister()\n      .then(() => this.get('store').findRecord('reportCollection', collection_id));\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/routes/report-collections/index.js",["1246","1247"],"/**\n * Copyright 2017, Yahoo Holdings Inc.\n * Licensed under the terms of the MIT license. See accompanying LICENSE.md file for terms.\n */\nimport Route from '@ember/routing/route';\n\nexport default Route.extend({\n  /**\n   * Lists global report collections\n   * @returns {*|Promise}\n   */\n  model() {\n    return this.get('store').findAll('reportCollection');\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon/serializers/report-collection.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/addon-test-support/vertical-collection.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/adapters/report-collection.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/column-selector.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/common-actions/delete.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/common-actions/get-api.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/common-actions/schedule.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/common-actions/share.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/dimension-bulk-import-simple.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/dimension-bulk-import.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/dropdown-date-picker.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/editable-label.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/favorite-item.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-builders/base.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-builders/collapsed.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-builders/dimension.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-builders/metric.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-builders/time-dimension.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-collection.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/dimension-select.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/invalid-value.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/multi-value-input.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/null-input.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/range-input.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/time-dimension/current.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/time-dimension/date.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/time-dimension/lookback-trigger.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/time-dimension/lookback.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/time-dimension/range.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/filter-values/value-input.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/grouped-list.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/metric-filter-config.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/missing-intervals-warning.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-action-list.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-collection.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-column-config/base.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-column-config/item.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-column-config.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-date-picker.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-email-input.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-email-tag.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-loading-message.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-modal.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-table-select-item.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-table-select-trigger.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-table-select.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-tag-input/tag.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/navi-tag-input.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/paginated-scroll-list.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/parameter-list-item.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/pick-single.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/power-select-bulk-import-trigger.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/power-select-collection-options.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/print-report-view.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-actions/base-action.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-actions/export.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-actions/multiple-format-export.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-actions/save-as.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-actions.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-builder.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-header.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-view-overlay.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-view.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/report-visualization.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/routes/reports-report-error.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/unauthorized-table.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/components/visualization-toggle.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/delivery-rule.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/item.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/report/table-visualization.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/column.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/constraint.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/fili.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/filter.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/sort.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/consumers/request/table.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/controllers/dashboards/index.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/controllers/reports/report/save-as.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/controllers/reports/report/view.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/controllers/reports/report.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/controllers/reports-print/reports/report.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/can-having.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/delivery-rule-action.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/format-dimension-value.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/format-interval-inclusive-inclusive.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/get-user.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/guess-timezone.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/item-action.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/model-for.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/string-contains.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/helpers/update-report-action.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/models/report-collection.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/report-collections/collection.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/report-collections/index.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/index.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/new.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/clone.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/edit.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/index.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/save-as.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/unauthorized.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report/view.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports/report.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports-print/reports/new.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports-print/reports/report/index.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports-print/reports/report/view.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports-print/reports/report.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/routes/reports.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/serializers/report-collection.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/delivery-rule-action-dispatcher.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/item-action-dispatcher.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/navi-visualizations.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/request-action-dispatcher.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/request-constrainer.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/services/update-report-action-dispatcher.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/report-collections/collection.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/report-collections/error.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/report-collections/index.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/report-collections/loading.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/report-collections.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/error.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/index.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/new.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/edit.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/error.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/invalid.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/loading.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/unauthorized.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report/view.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports/report.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports-print/reports/report/error.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports-print/reports/report/invalid.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports-print/reports/report/view.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports-print/reports/report.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/app/templates/reports.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/blueprints/navi-reports/index.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/config/coverage.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/config/ember-try.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/config/environment.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/ember-cli-build.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/index.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/testem.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/.eslintrc.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/metric-parameters-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/multi-datasource-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/print-report-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/report-collections-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/report-test.js",["1248","1249","1250","1251","1252","1253","1254"],"import Component from '@ember/component';\nimport { get } from '@ember/object';\nimport { blur, click, currentURL, fillIn, find, findAll, triggerEvent, visit, waitFor } from '@ember/test-helpers';\nimport Ember from 'ember';\nimport { animationsSettled } from 'ember-animated/test-support';\nimport { module, test, skip } from 'qunit';\nimport $ from 'jquery';\nimport { clickTrigger } from 'ember-basic-dropdown/test-support/helpers';\nimport { Response } from 'ember-cli-mirage';\nimport { setupMirage } from 'ember-cli-mirage/test-support';\nimport config from 'ember-get-config';\nimport { selectChoose, selectSearch } from 'ember-power-select/test-support';\nimport { setupApplicationTest } from 'ember-qunit';\nimport moment from 'moment';\nimport { clickItem, clickItemFilter } from 'navi-reports/test-support/report-builder';\nimport { reorder } from 'ember-sortable/test-support/helpers';\nimport { setupAnimationTest } from 'ember-animated/test-support';\n\n// Regex to check that a string ends with \"{uuid}/view\"\nconst TempIdRegex = /\\/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\/view$/;\n\n// Regex to check that a string ends with \"{integer}/view\"\nconst PersistedIdRegex = /\\/\\d+\\/view$/;\n\nlet CompressionService;\n\nmodule('Acceptance | Navi Report', function (hooks) {\n  setupApplicationTest(hooks);\n  setupAnimationTest(hooks);\n  setupMirage(hooks);\n\n  hooks.beforeEach(function () {\n    CompressionService = this.owner.lookup('service:compression');\n    // Mocking add-to-dashboard component\n    this.owner.application.register(\n      'component:report-actions/add-to-dashboard',\n      Component.extend({ classNames: 'add-to-dashboard' }),\n      { instantiate: false }\n    );\n\n    config.navi.FEATURES.enableVerticalCollectionTableIterator = true;\n  });\n\n  hooks.afterEach(function () {\n    config.navi.FEATURES.enableVerticalCollectionTableIterator = false;\n  });\n\n  test('validation errors', async function (assert) {\n    assert.expect(3);\n\n    // Make an invalid change and run report\n    await visit('/reports/13');\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete metric Ad Clicks\"]');\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete dimension Property (id)\"]');\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete time-dimension Date Time (day)\"]');\n    await click('.navi-report__run-btn');\n\n    assert.equal(currentURL(), '/reports/13/invalid', 'User is transitioned to invalid route');\n\n    let errors = findAll('.navi-info-message__error-list-item').map((el) => find(el).innerText.trim());\n    assert.deepEqual(errors, ['At least one column should be selected'], 'Form errors are displayed to user');\n\n    await clickItem('dimension', 'Date Time');\n    await clickItem('dimension', 'Property');\n    await clickItem('metric', 'Ad Clicks');\n    await click('.navi-report__run-btn');\n\n    assert.equal(currentURL(), '/reports/13/view', 'Fixing errors and clicking \"Run\" returns user to view route');\n  });\n\n  test('Clone report', async function (assert) {\n    assert.expect(2);\n\n    await visit('/reports/1/clone');\n\n    assert.dom('.report-view').exists('The route transistions to report view');\n\n    assert.equal(\n      find('.report-header__title').innerText.trim(),\n      'Copy Of Hyrule News',\n      'Cloned report is being viewed'\n    );\n  });\n\n  test('Clone invalid report', async function (assert) {\n    assert.expect(2);\n\n    await visit('/reports/13');\n    // Add a dimension filter\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete metric Ad Clicks\"]');\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete dimension Property (id)\"]');\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete time-dimension Date Time (day)\"]');\n    await click('.report-actions__clone-btn');\n\n    assert.ok(\n      currentURL().endsWith('/edit'),\n      'After clicking the run button, the route transitions to the invalid route'\n    );\n\n    assert.notOk(currentURL().startsWith('/reports/13'), 'After clicking, the url no longer is on report 13');\n  });\n\n  test('New report', async function (assert) {\n    assert.expect(4);\n    let originalFlag = config.navi.FEATURES.exportFileTypes;\n    config.navi.FEATURES.exportFileTypes = ['csv', 'png'];\n    await visit('/reports/new');\n\n    /* == Add filter == */\n    await clickItemFilter('dimension', 'Operating System');\n\n    /* == Run with errors == */\n    await click('.navi-report__run-btn');\n\n    assert.ok(\n      currentURL().endsWith('/invalid'),\n      'After clicking the run button, the route transitions to the invalid route'\n    );\n\n    /* == Fix errors == */\n    await clickItem('dimension', 'Date Time');\n    await selectChoose('.navi-column-config-item__parameter-trigger', 'Day');\n    await clickItemFilter('dimension', 'Operating System');\n    await clickItem('metric', 'Ad Clicks');\n    await selectChoose('.filter-builder__operator-trigger', 'Between');\n\n    await clickTrigger('.filter-values--date-range-input__low-value');\n\n    await click($('button.ember-power-calendar-day--current-month:contains(1)')[0]);\n    await clickTrigger('.filter-values--date-range-input__high-value .ember-basic-dropdown-trigger');\n    await click($('button.ember-power-calendar-day--current-month:contains(2)')[0]);\n    await click('.navi-report__run-btn');\n\n    assert.ok(currentURL().endsWith('/view'), 'Running a report with no errors transitions to view route');\n\n    assert.ok(!!findAll('.table-widget').length, 'Data table visualization is shown by default');\n\n    assert.ok(\n      !!findAll('.table-header-row-vc--view .table-header-cell').filter((el) => el.innerText.includes('Ad Clicks'))\n        .length,\n      'Ad Clicks column is displayed'\n    );\n\n    config.navi.FEATURES.exportFileTypes = originalFlag;\n  });\n\n  test('New report - copy api', async function (assert) {\n    assert.expect(3);\n\n    await visit('/reports/new');\n    await clickItem('metric', 'Ad Clicks');\n\n    //add date-dimension\n    await clickItem('dimension', 'Date Time');\n\n    //set the filter interval\n    await selectChoose('.filter-builder__operator-trigger', 'Between');\n    await clickTrigger('.filter-values--date-range-input__low-value');\n    await click($('button.ember-power-calendar-day--current-month:contains(5)')[0]);\n    await clickTrigger('.filter-values--date-range-input__high-value');\n    await click($('button.ember-power-calendar-day--current-month:contains(10)')[0]);\n\n    await click('.get-api__action-btn');\n\n    assert.dom('.get-api__modal').exists('Copy modal is open after fixing error clicking button');\n\n    /* == Add some more metrics and check that copy modal updates == */\n    await click('.d-close');\n    await clickItem('metric', 'Additive Page Views');\n    await click('.get-api__action-btn');\n\n    assert.ok(\n      find('.get-api__api-input').value.includes('metrics=adClicks%2CaddPageViews'),\n      'API query updates with request'\n    );\n\n    assert\n      .dom('.get-api__api-input')\n      .hasValue(/^https:\\/\\/data.naviapp.io\\/\\S+$/, 'shows api url from right datasource');\n  });\n\n  test('Revert changes when exiting report - existing report', async function (assert) {\n    // visit report 1\n    await visit('/reports/1/view');\n\n    assert.dom('.filter-builder__subject').hasText('Date Time day');\n\n    // remove the dateTime column\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete time-dimension Date Time (day)\"]');\n\n    assert.dom('.navi-report__revert-btn').isVisible('Revert changes button is visible once a change has been made');\n\n    await click('.navi-report__revert-btn');\n\n    assert.dom('.navi-report__revert-btn').isNotVisible('After clicking \"Revert Changes\", button is once again hidden');\n\n    assert.dom('.navi-column-config-item[data-name=\"dateTime\"]');\n    assert.dom('.filter-builder__subject').hasText('Date Time day');\n  });\n\n  test('Revert changes - existing report', async function (assert) {\n    assert.expect(4);\n\n    await visit('/reports/13/view');\n\n    assert.ok(\n      !!$('.filter-builder__subject:contains(day)').length,\n      'After navigating to a route, the Timegrain \"day\" option is visible'\n    );\n\n    // Remove a metric\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete time-dimension Date Time (day)\"]');\n\n    assert.dom('.navi-report__revert-btn').isVisible('Revert changes button is visible once a change has been made');\n\n    await click('.navi-report__revert-btn');\n\n    assert.ok(\n      !!$('.filter-builder__subject:contains(day)').length,\n      'After navigating out of the route, the report model is rolled back'\n    );\n\n    assert.dom('.navi-report__revert-btn').isNotVisible('After clicking \"Revert Changes\", button is once again hidden');\n  });\n\n  test('Revert changes - new report', async function (assert) {\n    assert.expect(2);\n\n    await visit('/reports/new');\n\n    assert.dom('.navi-report__revert-btn').isNotVisible('Revert changes button is not initially visible');\n\n    await clickItem('metric', 'Ad Clicks');\n\n    assert\n      .dom('.navi-report__revert-btn')\n      .isNotVisible('Revert changes button is not visible on a new report even after making a change');\n  });\n\n  test('Revert and Save report', async function (assert) {\n    assert.expect(4);\n\n    await visit('/reports');\n    await visit('/reports/new');\n\n    await clickItem('dimension', 'Date Time');\n    await selectChoose('.navi-column-config-item__parameter-trigger', 'Day');\n    await selectChoose('.filter-builder__operator-trigger', 'Between');\n\n    //Add metric and save the report\n    await clickItem('metric', 'Page Views');\n    await click('.navi-report__save-btn');\n\n    server.patch('/reports/:id', function ({ reports }, request) {\n      assert.equal(\n        request.requestHeaders['Content-Type'],\n        'application/vnd.api+json',\n        'Request header content-type is correct JSON-API mime type'\n      );\n      assert.equal(\n        request.requestHeaders.Accept,\n        'application/vnd.api+json',\n        'Request header accept is correct JSON-API mime type'\n      );\n      const id = request.params.id;\n      let attrs = this.normalizedRequestAttrs();\n\n      return reports.find(id).update(attrs);\n    });\n\n    //remove a metric and save the report\n    await clickItem('metric', 'Total Page Views');\n    await click('.navi-report__save-btn');\n\n    //remove another metric and run the report\n    await clickItem('metric', 'Additive Page Views');\n    await click('.navi-report__run-btn');\n\n    //revert changes\n    await click('.navi-report__revert-btn');\n\n    let emberId = find('.report-view.ember-view').id,\n      component = this.owner.lookup('-view-registry:main')[emberId];\n    assert.equal(\n      component.get('report.visualization.type'),\n      'table',\n      'Report has a valid visualization type after running then reverting.'\n    );\n\n    //run after reverting\n    await click('.navi-report__run-btn');\n\n    assert\n      .dom('.navi-info-message.navi-report-error__info-message.ember-view')\n      .isNotVisible('Error message is not displayed when reverting and running');\n  });\n\n  test('Cancel Save As report', async function (assert) {\n    assert.expect(6);\n\n    await visit('/reports');\n    await visit('/reports/new');\n\n    //Add a metrics and save the report\n    await clickItem('dimension', 'Date Time');\n    await selectChoose('.filter-builder__operator-trigger', 'Between');\n    await clickItem('metric', 'Additive Page Views');\n    await click('.navi-report__save-btn');\n\n    // Change the Dim\n    await click('.navi-column-config-item__trigger');\n    await selectChoose('.navi-column-config-item__parameter', 'Week');\n\n    // And click Save AS the report\n    await click('.navi-report__save-as-btn');\n    // The Modal with buttons is Visible\n    assert.dom('.save-as__cancel-btn').isVisible('Save As Modal is visible with cancel key');\n\n    // Press the Modal X button\n    await click('.save-as__cancel-btn');\n\n    // Changes were not reverted, but they were not saved\n    assert.ok(\n      !!$('.filter-builder__subject:contains(isoWeek)').length,\n      'On cancel the dirty state of the report still remains'\n    );\n\n    let emberId = find('.report-view.ember-view').id,\n      component = this.owner.lookup('-view-registry:main')[emberId];\n    assert.equal(\n      component.get('report.visualization.type'),\n      'table',\n      'Report has a valid visualization type after closing Save-As Modal'\n    );\n\n    // And click Save AS the report\n    await click('.navi-report__save-as-btn');\n\n    // The Modal with buttons is Visible\n    assert.dom('.save-as__cancel-btn').isVisible('Save As Modal is visible with cancel key');\n\n    // Press the Modal cancel button\n    await click('.save-as__cancel-btn');\n\n    // Changes were not reverted, but they were not saved\n    assert.ok(\n      !!$('.filter-builder__subject:contains(isoWeek)').length,\n      'On cancel the dirty state of the report still remains'\n    );\n\n    assert.equal(\n      component.get('report.visualization.type'),\n      'table',\n      'Report has a valid visualization type after canceling Save-As.'\n    );\n  });\n\n  test('Save As report', async function (assert) {\n    assert.expect(6);\n\n    await visit('/reports/13');\n\n    // Change the Dim\n    await click('.navi-column-config-item__trigger');\n\n    await selectChoose('.navi-column-config-item__parameter', 'Week');\n\n    // And click Save AS the report\n    await click('.navi-report__save-as-btn');\n\n    // The Modal with buttons is Visible\n\n    assert.dom('.save-as__save-as-btn').isVisible('Save As Modal is visible with save as key');\n\n    // Press the save as\n    await click('.save-as__save-as-btn');\n\n    assert.ok(!!$('.filter-builder__subject:contains(isoWeek)').length, 'The new Dim is shown in the new report.');\n\n    // New Report is run\n    let emberId = find('.report-view.ember-view').id,\n      component = this.owner.lookup('-view-registry:main')[emberId];\n    assert.equal(\n      component.get('report.visualization.type'),\n      'table',\n      'Report has a valid visualization type after running then reverting.'\n    );\n\n    assert\n      .dom('.report-header__title')\n      .hasText('(New Copy) RequestV2 testing report', 'New Saved Report is being viewed');\n\n    await visit('/reports/13');\n\n    assert.ok(!!$('.filter-builder__subject:contains(day)').length, 'Old unsaved report have the old DIM.');\n\n    assert\n      .dom('.report-header__title')\n      .hasText('RequestV2 testing report', 'Old Report with unchanged title is being viewed.');\n  });\n\n  test('Save As change title manually', async function (assert) {\n    assert.expect(6);\n    await visit('/reports/13');\n    // Change the Dim\n    await click('.navi-column-config-item__trigger');\n\n    await selectChoose('.navi-column-config-item__parameter', 'Month');\n\n    // And click Save AS the report\n    await click('.navi-report__save-as-btn');\n\n    // The Modal with buttons is Visible\n    assert.dom('.save-as__save-as-btn').isVisible('Save As Modal is visible with save as key');\n\n    //fill in new title\n    await fillIn('.save-as__report-name', 'Title of Hyrule');\n\n    // Press the save as\n    await click('.save-as__save-as-btn');\n\n    assert.ok(!!$('.filter-builder__subject:contains(month)').length, 'The new Dim is shown in the new report.');\n\n    // New Report is run\n    let emberId = find('.report-view.ember-view').id,\n      component = this.owner.lookup('-view-registry:main')[emberId];\n    assert.equal(\n      component.get('report.visualization.type'),\n      'table',\n      'Report has a valid visualization type after running then reverting.'\n    );\n\n    assert.dom('.report-header__title').hasText('Title of Hyrule', 'New Saved Report is being viewed');\n\n    await visit('/reports/13');\n\n    assert.ok(!!$('.filter-builder__subject:contains(day)').length, 'Old unsaved report have the old DIM.');\n\n    assert\n      .dom('.report-header__title')\n      .hasText('RequestV2 testing report', 'Old Report with unchanged title is being viewed.');\n  });\n\n  test('Save As on failure', async function (assert) {\n    assert.expect(3);\n\n    server.urlPrefix = `${config.navi.appPersistence.uri}`;\n    server.post('/reports', () => new Response(500));\n\n    await visit('/reports/13');\n\n    // Change the Dim\n    await click('.navi-column-config-item__trigger');\n    await selectChoose('.navi-column-config-item__parameter', 'Week');\n\n    // And click Save AS the report\n    await click('.navi-report__save-as-btn');\n\n    // Press the save as\n    await click('.save-as__save-as-btn');\n\n    // An error will occur and it will go back to old report dirty state\n\n    // Check URL\n    assert.equal(currentURL(), '/reports/13/view', 'The url shows report 1');\n\n    // Old Report\n    assert\n      .dom('.report-header__title')\n      .hasText('RequestV2 testing report', 'Old Report with unchanged title is being viewed.');\n\n    // Dirty state of old\n    assert.ok(!!$('.filter-builder__subject:contains(isoWeek)').length, 'Old unsaved report have the old DIM.');\n  });\n\n  test('Save report', async function (assert) {\n    assert.expect(4);\n\n    await visit('/reports');\n    await visit('/reports/new');\n\n    assert.dom('.navi-report__save-btn').isVisible('Save button is visible in the new route');\n\n    // Build a report\n    await clickItem('metric', 'Ad Clicks');\n    await clickItem('dimension', 'Date Time');\n    await click('.navi-report__run-btn');\n\n    assert.ok(TempIdRegex.test(currentURL()), 'Creating a report brings user to /view route with a temp id');\n\n    await click('.navi-report__save-btn');\n\n    assert.ok(PersistedIdRegex.test(currentURL()), 'After saving, user is brought to /view route with persisted id');\n\n    assert\n      .dom('.navi-report__save-btn')\n      .isNotVisible('Save button is not visible when report is saved and has no changes');\n  });\n\n  test('Clone action', async function (assert) {\n    assert.expect(2);\n\n    await visit('/reports/1/view');\n    await click('.report-actions__clone-btn');\n\n    assert.ok(\n      TempIdRegex.test(currentURL()),\n      'After cloning, user is brought to view route for a new report with a temp id'\n    );\n\n    assert.dom('.report-header__title').hasText('Copy of Hyrule News', 'Cloned report is being viewed');\n  });\n\n  test('Clone action - enabled/disabled', async function (assert) {\n    assert.expect(2);\n\n    await visit('/reports/1/view');\n\n    assert\n      .dom('.report-actions__clone-btn')\n      .hasNoClass('navi-report__action-link--force-disabled', 'Clone action is enabled for a valid report');\n\n    // Remove all metrics to create , but do not save\n    await clickItem('metric', 'Ad Clicks');\n    await clickItem('metric', 'Nav Link Clicks');\n\n    assert\n      .dom('.report-actions__clone-btn')\n      .hasNoClass('navi-report__action-link--force-disabled', 'Clone action is enabled from a valid save report');\n  });\n\n  test('Export feature flag - disabled', async function (assert) {\n    assert.expect(1);\n\n    let originalFlag = config.navi.FEATURES.exportFileTypes;\n\n    await visit('/reports/1/view');\n    assert.deepEqual(\n      findAll('.report-header__header-action > *')\n        .map((e) => e.textContent.trim())\n        .filter((e) => e),\n      ['API Query', 'Clone', 'Share', 'Schedule', 'Delete'],\n      'Export is disabled by default'\n    );\n\n    config.navi.FEATURES.exportFileTypes = originalFlag;\n  });\n\n  test('Export feature flag - enabled', async function (assert) {\n    assert.expect(1);\n\n    let originalFlag = config.navi.FEATURES.exportFileTypes;\n\n    config.navi.FEATURES.exportFileTypes = ['csv', 'pdf', 'png'];\n    await visit('/reports/1/view');\n    assert.deepEqual(\n      findAll('.report-header__header-action > *')\n        .map((e) => e.textContent.trim())\n        .filter((e) => e),\n      ['API Query', 'Clone', 'Export', 'Share', 'Schedule', 'Delete'],\n      'Export is enabled with the feature flag on'\n    );\n\n    config.navi.FEATURES.exportFileTypes = originalFlag;\n  });\n\n  test('Export action - enabled/disabled', async function (assert) {\n    assert.expect(4);\n\n    let originalFlag = config.navi.FEATURES.exportFileTypes;\n    config.navi.FEATURES.exportFileTypes = ['csv', 'pdf', 'png'];\n\n    await visit('/reports/1/view');\n\n    assert\n      .dom('.report-actions__export-btn')\n      .hasNoClass('navi-report__action-link--force-disabled', 'Export action is enabled for a valid report');\n\n    // Remove dimension to make it out of sync with the visualization\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete dimension Property (id)\"]');\n\n    //currently failing as it should\n    assert\n      .dom('.report-actions__export-btn')\n      .hasClass('is-disabled', 'Export action is disabled when report is not valid');\n\n    // Revert changes to make it in sync with the visualization\n    await click('.navi-report__revert-btn');\n\n    assert.dom('.report-actions__export-btn').hasNoClass('is-disabled', 'Export action is enabled for a valid report');\n\n    // Remove visualization metric to create an invalid report\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete metric Ad Clicks\"]');\n\n    assert\n      .dom('.report-actions__export-btn')\n      .hasClass('is-disabled', 'Export action is disabled when report is not valid');\n\n    config.navi.FEATURES.exportFileTypes = originalFlag;\n  });\n\n  test('Export action - href', async function (assert) {\n    assert.expect(4);\n\n    let originalFeatureFlag = config.navi.FEATURES.exportFileTypes;\n\n    // Turn flag off\n    config.navi.FEATURES.exportFileTypes = ['csv'];\n    await visit('/reports/1/view');\n\n    assert.ok(\n      $('.report-actions__export-btn').attr('href').includes('/network/day/property;show=id/?dateTime='),\n      'Export url contains dimension path param'\n    );\n\n    /* == Add groupby == */\n    await clickItem('dimension', 'Product Family');\n    await click('.navi-report__run-btn');\n\n    assert.ok(\n      $('.report-actions__export-btn')\n        .attr('href')\n        .includes('/network/day/property;show=id/productFamily;show=id/?dateTime='),\n      'Groupby changes are automatically included in export url'\n    );\n\n    assert.notOk(\n      $('.report-actions__export-btn').attr('href').includes('filter'),\n      'No filters are initially present in export url'\n    );\n\n    /* == Add filter == */\n    await click('.navi-report__run-btn');\n    await clickItemFilter('dimension', 'Product Family');\n\n    /* == Update filter value == */\n    await selectChoose('.filter-values--dimension-select__trigger', '1');\n    await click('.navi-report__run-btn');\n\n    assert.ok(\n      decodeURIComponent($('.report-actions__export-btn').attr('href')).includes('productFamily|id-in[\"1\"]'),\n      'Filter updates are automatically included in export url'\n    );\n\n    config.navi.FEATURES.exportFileTypes = originalFeatureFlag;\n  });\n\n  test('Multi export action - csv href', async function (assert) {\n    assert.expect(5);\n\n    let originalFlag = config.navi.FEATURES.exportFileTypes;\n    config.navi.FEATURES.exportFileTypes = ['csv', 'pdf', 'png'];\n\n    await visit('/reports/1/view');\n    await clickTrigger('.multiple-format-export');\n\n    assert.ok(\n      $('.multiple-format-export__dropdown a:contains(CSV)')\n        .attr('href')\n        .includes('/network/day/property;show=id/?dateTime='),\n      'Export url contains dimension path param'\n    );\n\n    /* == Add groupby == */\n    await clickItem('dimension', 'Product Family');\n    await click('.navi-report__run-btn');\n    await clickTrigger('.multiple-format-export');\n\n    assert.ok(\n      $('.multiple-format-export__dropdown a:contains(CSV)')\n        .attr('href')\n        .includes('/network/day/property;show=id/productFamily;show=id/?dateTime='),\n      'Groupby changes are automatically included in export url'\n    );\n\n    assert.notOk(\n      $('.multiple-format-export__dropdown a:contains(CSV)').attr('href').includes('filter'),\n      'No filters are initially present in export url'\n    );\n\n    /* == Add filter == */\n    await clickItemFilter('dimension', 'Product Family');\n    /* == Update filter value == */\n    await selectChoose('.filter-values--dimension-select__trigger', '1');\n    await click('.navi-report__run-btn');\n    await clickTrigger('.multiple-format-export');\n\n    assert.ok(\n      decodeURIComponent($('.multiple-format-export__dropdown a:contains(CSV)').attr('href')).includes(\n        'productFamily|id-in[\"1\"]'\n      ),\n      'Filter updates are automatically included in export url'\n    );\n\n    assert\n      .dom(findAll('.multiple-format-export__dropdown a').filter((el) => el.textContent.trim() === 'CSV')[0])\n      .hasAttribute('href', /^https:\\/\\/data.naviapp.io\\/\\S+$/, 'uses csv export from right datasource');\n\n    config.navi.FEATURES.exportFileTypes = originalFlag;\n  });\n\n  test('Multi export action - pdf and png href', async function (assert) {\n    assert.expect(5);\n\n    let originalExportFlag = config.navi.FEATURES.exportFileTypes;\n    let originalTotalsFlag = config.navi.FEATURES.enableTotals;\n    config.navi.FEATURES.exportFileTypes = ['csv', 'pdf', 'png'];\n    config.navi.FEATURES.enableTotals = true;\n\n    const store = this.owner.lookup('service:store');\n\n    await visit('/reports/1/view');\n    await clickTrigger('.multiple-format-export');\n\n    const exportHref = $('.multiple-format-export__dropdown a:contains(\"PDF\")').attr('href');\n    let encodedModel = exportHref.split('/export?reportModel=')[1];\n\n    const actualModel = (await CompressionService.decompressModel(encodedModel)).serialize();\n    const expectedModel = (await store.findRecord('report', 1)).serialize();\n\n    //strip off owner\n    delete expectedModel.data.relationships;\n\n    assert.deepEqual(actualModel, expectedModel, 'PDF link has appropriate link to export service');\n\n    const exportToPngHref = $('.multiple-format-export__dropdown a:contains(\"PNG\")').attr('href');\n    assert.equal(`${exportHref}&fileType=png`, exportToPngHref, 'PNG link has appropriate link to export service');\n\n    /* == Add groupby == */\n    await clickItem('dimension', 'Product Family');\n    await click('.navi-report__run-btn');\n    await clickTrigger('.multiple-format-export');\n\n    encodedModel = $('.multiple-format-export__dropdown a:contains(\"PDF\")')\n      .attr('href')\n      .split('/export?reportModel=')[1];\n    await CompressionService.decompressModel(encodedModel).then((model) => {\n      assert.equal(\n        get(model, 'request.columns').objectAt(4).get('displayName'),\n        'Product Family (id)',\n        'Groupby changes are automatically included in export url'\n      );\n    });\n\n    /* == Change to table == */\n    await click('.visualization-toggle__option-icon[title=\"Data Table\"]');\n    await click('.navi-report__run-btn');\n    await clickTrigger('.multiple-format-export');\n\n    encodedModel = $('.multiple-format-export__dropdown a:contains(\"PDF\")')\n      .attr('href')\n      .split('/export?reportModel=')[1];\n    await CompressionService.decompressModel(encodedModel).then((model) => {\n      assert.equal(\n        get(model, 'visualization.type'),\n        'table',\n        'Visualization type changes are automatically included in export url'\n      );\n    });\n\n    /* == Add grand total to table == */\n    await click('.report-view__visualization-edit-btn');\n    await animationsSettled();\n    await click('.table-config__total-toggle-button--grand-total');\n    await click('.navi-report__run-btn');\n    await clickTrigger('.multiple-format-export');\n\n    encodedModel = $('.multiple-format-export__dropdown a:contains(\"PNG\")')\n      .attr('href')\n      .replace('&fileType=png', '')\n      .split('/export?reportModel=')[1];\n    await CompressionService.decompressModel(encodedModel).then((model) => {\n      assert.equal(\n        get(model, 'visualization.metadata.showTotals.grandTotal'),\n        true,\n        'Visualization config changes are automatically included in export url'\n      );\n    });\n\n    config.navi.FEATURES.exportFileTypes = originalExportFlag;\n    config.navi.FEATURES.enableTotals = originalTotalsFlag;\n  });\n\n  test('Get API action - enabled/disabled', async function (assert) {\n    await visit('/reports/13/view');\n\n    assert.dom('.get-api__action-btn').isNotDisabled('Get API action is enabled for a valid report');\n\n    // Remove all metrics\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete metric Ad Clicks\"]');\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete dimension Property (id)\"]');\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete time-dimension Date Time (day)\"]');\n\n    assert.dom('.get-api__action-btn').isDisabled('Get API action is disabled for an invalid report');\n  });\n\n  test('Share report', async function (assert) {\n    /* == Saved report == */\n    await visit('/reports/1/view');\n    await click($('.report-header__header-action:contains(Share) button')[0]);\n\n    // Remove all metrics to create an invalid report\n    await clickItem('metric', 'Ad Clicks');\n    await clickItem('metric', 'Nav Link Clicks');\n\n    assert\n      .dom($('.report-header__header-action:contains(Share)')[0])\n      .hasNoClass('.report-header__header-action--is-disabled', 'Share action is disabled for invalid report');\n\n    // Share is disabled on new\n    await visit('/reports/new');\n\n    assert\n      .dom($('.report-header__header-action:contains(Share)')[0])\n      .hasNoClass('report-header__header-action--is-disabled', 'Share action is disabled for new report');\n  });\n\n  test('Delete report on success', async function (assert) {\n    assert.expect(5);\n\n    /* == Delete success == */\n    await visit('/reports');\n\n    let reportNames = findAll('.table tbody td:first-child').map((el) => el.innerText.trim());\n\n    assert.deepEqual(\n      reportNames,\n      ['Hyrule News', 'Hyrule Ad&Nav Clicks', 'Report 12'],\n      'Report 1 is initially listed in reports route'\n    );\n\n    await visit('/reports/1/view');\n    await click('.report-actions__delete-btn');\n\n    assert\n      .dom('.delete__modal-details')\n      .hasText('This action cannot be undone. This will permanently delete the Hyrule News report.');\n\n    await click('.delete__modal-delete-btn');\n\n    assert.ok(currentURL().endsWith('/reports'), 'After deleting, user is brought to report list view');\n\n    reportNames = findAll('.table tbody td:first-child').map((el) => el.innerText.trim());\n\n    assert.deepEqual(reportNames, ['Hyrule Ad&Nav Clicks', 'Report 12'], 'Deleted report is removed from list');\n\n    // /* == Not author == */\n    await visit('/reports/3/view');\n\n    assert.notOk(\n      !!$('.navi-report__action:contains(Delete)').length,\n      'Delete action is not available if user is not the author'\n    );\n  });\n\n  test('Delete action - enabled at all times', async function (assert) {\n    assert.expect(4);\n\n    // Delete is not Disabled on new\n    await visit('/reports/new');\n\n    assert\n      .dom($('.report-header__header-action:contains(Delete)')[0])\n      .hasNoClass('.report-header__header-action--is-disabled', 'Delete action is enabled for a valid report');\n\n    // Delete is not Disabled on valid\n    await visit('/reports/1/view');\n\n    assert\n      .dom($('.report-header__header-action:contains(Delete)')[0])\n      .hasNoClass('report-header__header-action--is-disabled', 'Delete action is enabled for a valid report');\n\n    /*\n     * Remove all metrics to create an invalid report\n     * Delete is not Disabled on invalid\n     */\n    await clickItem('metric', 'Ad Clicks');\n    await clickItem('metric', 'Nav Link Clicks');\n\n    assert\n      .dom($('.report-header__header-action:contains(Delete)')[0])\n      .hasNoClass('report-header__header-action--is-disabled', 'Delete action is enabled when report is not valid');\n\n    // Check Delete modal appear\n    await click('.report-actions__delete-btn');\n    assert\n      .dom('.delete__modal-details')\n      .hasText('This action cannot be undone. This will permanently delete the Hyrule News report.');\n  });\n\n  test('Delete report on failure', async function (assert) {\n    server.urlPrefix = `${config.navi.appPersistence.uri}`;\n    server.delete('/reports/:id', () => new Response(500));\n\n    await visit('/reports/2/view');\n    await click('.report-actions__delete-btn');\n    await click('.delete__modal-delete-btn');\n\n    assert.ok(currentURL().endsWith('reports/2/view'), 'User stays on current view when delete fails');\n  });\n\n  test('Add to dashboard button - flag false', async function (assert) {\n    assert.expect(1);\n\n    let originalFeatures = config.navi.FEATURES;\n\n    // Turn flag off\n    config.navi.FEATURES = { dashboards: false };\n\n    await visit('/reports/1/view');\n\n    assert.dom('.add-to-dashboard').isNotVisible('Add to Dashboard button is not visible when feature flag is off');\n\n    config.navi.FEATURES = originalFeatures;\n  });\n\n  test('Switch Visualization Type', async function (assert) {\n    assert.expect(7);\n\n    await visit('/reports/1/view');\n\n    assert.ok(!!findAll('.line-chart-widget').length, 'Line chart visualization is shown as configured');\n\n    assert.dom('.report-view__visualization-edit-btn').hasText('Edit Line Chart', 'Edit Line Chart label is displayed');\n\n    assert.dom('.c3-legend-item').exists({ count: 4 }, 'Line chart visualization has 4 series as configured');\n\n    await click('.visualization-toggle__option-icon[title=\"Data Table\"]');\n\n    assert.ok(!!findAll('.table-widget').length, 'table visualization is shown when selected');\n\n    assert.dom('.report-view__visualization-edit-btn').hasText('Edit Table', 'Edit Data Table label is displayed');\n\n    await click('.visualization-toggle__option-icon[title=\"Line Chart\"]');\n\n    assert.ok(!!findAll('.line-chart-widget').length, 'line-chart visualization is shown when selected');\n\n    assert.dom('.report-view__visualization-edit-btn').hasText('Edit Line Chart', 'Edit Line Chart label is displayed');\n  });\n\n  test('redirect from report/index route', async function (assert) {\n    assert.expect(2);\n\n    await visit('/reports/1');\n\n    assert.equal(\n      currentURL(),\n      '/reports/1/view',\n      'The url of the index route is replaced with the url of the view route'\n    );\n\n    assert\n      .dom('.navi-report__body .report-view')\n      .isVisible('The report/index route redirects to the reports view route by default');\n  });\n\n  test('visiting Reports Route', async function (assert) {\n    assert.expect(1);\n\n    await visit('/reports');\n\n    let titles = findAll('.navi-collection .table tr td:first-of-type').map((el) => find(el).innerText.trim());\n\n    assert.deepEqual(\n      titles,\n      ['Hyrule News', 'Hyrule Ad&Nav Clicks', 'Report 12'],\n      'the report list with `navi-users`s reports is shown'\n    );\n  });\n\n  test('reports route actions -- clone', async function (assert) {\n    assert.expect(2);\n\n    await visit('/reports');\n\n    await triggerEvent('.navi-collection__row0', 'mouseenter');\n    // Click \"Clone\"\n    await click('.navi-collection__row0 .clone');\n\n    assert.ok(\n      TempIdRegex.test(currentURL()),\n      'After cloning, user is brought to view route for a new report with a temp id'\n    );\n\n    assert.dom('.report-header__title').hasText('Copy of Hyrule News', 'Cloned report is being viewed');\n  });\n\n  test('reports route actions -- delete', async function (assert) {\n    assert.expect(3);\n\n    await visit('/reports');\n\n    await triggerEvent('.navi-collection__row0', 'mouseenter');\n    await click('.navi-collection__row0 .navi-actions__delete-btn');\n\n    assert\n      .dom('.delete__modal-details')\n      .hasText('This action cannot be undone. This will permanently delete the Hyrule News report.');\n\n    await click('.delete__modal-delete-btn');\n\n    assert.ok(currentURL().endsWith('/reports'), 'After deleting, user is brought to report list view');\n\n    let reportNames = findAll('.table tbody td:first-child').map((el) => el.innerText.trim());\n\n    assert.deepEqual(reportNames, ['Hyrule Ad&Nav Clicks', 'Report 12'], 'Deleted report is removed from list');\n  });\n\n  test('Visiting Reports Route From Breadcrumb', async function (assert) {\n    assert.expect(1);\n\n    await visit('/reports/1/view');\n\n    //Click \"Reports\"\n    await click('.report-header__breadcrumb-link');\n\n    assert.ok(\n      currentURL().endsWith('/reports'),\n      'When \"Directory\" clicked on the Breadcrumb link, it lands to \"my-data\" page'\n    );\n  });\n\n  test('Revert report changes when exiting from route', async function (assert) {\n    assert.expect(2);\n\n    await visit('/reports/13/view');\n\n    assert.ok(\n      !!$('.filter-builder__subject:contains(day)').length,\n      'After navigating out of the route, the report model is rolled back'\n    );\n\n    await click('.navi-column-config-item__trigger');\n    await selectChoose('.navi-column-config-item__parameter', 'Week');\n\n    //Navigate out of report\n    await click('.report-header__breadcrumb-link');\n\n    //Navigate back to `Report 12`\n    await visit('/reports/13/view');\n\n    assert.ok(\n      !!$('.filter-builder__subject:contains(day)').length,\n      'After navigating out of the route, the report model is rolled back'\n    );\n  });\n\n  test('Revert Visualization Type - Back to Original Type', async function (assert) {\n    assert.expect(3);\n\n    /* == Load report == */\n    await visit('/reports/1/view');\n\n    assert.ok(!!findAll('.line-chart-widget').length, 'Line chart visualization is shown as configured');\n\n    /* == Switch to table == */\n    await click('.visualization-toggle__option-icon[title=\"Data Table\"]');\n\n    assert.ok(!!findAll('.table-widget').length, 'table visualization is shown when selected');\n\n    /* == Revert == */\n    await click('.navi-report__revert-btn');\n\n    assert.ok(!!findAll('.line-chart-widget').length, 'line-chart visualization is shown when reverted');\n  });\n\n  test('Revert Visualization Type - Updated Report', async function (assert) {\n    assert.expect(5);\n\n    /* == Load report == */\n    await visit('/reports/1/view');\n\n    assert.ok(!!findAll('.line-chart-widget').length, 'Line chart visualization is shown as configured');\n\n    /* == Switch to table == */\n    await click('.visualization-toggle__option-icon[title=\"Data Table\"]');\n\n    assert.ok(!!findAll('.table-widget').length, 'table visualization is shown when selected');\n\n    /* == Save report == */\n    await click('.navi-report__save-btn');\n\n    assert.ok(!!findAll('.table-widget').length, 'table visualization is still shown when saved');\n\n    /* == Switch to chart == */\n    await click('.visualization-toggle__option-icon[title=\"Line Chart\"]');\n\n    assert.ok(!!findAll('.line-chart-widget').length, 'line-chart visualization is shown when selected');\n\n    /* == Revert == */\n    await click('.navi-report__revert-btn');\n\n    assert.ok(!!findAll('.table-widget').length, 'table visualization is shown when reverted');\n  });\n\n  test('Revert Visualization Type - New Report', async function (assert) {\n    assert.expect(4);\n\n    /* == Create report == */\n    await visit('/reports');\n    await visit('/reports/new');\n    await clickItem('metric', 'Ad Clicks');\n    await clickItem('dimension', 'Date Time');\n    await selectChoose('.navi-column-config-item__parameter-trigger', 'Day');\n    await selectChoose('.filter-builder__operator-trigger', 'In The Past');\n\n    await click('.navi-report__run-btn');\n\n    assert.ok(!!findAll('.table-widget').length, 'Table visualization is shown by default');\n\n    /* == Save report == */\n    await click('.navi-report__save-btn');\n\n    assert.ok(!!findAll('.table-widget').length, 'Table visualization is still shown when saved');\n\n    /* == Switch to metric label == */\n    await click('.visualization-toggle__option-icon[title=\"Metric Label\"]');\n\n    assert.ok(!!findAll('.metric-label-vis').length, 'Metric label visualization is shown when selected');\n\n    /* == Revert == */\n    await click('.navi-report__revert-btn');\n\n    assert.ok(!!findAll('.table-widget').length, 'table visualization is shown when reverted');\n  });\n\n  test('Toggle Edit Visualization', async function (assert) {\n    assert.expect(3);\n\n    /* == Visit report == */\n    await visit('/reports/1/view');\n\n    /* == Verify visualization config is not shown == */\n\n    assert\n      .dom('.report-view__visualization-edit')\n      .doesNotExist('visualization config is closed on initial report load');\n\n    /* == Open config == */\n    await click('.report-view__visualization-edit-btn');\n    await animationsSettled();\n\n    assert.dom('.report-view__visualization-edit').exists('visualization config is opened after clicking edit button');\n\n    /* == Close config == */\n    await click('.report-view__visualization-edit-close');\n    await animationsSettled();\n\n    assert\n      .dom('.report-view__visualization-edit')\n      .doesNotExist('visualization config is closed after clicking edit button');\n  });\n\n  test('Disabled Visualization Edit', async function (assert) {\n    assert.expect(4);\n\n    // Visit report and make a change that invalidates visualization\n    await visit('/reports/1/view');\n    await clickItem('dimension', 'Product Family');\n    await animationsSettled();\n\n    assert.dom('.report-view__visualization-edit-btn').isNotVisible('Edit visualization button is no longer visible');\n\n    assert\n      .dom('.report-view__info-text')\n      .hasText('Run request to update Line Chart', 'Notification to run request is visible');\n\n    // Run report\n    await click('.navi-report__run-btn');\n    await animationsSettled();\n\n    assert\n      .dom('.report-view__visualization-edit-btn')\n      .isVisible('After running, edit visualization button is once again visible');\n\n    assert.dom('.report-view__info-text').isNotVisible('After running, notification to run is no longer visible');\n  });\n\n  test('Disabled Visualization Edit While Editing', async function (assert) {\n    assert.expect(9);\n\n    await visit('/reports/2/view');\n    await click('.report-view__visualization-edit-btn');\n    await animationsSettled();\n\n    assert\n      .dom('.report-view__visualization-edit')\n      .isVisible('Visualization edit panel is visible after clicking the edit button');\n\n    // Make a change that does NOT invalidate visualization\n    await fillIn('.table-header-cell.timeDimension input', 'Foo');\n    await blur('.table-header-cell.timeDimension input');\n    assert\n      .dom('.report-view__visualization-edit')\n      .isVisible('Visualization edit panel is still visible after making changes that do not change the request');\n\n    assert\n      .dom('.report-view__visualization-edit-close')\n      .isVisible('Visualization edit button is is still visible after making changes that do not change the request');\n\n    assert\n      .dom('.report-view__info-text')\n      .isNotVisible('Notification to run is not visible after making changes that do not change the request');\n\n    // Make a change that invalidates visualization\n    await clickItem('dimension', 'Product Family');\n    await animationsSettled();\n\n    assert\n      .dom('.report-view__visualization-edit')\n      .isNotVisible('Visualization edit panel is hidden when there are request changes that have not been run');\n\n    assert\n      .dom('.report-view__visualization-edit-btn')\n      .isNotVisible('Visualization edit button is hidden when there are request changes that have not been run');\n\n    assert\n      .dom('.report-view__info-text')\n      .isVisible('Notification to run is visible when there are request changes that have not been run');\n\n    // Run report\n    await click('.navi-report__run-btn');\n    await animationsSettled();\n\n    assert\n      .dom('.report-view__visualization-edit-btn')\n      .isVisible('Visualization edit button is back after running report');\n\n    assert\n      .dom('.report-view__info-text')\n      .isNotVisible('Notification to run is visible when there are request changes that have not been run');\n  });\n\n  test('Save changes', async function (assert) {\n    assert.expect(2);\n\n    await visit('/reports/13/view');\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete metric Ad Clicks\"]');\n\n    assert\n      .dom('.navi-report__save-btn')\n      .isVisible('Save changes button is visible once a change has been made and when owner of report');\n\n    await visit('/reports/3/view');\n    await clickItem('metric', 'Ad Clicks');\n\n    assert.dom('.navi-report__save-btn').isNotVisible('Save changes button is visible when not owner of a report');\n  });\n\n  test('Error route', async function (assert) {\n    assert.expect(1);\n\n    //suppress errors and exceptions for this test\n    let originalLoggerError = Ember.Logger.error,\n      originalException = Ember.Test.adapter.exception;\n\n    Ember.Logger.error = function () {};\n    Ember.Test.adapter.exception = function () {};\n\n    await visit('/reports/invalidRoute');\n\n    assert.equal(\n      find('.report-not-found').innerText.replace(/\\s+/g, ' ').trim(),\n      'Oops! Something went wrong with this report. Try going back to where you were last or to the reports page.',\n      'An error message is displayed for an invalid route'\n    );\n\n    Ember.Logger.error = originalLoggerError;\n    Ember.Test.adapter.exception = originalException;\n  });\n\n  test('Updating chart series', async function (assert) {\n    assert.expect(4);\n\n    // Check inital series\n    await visit('/reports/1/view');\n\n    let seriesLabels = findAll('.c3-legend-item').map((el) => el.textContent.trim());\n    let hiddenLabels = findAll('.c3-legend-item-hidden').map((el) => el.textContent.trim());\n    assert.deepEqual(\n      seriesLabels,\n      ['Property 1', 'Property 2', 'Property 3', 'Property 4'],\n      '3 series are initially present'\n    );\n    assert.deepEqual(hiddenLabels, [], 'No series are initially hidden from chart');\n\n    // Toggle off first series\n    await click('.c3-legend-item');\n    hiddenLabels = findAll('.c3-legend-item-hidden').map((el) => el.textContent.trim());\n    assert.deepEqual(hiddenLabels, ['Property 1'], 'Selected series has been hidden from chart');\n\n    // Toggle on first series\n    await click('.c3-legend-item');\n    hiddenLabels = findAll('.c3-legend-item-hidden').map((el) => el.textContent.trim());\n    assert.deepEqual(hiddenLabels, [], 'Property 1 is no longer hidden from chart');\n  });\n\n  test('favorite reports', async function (assert) {\n    assert.expect(3);\n\n    // Filter by favorites\n    await visit('/reports');\n    await selectChoose('.navi-collection__filter-trigger', 'Favorites');\n\n    let listedReports = findAll('tbody tr td:first-of-type').map((el) => el.innerText.trim());\n\n    assert.deepEqual(listedReports, ['Hyrule Ad&Nav Clicks'], 'Report 2 is in favorites section');\n\n    // Favorite report 1\n    await visit('/reports/1');\n    await click('.favorite-item');\n\n    // Filter by favorites\n    await visit('/reports');\n    await selectChoose('.navi-collection__filter-trigger', 'Favorites');\n\n    listedReports = findAll('tbody tr td:first-of-type').map((el) => el.innerText.trim());\n\n    assert.deepEqual(listedReports, ['Hyrule News', 'Hyrule Ad&Nav Clicks'], 'Two reports are in favorites now');\n\n    // Unfavorite report 2\n    await click($('tbody tr td a:contains(Hyrule Ad&Nav Clicks)')[0]);\n    await click('.favorite-item');\n    await visit('/reports');\n    await selectChoose('.navi-collection__filter-trigger', 'Favorites');\n\n    listedReports = findAll('tbody tr td:first-of-type').map((el) => el.innerText.trim());\n\n    assert.deepEqual(listedReports, ['Hyrule News'], 'Only one report is in favorites now');\n  });\n\n  test('favorite report - rollback on failure', async function (assert) {\n    assert.expect(2);\n\n    // Mock server path endpoint to mock failure\n    server.urlPrefix = `${config.navi.appPersistence.uri}`;\n    server.patch('/users/:id', () => new Response(500));\n\n    // Filter by favorites\n    await visit('/reports');\n    await selectChoose('.navi-collection__filter-trigger', 'Favorites');\n\n    let listedReports = findAll('tbody tr td:first-of-type').map((el) => el.innerText.trim());\n\n    assert.deepEqual(listedReports, ['Hyrule Ad&Nav Clicks'], 'Report 2 is in favorites section');\n\n    await visit('/reports/1');\n\n    await click('.favorite-item');\n\n    await visit('/reports');\n\n    await selectChoose('.navi-collection__filter-trigger', 'Favorites');\n\n    listedReports = findAll('tbody tr td:first-of-type').map((el) => el.innerText.trim());\n\n    assert.deepEqual(listedReports, ['Hyrule Ad&Nav Clicks'], 'The user state is rolled back on failure');\n  });\n\n  test('running report after reverting changes', async function (assert) {\n    assert.expect(2);\n\n    /* == Modify report by adding a metric == */\n    await visit('/reports/1/view');\n    await click('.visualization-toggle__option-icon[title=\"Data Table\"]');\n    await clickItem('metric', 'Time Spent');\n    await click('.navi-report__run-btn');\n\n    assert.ok(\n      !!$('.table-header-row-vc--view .table-header-cell:contains(Time Spent)').length,\n      'Time Spent column is displayed'\n    );\n\n    /* == Revert report to its original state == */\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete metric Time Spent\"]');\n    await click('.navi-report__run-btn');\n\n    assert.notOk(\n      !!$('.table-header-row-vc--view .table-header-cell:contains(Time Spent)').length,\n      'Time Spent column is not displayed'\n    );\n  });\n\n  skip('Running a report against unauthorized table shows unauthorized route', async function (assert) {\n    //build-data issues\n    assert.expect(5);\n    await visit('/reports/new');\n\n    await selectChoose('.navi-table-select__trigger', 'Protected Table');\n\n    await click('.navi-report__run-btn');\n\n    assert.equal(currentURL(), '/reports/1/unauthorized', 'check to seee if we are on the unauthorized route');\n\n    assert.ok(!!findAll('.navi-report-invalid__info-message .fa-lock').length, 'unauthorized component is loaded');\n\n    await click('.navi-report__cancel-btn');\n    await selectChoose('.navi-table-select__trigger', 'Network');\n    await click('.navi-report__run-btn');\n    await click('.visualization-toggle__option-icon[title=\"Data Table\"]');\n\n    assert.equal(currentURL(), '/reports/1/view', 'check to seee if we are on the view route');\n\n    assert.notOk(\n      !!findAll('.navi-report-invalid__info-message .fa-lock').length,\n      'unauthorized component is not loaded'\n    );\n\n    assert.ok(!!findAll('.table-widget').length, 'Data table visualization loads');\n  });\n\n  test(\"filtering on a dimension with a storage strategy of 'none'\", async function (assert) {\n    assert.expect(4);\n    //Add filter for a dimension where storageStrategy is 'none' and try to run the report\n    await visit('/reports/13/view');\n    await clickItem('dimension', 'Context Id');\n    await clickItemFilter('dimension', 'Context Id');\n    await fillIn('.emberTagInput-new>input', 'This_will_not_match_any_dimension_values');\n    await blur('.js-ember-tag-input-new');\n    await click('.navi-report__run-btn');\n\n    assert\n      .dom('.navi-info-message__error-list-item')\n      .isNotVisible('No errors are shown after giving a value to filter on');\n\n    server.urlPrefix = `${config.navi.dataSources[0].uri}/v1`;\n    server.get('/data/*path', (db, request) => {\n      assert.equal(\n        get(request, 'queryParams.filters'),\n        'contextId|id-in[\"This_will_not_match_any_dimension_values\"]',\n        \"Filter value is passed even when the value doesn'nt match any dimension IDs\"\n      );\n\n      return { rows: [] };\n    });\n\n    //Run the report with the invalid dimension value to filter on\n    await click('.navi-report__run-btn');\n\n    assert\n      .dom('.navi-report-invalid__info-message')\n      .isNotVisible('The report is run even when no dimension values match the filter');\n\n    await clickItem('dimension', 'Operating System');\n    await clickItemFilter('dimension', 'Operating System');\n\n    assert\n      .dom('.filter-values--dimension-select__trigger')\n      .isVisible(\"Dimension select is used when the dimension's storage strategy is not 'none'\");\n  });\n\n  test('filter - add using filter icon', async function (assert) {\n    assert.expect(4);\n\n    await visit('/reports/1');\n    //add dimension filter\n    await clickItemFilter('dimension', 'Operating System');\n\n    assert.strictEqual(\n      $('.filter-builder__subject:contains(Operating System)').length,\n      1,\n      'The Operating System dimension filter is added'\n    );\n\n    //remove filter by clicking on filter icon again\n    await clickItemFilter('dimension', 'Operating System');\n\n    assert.strictEqual(\n      $('.filter-builder__subject:contains(Operating System)').length,\n      2,\n      'The Operating System dimension filter is added a second time'\n    );\n\n    //add metric filter\n    await clickItemFilter('metric', 'Ad Clicks');\n\n    assert.strictEqual(\n      $('.filter-builder__subject:contains(Ad Clicks)').length,\n      1,\n      'The Ad Clicks metric filter is added'\n    );\n\n    //remove metric filter by clicking on filter icon again\n    await clickItemFilter('metric', 'Ad Clicks');\n\n    assert.strictEqual(\n      $('.filter-builder__subject:contains(Ad Clicks)').length,\n      2,\n      'The Ad Clicks metric filter is added a second time'\n    );\n  });\n\n  skip('filters - collapse and expand', async function (assert) {\n    // TODO: Fix after https://github.com/yahoo/yavin/pull/1171 is merged\n    assert.expect(9);\n    //adding dimensions and metrics not currently expanding filter collection\n\n    await visit('/reports/1');\n\n    //collapse filters\n    await click('.report-builder__container-header__filters-toggle');\n    assert.dom('.filter-collection').hasClass('filter-collection--collapsed', 'Filters are collapsed (1)');\n\n    //expand filters\n    await click('.report-builder__container-header__filters-toggle');\n    assert\n      .dom('.filter-collection')\n      .doesNotHaveClass('filter-collection--collapsed', 'Collapsed filters are expanded on click');\n\n    //collapse again\n    await click('.report-builder__container-header__filters-toggle');\n    assert.dom('.filter-collection').hasClass('filter-collection--collapsed', 'Filters are collapsed (2)');\n\n    //add a dimension filter\n    await clickItemFilter('dimension', 'Operating System');\n    assert\n      .dom('.filter-collection')\n      .doesNotHaveClass('filter-collection--collapsed', 'Adding a dimension filter expands filters');\n\n    //collapse again\n    await click('.report-builder__container-header__filters-toggle');\n    assert.dom('.filter-collection').hasClass('filter-collection--collapsed', 'Filters are collapsed (3)');\n\n    //remove the dimension filter\n    await clickItemFilter('dimension', 'Operating System');\n    assert\n      .dom('.filter-collection')\n      .hasClass('filter-collection--collapsed', 'Filters are still collapsed when removing a dimension filter');\n\n    //add a metric filter\n    await clickItemFilter('metric', 'Ad Clicks');\n    assert\n      .dom('.filter-collection')\n      .doesNotHaveClass('filter-collection--collapsed', 'Adding a metric filter expands filters');\n\n    //collapse again\n    await click('.report-builder__container-header__filters-toggle');\n    assert.dom('.filter-collection').hasClass('filter-collection--collapsed', 'Filters are collapsed (4)');\n\n    //remove the metric filter\n    await clickItemFilter('metric', 'Ad Clicks');\n    assert\n      .dom('.filter-collection')\n      .hasClass('filter-collection--collapsed', 'Filters are still collapsed when removing a metric filter');\n  });\n\n  test('Test filter \"Is Empty\" is accepted', async function (assert) {\n    assert.expect(2);\n    await visit('/reports/1');\n\n    await clickItemFilter('dimension', 'Operating System');\n    await selectChoose('.filter-collection__row:last-of-type .filter-builder__operator-trigger', 'Is Empty');\n    await click('.navi-report__run-btn');\n\n    assert.ok(\n      !!findAll('.line-chart-widget').length,\n      'line-chart visualization is shown instead of validation error when Is Empty is picked'\n    );\n\n    assert.dom('.navi-info-message__error-list-item').isNotVisible('Should not show empty values error');\n  });\n\n  test('Test filter \"Is Not Empty\" is accepted', async function (assert) {\n    assert.expect(2);\n    await visit('/reports/1');\n\n    await clickItemFilter('dimension', 'Operating System');\n    await selectChoose('.filter-collection__row:last-of-type .filter-builder__operator-trigger', 'Is Not Empty');\n    await click('.navi-report__run-btn');\n\n    assert.ok(\n      !!findAll('.line-chart-widget').length,\n      'line-chart visualization is shown instead of validation error when Is Not Empty is  picked'\n    );\n\n    assert.dom('.navi-info-message__error-list-item').isNotVisible('Should not show empty values error');\n  });\n\n  test(\"Date Picker doesn't change date when moving to time grain where dates are valid\", async function (assert) {\n    assert.expect(6);\n\n    await visit('/reports/1');\n    await click('.navi-column-config-item__trigger');\n    await selectChoose('.navi-column-config-item__parameter', 'Month');\n\n    // Select the month Jan\n    await clickTrigger('.filter-values--date-range-input__low-value');\n    await click($('.ember-power-calendar-selector-month:contains(Jan)')[0]);\n    await clickTrigger('.filter-values--date-range-input__high-value');\n    await click($('.ember-power-calendar-selector-month:contains(Jan)')[0]);\n    await click('.navi-report__run-btn');\n\n    assert\n      .dom('.filter-values--date-range-input__low-value input')\n      .hasValue('Jan 2015', 'Start Month is changed to Jan 2015');\n    assert\n      .dom('.filter-values--date-range-input__high-value input')\n      .hasValue('Jan 2015', 'End Month is changed to Jan 2015');\n\n    await selectChoose('.navi-column-config-item__parameter', 'Day');\n    await click('.navi-report__run-btn');\n\n    assert\n      .dom('.filter-values--date-range-input__low-value input')\n      .hasValue('Jan 01, 2015', 'Switching to day time period preserves date to start of month');\n    assert\n      .dom('.filter-values--date-range-input__high-value input')\n      .hasValue('Jan 31, 2015', 'Switching to day time period preserves date to end of month');\n\n    await selectChoose('.navi-column-config-item__parameter', 'Week');\n    await click('.navi-report__run-btn');\n\n    assert\n      .dom('.filter-values--date-range-input__low-value input')\n      .hasValue('Dec 29, 2014', 'Switching to week casts the date to match the start of the date time period');\n    assert\n      .dom('.filter-values--date-range-input__high-value input')\n      .hasValue('Jan 25, 2015', 'Switching to week casts the date to match the end of the date time period');\n  });\n\n  test('Date picker change interval type', async function (assert) {\n    assert.expect(6);\n\n    await visit('/reports/1');\n\n    assert\n      .dom('.filter-values--date-range-input__low-value input')\n      .hasValue('Nov 09, 2015', 'The start date is Nov 09, 2015');\n    assert\n      .dom('.filter-values--date-range-input__high-value input')\n      .hasValue('Nov 15, 2015', 'The end date is Nov 15, 2015');\n\n    await selectChoose('.filter-builder__operator-trigger', 'Between');\n    assert\n      .dom('.filter-values--date-range-input__low-value input')\n      .hasValue('Nov 09, 2015', 'The start date is still Nov 09, 2015');\n    assert\n      .dom('.filter-values--date-range-input__high-value input')\n      .hasValue('Nov 15, 2015', 'The end date is still Nov 15, 2015');\n\n    await selectChoose('.filter-builder__operator-trigger', 'Since');\n    assert\n      .dom('.filter-values--date-input__trigger input')\n      .hasValue('Nov 09, 2015', 'The start date is still Nov 09, 2015');\n\n    await selectChoose('.filter-builder__operator-trigger', 'Current Day');\n\n    const today = moment.utc().format('MMM DD, YYYY');\n    assert.dom('.filter-builder__values').hasText(`The current day. (${today})`, 'The current day');\n  });\n\n  test('Fili Datasource: Remove time column (all grain)', async function (assert) {\n    assert.expect(7);\n\n    await visit('/reports/1');\n\n    // select month grain\n    await click('.navi-column-config-item__trigger');\n    await selectChoose('.navi-column-config-item__parameter', 'Month');\n\n    await clickTrigger('.filter-values--date-range-input__low-value');\n    await click($('.ember-power-calendar-selector-month:contains(Jan)')[0]);\n\n    await clickTrigger('.filter-values--date-range-input__high-value');\n    await click($('.ember-power-calendar-selector-month:contains(May)')[0]);\n\n    assert\n      .dom('.filter-values--date-range-input__low-value input')\n      .hasValue('Jan 2015', 'The start date is month Jan 2015');\n    assert\n      .dom('.filter-values--date-range-input__high-value input')\n      .hasValue('May 2015', 'The end date is month May 2015');\n\n    // Remove date time group by\n    await click('.navi-column-config-item__remove-icon[aria-label=\"delete time-dimension Date Time (month)\"]');\n    assert.dom('.filter-builder__subject').hasText('Date Time hour', 'The filter grain is set to the lowest grain');\n    // TODO: Better support for hour grain\n\n    assert\n      .dom('.filter-values--date-range-input__low-value input')\n      .hasValue('Jan 01, 2015', 'The start date is beginning of Jan, 2015');\n    assert\n      .dom('.filter-values--date-range-input__high-value input')\n      .hasValue('May 31, 2015', 'The end date is end of May, 2015');\n\n    await clickTrigger('.filter-values--date-range-input__high-value');\n    await click('.ember-power-calendar-day[data-date=\"2015-05-30\"]');\n    assert\n      .dom('.filter-values--date-range-input__high-value input')\n      .hasValue('May 30, 2015', 'Calendar defaults \"all\" grain  to show the lowest grain which is day');\n\n    await click('.navi-report__run-btn');\n    assert.deepEqual(\n      findAll('li.table-header-cell').map((el) => el.textContent.trim()),\n      ['Property (id)', 'Ad Clicks', 'Nav Link Clicks'],\n      'The table is successfully queried with no Date Time group by because it supports the all grain'\n    );\n  });\n\n  skip(\"Date picker advanced doesn't modify interval\", async function (assert) {\n    //TODO advanced date picker has been disabled\n    assert.expect(6);\n    await visit('/reports/1/view');\n\n    await selectChoose('.filter-builder__operator-trigger', 'Advanced');\n    const startInput = findAll('.filter-values--advanced-interval-input__value')[0];\n    const endInput = findAll('.filter-values--advanced-interval-input__value')[1];\n    assert.dom(startInput).hasValue('P7D', 'The start input is not modified');\n    assert.dom(endInput).hasValue('2015-11-16', 'The end input is not modified');\n\n    await click('.get-api__action-btn');\n    assert.ok(\n      find('.get-api__api-input').value.includes('dateTime=P7D%2F2015-11-16'),\n      'The while in advanced mode shows exactly what is in the start/end inputs'\n    );\n    await click('.d-close');\n\n    await fillIn(startInput, 'P1M');\n    await blur(startInput);\n    await fillIn(endInput, '2020-04-01');\n    await blur(endInput);\n    assert.dom(startInput).hasValue('P1M', 'The start input was updated exactly');\n    assert.dom(endInput).hasValue('2020-04-01', 'The end input was updated exactly');\n\n    await click('.get-api__action-btn');\n    assert.ok(\n      find('.get-api__api-input').value.includes('dateTime=P1M%2F2020-04-01'),\n      'The query is updated to show the new start/end inputs exactly'\n    );\n    await click('.d-close');\n  });\n\n  test(\"Report with an unknown table doesn't crash\", async function (assert) {\n    assert.expect(1);\n    await visit('/reports/9');\n\n    assert\n      .dom('.navi-info-message__error-list-item')\n      .hasText(\n        'Table is invalid or unavailable',\n        'Should show an error message when table cannot be found in metadata'\n      );\n  });\n\n  test('Filter with large cardinality dimensions value selection works', async function (assert) {\n    assert.expect(2);\n    let option;\n    const dropdownSelector = '.filter-values--dimension-select__trigger';\n    await visit('/reports/new');\n\n    // Load table A as it has the large cardinality dimensions, and choose a large cardinality dimension\n\n    await selectChoose('.navi-table-select__trigger', 'Table A');\n    await clickItem('dimension', 'EventId');\n    await clickItem('metric', 'Network Sessions');\n    await clickItem('dimension', 'Date Time');\n    await selectChoose('.filter-builder__operator-trigger', 'Between');\n\n    await clickTrigger('.filter-values--date-range-input__low-value');\n    await click($('button.ember-power-calendar-day--current-month:contains(1)')[0]);\n\n    await clickTrigger('.filter-values--date-range-input__high-value');\n    await click($('button.ember-power-calendar-day--current-month:contains(2)')[0]);\n    await click($('.navi-report__footer button:Contains(Run)')[0]);\n\n    // Grab one of the dim names after running a report\n    option = find('.table-cell-content.dimension').textContent.trim();\n    await clickItemFilter('dimension', 'EventId');\n\n    // Open the dimension values so we can get values as they are dynamically created by mirage\n    await clickTrigger(dropdownSelector);\n\n    assert\n      .dom('.filter-values--dimension-select__dropdown .ember-power-select-option--search-message')\n      .hasText('Type to search', 'Message is correct');\n\n    // Simulate typing a search which pulls large cardinality dimension values from the server\n    await selectSearch(dropdownSelector, option.toLowerCase().substring(0, 3));\n    await click($(`.filter-values--dimension-select__dropdown .ember-power-select-option:contains('${option}')`)[0]);\n\n    // Check if the selected item is still selected after the search\n    assert.ok(\n      $(`.filter-values--dimension-select__dropdown .ember-power-select-option:contains(${option})`)[0].hasAttribute(\n        'aria-selected'\n      ),\n      'The value is selected after a search is done'\n    );\n  });\n\n  test('dimension select filter works with dimension ids containing commas', async function (assert) {\n    await visit('/reports/new');\n    await clickItemFilter('dimension', 'Dimension with comma');\n\n    await selectChoose('.filter-values--dimension-select__trigger', 'no');\n    await selectChoose('.filter-values--dimension-select__trigger', 'yes');\n\n    await clickItem('dimension', 'Date Time');\n\n    await selectChoose('.filter-builder__operator-trigger', 'Between');\n\n    await clickTrigger('.filter-values--date-range-input__low-value');\n\n    await click($('button.ember-power-calendar-day--current-month:contains(1)')[0]);\n    await clickTrigger('.filter-values--date-range-input__high-value .ember-basic-dropdown-trigger');\n    await click($('button.ember-power-calendar-day--current-month:contains(2)')[0]);\n\n    assert.deepEqual(\n      findAll('.ember-power-select-multiple-option span:not(.ember-power-select-multiple-remove-btn)').map((el) =>\n        el.textContent.trim()\n      ),\n      ['no comma', 'yes, comma'],\n      'The selected dimensions are shown even with a comma'\n    );\n\n    await click('.navi-report__run-btn');\n    await click('.get-api__action-btn');\n\n    const url = find('.get-api__api-input').value;\n    const expectedFilter = 'commaDim|id-in[\"no comma\",\"yes, comma\"]';\n    assert.ok(\n      decodeURIComponent(url).includes(expectedFilter),\n      `Generated API URL, ${url} is contains filter ${expectedFilter}`\n    );\n  });\n\n  test('reordering metrics does not rerun the request', async function (assert) {\n    assert.expect(1);\n    await visit('/reports/2');\n\n    server.urlPrefix = `${config.navi.dataSources[0].uri}/v1`;\n    server.get('/data/*path', () => {\n      assert.ok(false, 'Request was rerun');\n    });\n\n    await reorder(\n      'mouse',\n      '.table-header-row-vc--view .table-header-cell',\n      '.table-header-cell[data-name=\"navClicks\"]',\n      '.table-header-cell[data-name=\"property(field=id)\"]',\n      '.table-header-cell[data-name=\"adClicks\"]',\n      '.table-header-cell[data-name=\"network.dateTime(grain=day)\"]'\n    );\n\n    assert.deepEqual(\n      findAll('.table-header-row-vc--view .table-header-cell__title').map((el) => el.innerText.trim()),\n      ['Nav Link Clicks', 'Property (id)', 'Ad Clicks', 'Date Time (day)'],\n      'The headers are reordered as specified by the reorder'\n    );\n  });\n\n  test('adding metrics to reordered table keeps order', async function (assert) {\n    assert.expect(3);\n    await visit('/reports/2');\n\n    assert.deepEqual(\n      findAll('.table-header-row-vc--view .table-header-cell__title').map((el) => el.innerText.trim()),\n      ['Date Time (day)', 'Property (id)', 'Ad Clicks', 'Nav Link Clicks'],\n      'The headers are ordered correctly'\n    );\n\n    await reorder(\n      'mouse',\n      '.table-header-row-vc--view .table-header-cell',\n      '.table-header-cell[data-name=\"navClicks\"]',\n      '.table-header-cell[data-name=\"property(field=id)\"]',\n      '.table-header-cell[data-name=\"adClicks\"]',\n      '.table-header-cell[data-name=\"network.dateTime(grain=day)\"]'\n    );\n\n    assert.deepEqual(\n      findAll('.table-header-row-vc--view .table-header-cell__title').map((el) => el.innerText.trim()),\n      ['Nav Link Clicks', 'Property (id)', 'Ad Clicks', 'Date Time (day)'],\n      'The headers are reordered as specified by the reorder'\n    );\n\n    await clickItem('metric', 'Total Clicks');\n    await click('.navi-report__run-btn');\n\n    assert.deepEqual(\n      findAll('.table-header-row-vc--view .table-header-cell__title').map((el) => el.textContent.trim()),\n      ['Nav Link Clicks', 'Property (id)', 'Ad Clicks', 'Date Time (day)', 'Total Clicks'],\n      'The headers are reordered as specified by the reorder'\n    );\n  });\n\n  test('Parameterized metrics with default displayname are not considered custom', async function (assert) {\n    assert.expect(2);\n    await visit('/reports/8');\n\n    assert\n      .dom('.table-header-row-vc--view .table-header-cell.metric > .table-header-cell__title')\n      .isVisible('renders metric columns');\n    assert\n      .dom('.table-header-row-vc--view .table-header-cell.metric > .table-header-cell__title')\n      .doesNotHaveClass(\n        '.table-header-cell__title--custom-name',\n        'Parameterized metrics with default display name should not be considered custom'\n      );\n  });\n\n  test('Cancel Report', async function (assert) {\n    assert.expect(14);\n\n    server.urlPrefix = `${config.navi.dataSources[0].uri}/v1`;\n    server.get(\n      'data/*path',\n      () => {\n        return { rows: [] };\n      },\n      { timing: 400 } //Slow down mock\n    );\n\n    // Load the report without waiting for it to finish loading\n    visit('/reports/13').catch((error) => {\n      //https://github.com/emberjs/ember-test-helpers/issues/332\n      const { message } = error;\n      if (message !== 'TransitionAborted') {\n        throw error;\n      }\n    });\n\n    await waitFor('.navi-report__cancel-btn', { timeout: 5000 });\n\n    let buttons = findAll('.navi-report__footer .button');\n    assert.dom('.loader').isVisible('Report is loading');\n    assert.deepEqual(\n      buttons.map((e) => e.textContent.trim()),\n      ['Cancel'],\n      'When report is loading, the only footer button is `Cancel`'\n    );\n\n    assert\n      .dom('.report-builder__dimension-selector.report-builder__container--disabled')\n      .isVisible('Dimension selector is disabled during run');\n    assert\n      .dom('.report-builder__metric-selector.report-builder__container--disabled')\n      .isVisible('Metric selector is disabled during run');\n    assert\n      .dom('.navi-table-select__trigger')\n      .hasAttribute('aria-disabled', 'true', 'Table selector is disabled during run');\n    assert\n      .dom('.report-builder__container--filters.report-builder__container--disabled')\n      .isVisible('Filter collection is disabled during run');\n\n    /* ================= Cancel Report ================= */\n    await click($('.navi-report__cancel-btn')[0]);\n\n    assert.equal(currentURL(), '/reports/13/edit', 'Clicking `Cancel` brings the user to the edit route');\n\n    assert.deepEqual(\n      findAll('.navi-report__footer .button').map((e) => e.textContent.trim()),\n      ['Run'],\n      'When not loading a report, the standard footer buttons are available'\n    );\n\n    //Run the report\n    await click('.navi-report__run-btn');\n    assert.equal(currentURL(), '/reports/13/view', 'Running the report brings the user to the view route');\n\n    assert.deepEqual(\n      findAll('.navi-report__footer .button').map((e) => e.textContent.trim()),\n      ['Run'],\n      'When not loading a report, the standard footer buttons are available'\n    );\n\n    assert\n      .dom('.report-builder__dimension-selector')\n      .doesNotHaveClass('report-builder__container--disabled', 'Dimension selector is enabled after run');\n    assert\n      .dom('.report-builder__metric-selector')\n      .doesNotHaveClass('report-builder__container--disabled', 'Metric selector is enabled after run');\n    assert\n      .dom('.navi-table-select__trigger')\n      .doesNotHaveAttribute('aria-disabled', 'true', 'Table selector is enabled after run');\n    assert\n      .dom('.report-builder__container--filters')\n      .doesNotHaveClass('report-builder__container--disabled', 'Filter collection is enabled after run');\n  });\n\n  test('Recreating same report after revert runs', async function (assert) {\n    await visit('/reports/2/view');\n\n    const columns = () => findAll('.table-widget__table-headers .table-header-cell').map((el) => el.textContent.trim());\n    assert.deepEqual(\n      columns(),\n      ['Date Time (day)', 'Property (id)', 'Ad Clicks', 'Nav Link Clicks'],\n      'Report loads with expected columns'\n    );\n\n    await clickItem('metric', 'Page Views');\n    await click('.navi-report__run-btn');\n    assert.deepEqual(\n      columns(),\n      ['Date Time (day)', 'Property (id)', 'Ad Clicks', 'Nav Link Clicks', 'Page Views'],\n      'Report changed and ran successfully'\n    );\n\n    await click('.navi-report__revert-btn');\n    assert.deepEqual(\n      columns(),\n      ['Date Time (day)', 'Property (id)', 'Ad Clicks', 'Nav Link Clicks'],\n      'Report revertted successfully'\n    );\n\n    //make same changes and make sure it's runnable\n    await clickItem('metric', 'Page Views');\n    await click('.navi-report__run-btn');\n    assert.deepEqual(\n      columns(),\n      ['Date Time (day)', 'Property (id)', 'Ad Clicks', 'Nav Link Clicks', 'Page Views'],\n      'Report changed and ran successfully'\n    );\n  });\n\n  test('Table number formatting works', async function (assert) {\n    assert.expect(4);\n    await visit('/reports/2/view');\n\n    await click('.visualization-toggle__option-icon[title=\"Data Table\"]');\n    await click('.report-view__visualization-edit-btn');\n\n    await click(findAll('.number-format-dropdown__trigger')[1]); // open nav clicks dropdown\n\n    const navClicksCell = () => find('.table-row-vc').querySelectorAll('.table-cell-content.metric')[1];\n    assert.dom(navClicksCell()).hasText('880.41', 'The original metric value has no formatting');\n    assert.dom('.number-format-selector__radio-custom input').isChecked('The custom input is selected');\n\n    find('.number-format-selector__radio-money input').checked = true; // change format to money\n    await triggerEvent('.number-format-selector__radio-money input', 'change');\n\n    assert.dom('.number-format-selector__radio-money input').isChecked('The money input is selected');\n\n    await click('.number-format-dropdown');\n    assert.dom(navClicksCell()).hasText('$880.41', 'The metric is re-rendered in the money format');\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/report-visualizations-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/schedule-modal-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/acceptance/share-link-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/app/app.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/app/routes/directory/my-data.js",["1255"],"import Route from '@ember/routing/route';\n\nexport default Route.extend({\n  beforeModel() {\n    this.transitionTo('reports');\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/app/routes/index.js",["1256"],"import Route from '@ember/routing/route';\n\nexport default Route.extend({\n  beforeModel() {\n    this.transitionTo('/reports');\n  },\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/config/deprecation-workflow.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/config/ember-intl.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/config/environment.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/config/targets.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/bard-lite/dimensions/displayCurrency.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/bard-lite/dimensions/property.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/config.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/fixtures/dashboard.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/fixtures/delivery-rules.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/fixtures/report-collections.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/fixtures/reports.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/fixtures/users.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/scenarios/default.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/dummy/mirage/serializers/application.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/common-actions/delete-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/common-actions/get-api-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/common-actions/schedule-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/common-actions/share-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/dimension-bulk-import-simple-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/dimension-bulk-import-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/dropdown-date-picker-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/editable-label-test.js",["1257"],"import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, find, click, fillIn, blur } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\n\nconst TEMPLATE = hbs`\n<EditableLabel\n  @value={{this.value}}\n  @onChange={{this.onChange}}\n/>`;\n\nmodule('Integration | Component | Editable Label', function (hooks) {\n  setupRenderingTest(hooks);\n\n  test('edit label triggers action', async function (assert) {\n    assert.expect(3);\n\n    this.set('value', 'Default Value');\n    this.set('onChange', (value) => {\n      assert.equal(value, 'Edited Value', '`onChange` action sent an updated value');\n    });\n\n    await render(TEMPLATE);\n\n    await click('.editable-label__icon');\n\n    assert.dom('.editable-label__input').hasValue('Default Value', 'Label contains the default value');\n\n    await fillIn('.editable-label__input', 'Edited Value');\n\n    await blur('.editable-label__input');\n\n    assert.equal(this.value, 'Default Value', 'Editing the label does not mutate the provided `value` attribute');\n  });\n\n  test('no change in value', async function (assert) {\n    assert.expect(1);\n\n    this.set('value', 'Default Value');\n    this.set('onChange', () => {\n      assert.notOk(true, '`onChange` is not invoked if `value` is not updated');\n    });\n\n    await render(TEMPLATE);\n\n    await click('.editable-label__icon');\n\n    await blur('.editable-label__input');\n\n    assert.equal(\n      this.get('value'),\n      'Default Value',\n      'Editing the label does not mutate the provided `value` attribute'\n    );\n  });\n\n  test('_inputSize', async function (assert) {\n    assert.expect(3);\n\n    this.set('value', '');\n    this.set('onChange', () => {});\n\n    await render(TEMPLATE);\n\n    await click('.editable-label__icon');\n\n    assert.dom('.editable-label__input').hasAttribute('size', '1', 'Size of the input is greater or equal to 1');\n\n    await fillIn('.editable-label__input', 'Default Value');\n    assert\n      .dom('.editable-label__input')\n      .hasAttribute(\n        'size',\n        String(find('.editable-label__input').value.length + 1),\n        'Size of the input is the string length plus 1'\n      );\n\n    let longValue = Array(100).fill(1).join('');\n    await fillIn('.editable-label__input', longValue);\n    assert.dom('.editable-label__input').hasAttribute('size', '50', 'Size of the input is less than or equal to 50');\n  });\n\n  test('value is reset when editing', async function (assert) {\n    assert.expect(3);\n\n    this.set('value', 'Initial value');\n    this.set('onChange', () => {});\n\n    await render(TEMPLATE);\n    await click('.editable-label__icon');\n\n    assert\n      .dom('.editable-label__input')\n      .hasValue('Initial value', 'Input starts with text equal to given value property');\n\n    await fillIn('.editable-label__input', 'Something else');\n\n    assert.dom('.editable-label__input').hasValue('Something else', 'Input text changes with user input');\n\n    await blur('.editable-label__input');\n    await click('.editable-label__icon');\n\n    assert\n      .dom('.editable-label__input')\n      .hasValue('Initial value', 'When focusing in and out, input text is reset to given value property');\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/grouped-list-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/metric-filter-config-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/missing-intervals-warning-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-collection-test.js",["1258","1259","1260","1261","1262"],"import Component from '@ember/component';\nimport { A } from '@ember/array';\nimport ArrayProxy from '@ember/array/proxy';\nimport $ from 'jquery';\nimport { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, find, findAll } from '@ember/test-helpers';\nimport { selectChoose } from 'ember-power-select/test-support';\nimport hbs from 'htmlbars-inline-precompile';\nimport findByContains from 'navi-core/test-support/contains-helpers';\n\nconst REPORTS = ArrayProxy.create({\n  isSettled: true, // Mock a loaded promise array\n  content: A([\n    {\n      id: 1,\n      title: 'Hyrule News',\n      updatedOn: '2015-01-01 00:00:00',\n      isFavorite: false,\n    },\n    {\n      id: 2,\n      title: 'Hyrule Ad&Nav Clicks',\n      updatedOn: '2015-01-01 00:00:00',\n      isFavorite: true,\n    },\n    {\n      title: 'Unsaved report',\n      updatedOn: '2015-01-01 00:00:00',\n      isFavorite: false,\n    },\n    {\n      id: 10,\n      title: 'No Data Report',\n      updatedOn: '2016-02-10 17:00:44',\n      isFavorite: true,\n    },\n  ]),\n});\n\nconst TEMPLATE = hbs`\n    {{navi-collection\n        items=reports\n        config=(hash\n            filterable=true\n        )\n    }}`;\n\nmodule('Integration | Component | navi collection', function (hooks) {\n  setupRenderingTest(hooks);\n\n  hooks.beforeEach(function () {\n    // suppress report-actions/export component inside integration tests, since we are not testing it here\n    this.owner.register('component:report-actions/export', Component.extend(), { instantiate: false });\n  });\n\n  test('Table filtering', async function (assert) {\n    assert.expect(2);\n\n    this.set('reports', REPORTS);\n\n    await render(TEMPLATE);\n\n    // Click \"Favorites\" filter option\n    await selectChoose('.navi-collection__filter-trigger', 'All');\n\n    let listedReports = findAll('tbody tr td:first-of-type').map((el) => el.textContent.trim());\n\n    assert.deepEqual(\n      listedReports,\n      ['Hyrule News', 'Hyrule Ad&Nav Clicks', 'Unsaved report', 'No Data Report'],\n      'By default, all reports with an id are listed'\n    );\n\n    // Click \"Favorites\" filter option\n    await selectChoose('.navi-collection__filter-trigger', 'Favorites');\n    listedReports = findAll('tbody tr td:first-of-type').map((el) => el.textContent.trim());\n\n    assert.deepEqual(\n      listedReports,\n      ['Hyrule Ad&Nav Clicks', 'No Data Report'],\n      'After selecting favorite filter, only favorite reports are shown'\n    );\n  });\n\n  test('Favorite icon', async function (assert) {\n    this.set('reports', REPORTS);\n\n    await render(TEMPLATE);\n\n    //Reset to all filter\n    await selectChoose('.navi-collection__filter-trigger', 'All');\n\n    assert\n      .dom(findByContains('td', 'Hyrule News').querySelector('.favorite-item--active'))\n      .doesNotExist('Report that is not a favorite does not have favorite icon');\n\n    assert\n      .dom(findByContains('td', 'Hyrule Ad&Nav Clicks').querySelector('i'))\n      .hasClass('favorite-item--active', 'Report that is a favorite has favorite icon');\n  });\n\n  test('Filterable Table', async function (assert) {\n    assert.expect(2);\n\n    this.set('reports', REPORTS);\n\n    await render(hbs`\n          {{navi-collection\n              items=reports\n          }}\n      `);\n\n    assert\n      .dom('.navi-collection__filter-selector')\n      .isNotVisible('Filter dropdown is not shown when `filterable` flag is not set to true in collection config');\n\n    await render(hbs`\n          {{navi-collection\n              items=reports\n              config=(hash\n                  filterable=true\n              )\n          }}\n      `);\n\n    assert\n      .dom('.navi-collection__filter-selector')\n      .isVisible('Filter dropdown is shown when `filterable` flag is set to true in collection config');\n  });\n\n  test('Actions in Table', async function (assert) {\n    assert.expect(2);\n\n    this.set('reports', REPORTS);\n\n    await render(hbs`\n          {{navi-collection\n              items=reports\n          }}\n      `);\n\n    assert.notOk(\n      $('.navi-collection .navi-collection__actions').is(':visible'),\n      'Actions column is not shown when `actions` component is missing from collection config'\n    );\n\n    this.owner.register('component:mock-actions-component', Component.extend(), {\n      instantiate: false,\n    });\n\n    await render(hbs`\n          {{navi-collection\n              items=reports\n              config=(hash\n                  actions='mock-actions-component'\n              )\n          }}\n      `);\n\n    assert.ok(\n      $('.navi-collection .navi-collection__actions').is(':visible'),\n      'Actions column is shown when `actions` component is in the collection config'\n    );\n  });\n\n  test('Error Message - default', async function (assert) {\n    assert.expect(2);\n\n    this.set(\n      'items',\n      ArrayProxy.create({\n        isSettled: true,\n        content: A(),\n      })\n    );\n\n    await render(hbs`\n          {{navi-collection\n              items=items\n              itemType='reports'\n              itemNewRoute='customReports.new'\n          }}\n      `);\n\n    assert.deepEqual(\n      find('.navi-collection .no-results').textContent.trim(),\n      `You don't have any reports yet. Go ahead and create one now?`,\n      'Default message is shown when no items are rendered'\n    );\n\n    assert.ok(\n      $('.navi-collection .no-results a').is(':visible'),\n      'Default message is shown when no items are rendered with a link'\n    );\n  });\n\n  test('Error Message - custom', async function (assert) {\n    assert.expect(1);\n\n    this.set(\n      'items',\n      ArrayProxy.create({\n        isSettled: true,\n        content: A(),\n      })\n    );\n\n    await render(hbs`\n          {{navi-collection\n              items=items\n              config=(hash\n                  emptyMsg='You have no custom reports. Create one now.'\n              )\n          }}\n      `);\n\n    assert.deepEqual(\n      find('.navi-collection .no-results').textContent.trim(),\n      'You have no custom reports. Create one now.',\n      'Custom message is shown when no items are rendered'\n    );\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-column-config/metric-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-column-config/time-dimension-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-column-config-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-date-picker-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-email-input-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-email-tag-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-loading-message-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-table-select-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/navi-tag-input-test.js",["1263","1264","1265"],"import { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, findAll, click, triggerEvent } from '@ember/test-helpers';\nimport hbs from 'htmlbars-inline-precompile';\nimport Component from '@ember/component';\nimport $ from 'jquery';\n\nconst DIVINE_BEASTS = ['Ruta', 'Medoh', 'Neboris', 'Rudania'];\n\nmodule('Integration | Component | navi tag input/tag', function (hooks) {\n  setupRenderingTest(hooks);\n\n  async function paste(text) {\n    const selector = '.emberTagInput-input';\n    await triggerEvent(selector, 'paste', {\n      clipboardData: {\n        getData: () => text,\n      },\n    });\n  }\n\n  test('Pasting input only shows helper if input has commas and splitOnPaste is true', async function (assert) {\n    assert.expect(4);\n    this.set('tags', []);\n    this.set('splitOnPaste', false);\n    this.set('addTag', (value) => {\n      assert.equal(value, 2, 'TODO');\n    });\n\n    await render(hbs`\n      <NaviTagInput\n        @addTag={{action this.addTag}}\n        @tags={{this.tags}}\n        @splitOnPaste={{splitOnPaste}}\n        as |tag|\n      >\n        {{tag}}\n      </NaviTagInput>\n    `);\n\n    await paste('123');\n    assert.dom('.dimension-bulk-import-simple').doesNotExist('The modal did not pop up because splitOnPaste is false');\n\n    await paste('1,2,3');\n    assert\n      .dom('.dimension-bulk-import-simple')\n      .doesNotExist('The modal did not pop up because the input contains a comma, but splitOnPaste is false');\n\n    this.set('splitOnPaste', true);\n\n    await paste('123');\n    assert\n      .dom('.dimension-bulk-import-simple')\n      .doesNotExist('The modal did not pop up because the input does not contain a comma');\n\n    await paste('1,2,3');\n    assert\n      .dom('.dimension-bulk-import-simple')\n      .exists('The modal popped up because the input contains a comma, and splitOnPaste is true');\n  });\n\n  test('default tag component', async function (assert) {\n    assert.expect(2);\n\n    this.set('tags', DIVINE_BEASTS);\n\n    this.set('removeTagAtIndex', (index) => {\n      assert.equal(index, 2, 'Clicking remove icon on calls removeTagAtIndex with the clicked tag index');\n    });\n\n    await render(hbs`\n      {{#navi-tag-input\n        tags=tags\n        removeTagAtIndex=(action removeTagAtIndex)\n        as |divineBeast|\n      }}\n        {{divineBeast}}\n      {{/navi-tag-input}}\n    `);\n\n    assert.deepEqual(\n      $('.tag')\n        .toArray()\n        .map((e) => e.textContent.trim()),\n      DIVINE_BEASTS,\n      'Default tag component provides ember tag input class and yields'\n    );\n\n    // Test tag removal\n    await click(findAll('.navi-tag-input__tag-remove')[2]);\n  });\n\n  test('custom tag component', async function (assert) {\n    assert.expect(2);\n\n    this.owner.register(\n      'component:my-wacky-tag',\n      Component.extend({\n        classNames: 'my-wacky-tag',\n      })\n    );\n\n    this.set('tags', DIVINE_BEASTS);\n\n    await render(hbs`\n      <NaviTagInput\n        @tags={{this.tags}}\n        @tagComponent='my-wacky-tag'\n        as |divineBeast|\n      >\n        {{divineBeast}}\n      </NaviTagInput>\n    `);\n\n    assert.deepEqual(\n      $('.my-wacky-tag')\n        .toArray()\n        .map((e) => e.textContent.trim()),\n      DIVINE_BEASTS,\n      'Custom tag component can be given to add new behavior'\n    );\n\n    assert\n      .dom('.navi-tag-input__tag-remove')\n      .doesNotExist('Elements from the default component are not required in a custom tag');\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/paginated-scroll-list-test.js",["1266"],"import { A } from '@ember/array';\nimport { run } from '@ember/runloop';\nimport { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render, triggerEvent, click } from '@ember/test-helpers';\nimport $ from 'jquery';\nimport hbs from 'htmlbars-inline-precompile';\n\nconst COMMON_TEMPLATE = hbs`\n    <style>\n        .items-container {\n          height: 200px;\n          width: 100px;\n        }\n        .mock-item {\n            height: 20px;\n        }\n        .trimmed {\n            max-height: 60px;\n            overflow: hidden;\n        }\n        .show-all {\n            max-height: 100px;\n            overflow: auto;\n        }\n    </style>\n    {{#paginated-scroll-list\n        items=items\n        trim=trim\n        perPage=perPage\n        showMore=(action showMoreAction)\n        as |item|\n    }}\n        <div class='mock-item'>{{item.foo}}</div>\n    {{/paginated-scroll-list}}\n`;\n\nmodule('Integration | Component | paginated scroll list', function (hooks) {\n  setupRenderingTest(hooks);\n\n  hooks.beforeEach(function () {\n    this.set('showMoreAction', () => {});\n  });\n\n  test('component is rendered in trimmed mode', async function (assert) {\n    assert.expect(4);\n\n    this.set('items', _buildItemsArray(10, 'This is Foo Object'));\n    this.set('trim', true);\n    this.set('perPage', 250);\n    await render(COMMON_TEMPLATE);\n\n    assert.ok(true, 'Component renders');\n\n    assert.dom('.items-container.trimmed').exists({ count: 1 }, 'items container has \"trimmed\" class');\n\n    assert\n      .dom('.paginated-scroll-list__show-more')\n      .isVisible('Show more link is visible when rendered items exceed the container max height');\n\n    this.set('items', _buildItemsArray(30, '1'));\n\n    assert\n      .dom('.paginated-scroll-list__show-more')\n      .isVisible('Show more link is visible when has items not rendered and does not exceed container max height');\n  });\n\n  test('component displays more items on clicking show more link', async function (assert) {\n    assert.expect(5);\n\n    this.set('items', _buildItemsArray(10, 'This is Foo Object'));\n    this.set('trim', true);\n    this.set('perPage', 250);\n\n    this.set('showMoreAction', () => {\n      assert.ok(false, 'show more action should not be triggered');\n    });\n\n    await render(COMMON_TEMPLATE);\n\n    assert\n      .dom('.paginated-scroll-list__show-more')\n      .isVisible('Show more link is visible before clicking show more link');\n\n    assert\n      .dom('.items-container.trimmed')\n      .exists({ count: 1 }, 'items container has \"trimmed\" class before clicking show more link');\n\n    /* == Click Show more link == */\n    this.set('showMoreAction', () => {\n      assert.ok(true, 'show more action is triggered');\n    });\n\n    await click('.paginated-scroll-list__show-more');\n\n    assert\n      .dom('.paginated-scroll-list__show-more')\n      .isNotVisible('Show more link is not visible after clicking show more link');\n\n    assert\n      .dom('.items-container.show-all')\n      .exists({ count: 1 }, 'items container has \"show-all\" class after clicking show more link');\n  });\n\n  test('component is rendered in show all state', async function (assert) {\n    assert.expect(3);\n\n    this.set('items', _buildItemsArray(2, 'This is Foo Object'));\n    this.set('trim', false);\n    this.set('perPage', 250);\n    await render(COMMON_TEMPLATE);\n\n    assert.ok(true, 'Component renders');\n\n    assert.dom('.items-container.show-all').exists({ count: 1 }, 'items container has \"show-all\" class');\n\n    assert\n      .dom('.paginated-scroll-list__show-more')\n      .isNotVisible('Show more link is not visible when trim flag is false');\n  });\n\n  test('show more link is not visible when items are within max height', async function (assert) {\n    assert.expect(2);\n\n    this.set('items', _buildItemsArray(2, 'This is Foo Object'));\n    this.set('trim', true);\n    this.set('perPage', 250);\n    await render(COMMON_TEMPLATE);\n\n    assert.dom('.paginated-scroll-list__show-more').isNotVisible('Show more link is not visible initially');\n\n    /* == items exceed container == */\n    this.set('items', _buildItemsArray(4, 'This is Foo Object'));\n\n    assert.dom('.paginated-scroll-list__show-more').isVisible('Show more link is visible after items change');\n  });\n\n  test('scrolling to the bottom loads more elements', async function (assert) {\n    assert.expect(2);\n\n    this.set('items', _buildItemsArray(50, 'This is Foo Object'));\n    this.set('trim', false);\n    this.set('perPage', 25);\n    await render(COMMON_TEMPLATE);\n\n    assert.dom('.mock-item').exists({ count: 25 }, '25 items are shown before scrolling');\n\n    //scroll all the way to the bottom\n    $('.items-container').scrollTop($('.items-list').height());\n    //test can be flaky at times, make sure scroll event happens\n    await triggerEvent('.items-container', 'scroll');\n\n    assert.dom('.mock-item').exists({ count: 50 }, '50 items are shown after scrolling');\n  });\n\n  test('updating items or perPage will cause _itemsToRender to update', async function (assert) {\n    assert.expect(4);\n\n    this.set('items', _buildItemsArray(5, 'This is Foo Object'));\n    this.set('trim', false);\n    this.set('perPage', 250);\n    await render(COMMON_TEMPLATE);\n\n    assert.dom('.item').exists({ count: 5 }, '_itemsToRender is initialized correctly');\n\n    this.set('items', _buildItemsArray(10, 'This is Foo Object'));\n\n    assert\n      .dom('.item')\n      .exists({ count: 10 }, 'updating with new items array causes _itemsToRender to be updated correctly');\n\n    run(() => {\n      this.get('items').popObject();\n    });\n\n    assert\n      .dom('.item')\n      .exists({ count: 9 }, 'updating existing items array causes _itemsToRender to be updated correctly');\n\n    this.set('perPage', 4);\n\n    assert.dom('.item').exists({ count: 4 }, 'updating perPage causes _itemsToRender to be updated correctly');\n  });\n\n  // Builds a mock  array of items object in the form [{foo: content}, {foo: content}, ...]\n  function _buildItemsArray(numberOfItems, content) {\n    let items = [];\n\n    for (let i = 0; i < numberOfItems; i++) {\n      items.push({\n        foo: content,\n      });\n    }\n    return A(items);\n  }\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/power-select-bulk-import-trigger-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/print-report-view-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/report-actions/export-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/report-actions/multiple-format-export-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/report-builder-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/report-view-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/report-visualization-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/unauthorized-table-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/integration/components/visualization-toggle-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/test-helper.ts",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/components/navi-collection-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/components/navi-date-picker-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/components/paginated-scroll-list-test.js",["1267","1268","1269","1270","1271","1272"],"import { get } from '@ember/object';\nimport { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\n\nconst ITEMS = [1, 2, 3, 4, 5, 6, 7, 8];\n\nmodule('Unit | Component | Paginated Scroll List', function (hooks) {\n  setupTest(hooks);\n\n  test('_appendPaginatedResults', function (assert) {\n    assert.expect(6);\n\n    let component = this.owner.factoryFor('component:paginated-scroll-list').create({\n      perPage: 3,\n      trim: false,\n      items: ITEMS,\n      _setItemsExceedMaxHt: () => {}, //Suppress hook\n    });\n\n    assert.equal(get(component, '_page'), 0, 'page number is 0 initially');\n\n    assert.deepEqual(get(component, '_itemsToRender'), [1, 2, 3], '_itemsToRender array has 3 records initially');\n\n    component._appendPaginatedResults();\n\n    assert.equal(get(component, '_page'), 1, '_appendPaginatedResults increments page number to 1 as expected');\n\n    assert.deepEqual(\n      get(component, '_itemsToRender'),\n      [1, 2, 3, 4, 5, 6],\n      '_appendPaginatedResults appends page 1 content to _itemsToRender array as expected'\n    );\n\n    component._appendPaginatedResults();\n\n    assert.equal(get(component, '_page'), 2, '_appendPaginatedResults increments page number to 2 as expected');\n\n    assert.deepEqual(\n      get(component, '_itemsToRender'),\n      ITEMS,\n      '_appendPaginatedResults appends page 2 content to _itemsToRender array as expected'\n    );\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/components/report-actions/base-action-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/components/report-builder-test.js",["1273"],"import { A as arr } from '@ember/array';\nimport { get, set } from '@ember/object';\nimport { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\n\nmodule('Unit | Component | Report Builder', function (hooks) {\n  setupTest(hooks);\n\n  test('allTables', function (assert) {\n    assert.expect(1);\n\n    let component = this.owner.factoryFor('component:report-builder').create();\n    set(component, 'metadataService', {\n      all: () =>\n        arr([\n          { name: '12345', id: '2', isFact: true },\n          { name: '9876', id: '1', isFact: false },\n          { name: 'DATASOURCE_B', id: '3', isFact: true },\n          { name: 'DATASOURCE_A', id: '4', isFact: true },\n          { name: 'table-B', id: '5', isFact: true },\n          { name: 'Advertisement', id: '7', isFact: true },\n          { name: 'table-A', id: '6', isFact: false },\n          { name: 'advertisement', id: '8', isFact: true },\n        ]),\n    });\n\n    assert.deepEqual(\n      get(component, 'allTables'),\n      [\n        { name: '12345', id: '2', isFact: true },\n        { name: 'advertisement', id: '8', isFact: true },\n        { name: 'Advertisement', id: '7', isFact: true },\n        { name: 'DATASOURCE_A', id: '4', isFact: true },\n        { name: 'DATASOURCE_B', id: '3', isFact: true },\n        { name: 'table-B', id: '5', isFact: true },\n      ],\n      'List of tables are sorted alphabetically and filtered to fact tables'\n    );\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/consumers/delivery-rule-test.js",["1274","1275","1276"],"import { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\nimport { settled } from '@ember/test-helpers';\nimport { setupMirage } from 'ember-cli-mirage/test-support';\nimport { run } from '@ember/runloop';\nimport { get } from '@ember/object';\nimport Response from 'ember-cli-mirage/response';\n\nlet Store;\n\nmodule('Unit | Consumer | delivery-rule', function (hooks) {\n  setupTest(hooks);\n  setupMirage(hooks);\n\n  hooks.beforeEach(async function () {\n    Store = this.owner.lookup('service:store');\n    await this.owner.lookup('service:navi-metadata').loadMetadata();\n  });\n\n  test('delete delivery-rule - success', function (assert) {\n    assert.expect(2);\n\n    let Consumer = this.owner.lookup('consumer:delivery-rule'),\n      promise = {\n        resolve() {\n          assert.notOk(Store.hasRecordForId('delivery-rule', 1), 'Delivery Rule is deleted from the store');\n        },\n        reject() {\n          assert.notOk(true, 'Passed in promise is not rejected when delete is successful');\n        },\n      };\n\n    return run(() => {\n      let rule = Store.createRecord('delivery-rule', {\n        id: 1,\n        deliveryType: 'report',\n        deliveredItem: {},\n        owner: 'navi_user',\n      });\n      assert.ok(Store.hasRecordForId('delivery-rule', 1), 'Delivery Rule 1 is available in the store');\n\n      Consumer.send('deleteDeliveryRule', rule, promise);\n    });\n  });\n\n  test('delete delivery-rule - failure', function (assert) {\n    assert.expect(2);\n\n    //Mock Server Endpoint\n    this.server.del('/deliveryRules/:id', () => {\n      return new Response(500);\n    });\n\n    let Consumer = this.owner.lookup('consumer:delivery-rule'),\n      promise = {\n        resolve() {\n          assert.notOk(true, 'Passed in promise is not resolved when delete fails');\n        },\n        reject() {\n          assert.ok(Store.hasRecordForId('delivery-rule', 2), 'Delivery Rule is not deleted from the store');\n        },\n      };\n\n    return run(() => {\n      return Store.findRecord('delivery-rule', 2).then((rule) => {\n        assert.ok(Store.hasRecordForId('delivery-rule', 2), 'Delivery Rule 1 is available in the store');\n\n        Consumer.send('deleteDeliveryRule', rule, promise);\n\n        return settled();\n      });\n    });\n  });\n\n  test('save delivery-rule - success', function (assert) {\n    assert.expect(3);\n\n    let Consumer = this.owner.lookup('consumer:delivery-rule'),\n      promise = {\n        resolve() {\n          assert.ok(true, 'Passed in promise is resolved when save succeeds');\n        },\n        reject() {\n          assert.notOk(true, 'Passed in promise is not rejected when save succeeds');\n        },\n      };\n\n    return run(() => {\n      return Store.findRecord('report', 1).then((report) => {\n        return get(report, 'author').then((owner) => {\n          let newRule = Store.createRecord('delivery-rule', {\n            deliveryType: 'report',\n            format: { type: 'csv' },\n            deliveredItem: report,\n            owner,\n          });\n\n          assert.ok(get(newRule, 'hasDirtyAttributes'), 'Delivery rule is not saved');\n\n          Consumer.send('saveDeliveryRule', newRule, promise);\n\n          return settled().then(() => {\n            assert.notOk(get(newRule, 'hasDirtyAttributes'), 'saveDeliveryRule action saves the dirty delivery rule');\n          });\n        });\n      });\n    });\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/consumers/item-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/consumers/request/column-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/consumers/request/filter-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/controllers/reports/report-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/helpers/format-interval-inclusive-inclusive-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/helpers/guess-timezone-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/helpers/item-action-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/helpers/string-contains-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/helpers/update-report-action-test.js",["1277","1278","1279","1280"],"import { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\nimport { UpdateReportActions } from 'navi-reports/services/update-report-action-dispatcher';\nimport Route from '@ember/routing/route';\nimport { setOwner } from '@ember/application';\n\nlet Container, helper;\n\nmodule('Unit | Helper | update report action', function (hooks) {\n  setupTest(hooks);\n\n  hooks.beforeEach(function () {\n    Container = this.owner;\n    let helperFactory = this.owner.lookup('helper:update-report-action');\n    helper = helperFactory.create();\n    setOwner(helper, this.owner);\n  });\n\n  test('update-report-action helper calls the correct route action', function (assert) {\n    assert.expect(4);\n\n    createMockRoute((actionType, helperParam, invocationParam) => {\n      assert.ok(true, 'update-report-action called the correct route-action');\n\n      assert.equal(\n        actionType,\n        UpdateReportActions.UPDATE_TABLE,\n        'update-report-action called with the correct report action name'\n      );\n\n      assert.equal(helperParam, 'helperParam', 'update-report-action called with the correct helperParam');\n\n      assert.equal(invocationParam, 'invocationParam', 'update-report-action called with the correct invocationParam');\n    });\n\n    helper.compute(['UPDATE_TABLE', 'helperParam'])('invocationParam');\n  });\n\n  test('update-report-action errors', function (assert) {\n    assert.expect(1);\n\n    assert.throws(() => helper.compute(['BAD NAME']), 'report action throws error if report action cannot be found');\n  });\n\n  function createMockRoute(onUpdateReport) {\n    Container.register(\n      'router:main',\n      {\n        router: {\n          currentHandlerInfos: [\n            {\n              handler: Route.extend({\n                actions: { onUpdateReport },\n              }).create(),\n            },\n          ],\n        },\n      },\n      { instantiate: false }\n    );\n\n    Container.register(\n      'service:router',\n      {\n        _router: {\n          currentHandlerInfos: [\n            {\n              handler: Route.extend({\n                actions: { onUpdateReport },\n              }).create(),\n            },\n          ],\n        },\n      },\n      { instantiate: false }\n    );\n  }\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/mixins/collection-selector-test.js",["1281","1282"],"import EmberObject from '@ember/object';\nimport CollectionSelectorMixin from 'navi-reports/mixins/collection-selector';\nimport { module, test } from 'qunit';\n\nconst TABLE_ITEMS = [\n  {\n    id: 'eid',\n    name: 'EventId',\n  },\n  {\n    id: 'nw',\n    name: 'Network',\n  },\n];\n\nlet CollectionSelector;\n\nmodule('Unit | Mixin | Collection Selector', function (hooks) {\n  hooks.beforeEach(function () {\n    CollectionSelector = EmberObject.extend(CollectionSelectorMixin);\n  });\n\n  test('Testing initialization of mixin object', function (assert) {\n    assert.expect(3);\n\n    assert.throws(\n      () => {\n        CollectionSelector.create();\n      },\n      /^Error.*Items array should not be empty$/,\n      'Error is thrown when item array is empty'\n    );\n\n    assert.throws(\n      () => {\n        CollectionSelector.create({ items: TABLE_ITEMS.concat(TABLE_ITEMS[1]) });\n      },\n      /^Error.*Items array should be unique$/,\n      'Error is thrown when item array has duplicate values'\n    );\n\n    assert.throws(\n      () => {\n        CollectionSelector.create({\n          items: TABLE_ITEMS.concat(TABLE_ITEMS[1]),\n          selectedItem: { id: 'foo', name: 'Foo Name' },\n        });\n      },\n      /^Error.*Items array should be unique$/,\n      'Error is thrown when selected item is not present in items array'\n    );\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/mixins/report-route-test.js",["1283","1284"],"import EmberObject from '@ember/object';\nimport Ember from 'ember';\nimport ReportRouteMixin from 'navi-reports/mixins/report-route';\nimport { module, test } from 'qunit';\n\nmodule('Unit | Mixin | report route', function () {\n  test('didUpdateVisualization', function (assert) {\n    assert.expect(1);\n\n    let ReportRouteObject = EmberObject.extend(ReportRouteMixin, Ember.ActionHandler),\n      subject = ReportRouteObject.create();\n\n    subject.set('currentModel', {});\n    subject.send('didUpdateVisualization', 123);\n\n    assert.equal(\n      subject.get('currentModel.visualization'),\n      123,\n      'current model`s visualization is updated with the param passed to the action'\n    );\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/report-collections/collection-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/reports/index-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/reports/new-test.js",["1285","1286","1287","1288"],"import Service from '@ember/service';\nimport { set, get } from '@ember/object';\nimport { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\nimport { settled } from '@ember/test-helpers';\nimport config from 'ember-get-config';\nimport { setupMirage } from 'ember-cli-mirage/test-support';\n\nconst SERIALIZED_MODEL =\n  'EQbwOsAmCGAu0QFzmAS0kiBGCAaCcsATqgEYCusApgM5IoBuqN50ANqgF5yoD2AdvQiwAngAcqmYB35UAtAGMAFtCKw8EBlSI0-g4Iiz5gAWyrwY8IcGgAPZtZHWa21LWuiJUyKjP9dAhrACgIAZqgA5tZmxKgKUtCQAMIcCgDWdMDGPn4B_ADyRJDaSADaEGJEvBJqTsAAutm-VP56mYilKPzQZlIAClU1ogAEOFma7OTuBiiV1dqiUlhYACwQAL7ruF09kgYQA_O1wwBMQQyT08gVgwt1iNgADM-PY5vbEN29-8CHQyLDADM50u7Vmt1qSxejzOwE29U2iK2wlQsDYewewAAEiIiOR0cMAHJUADumWMRCoAEcpjR1DMIGxeBE4uwACrQUjojyc7k_WSwEm8IhpIKwZoAcSI0FQ-kxMDqyNM5hICnanQgMVVCWSqQyGw-yti8X50AYKTi-rhjQgORaeXVKDtrUCPzm_w2NuA4TY1B0ZS9KiY_CiBlKXpowvpHRQWriUm65r15NtqEpCnFrsx0BoJvWXtlfoubEdEDpqmjEBOrwArHJlnJHgBOYbPRBt54AOheQRaGB-1awdYbWAAbK3Hu3J12e9bjKRVJAAGraPJSBhjCnU2mwFc6PTrt5KylsHgCGhKVBiMEEShKYXWSwIBnATwYiDkFz-8ZofuYxOoAA-p-JRwu8wjiO-wCUmIUaZJswBAAA';\n\nconst NEW_MODEL = {\n  author: 'navi_user',\n  createdOn: null,\n  request: {\n    columns: [],\n    dataSource: 'bardOne',\n    filters: [],\n    limit: null,\n    requestVersion: '2.0',\n    sorts: [],\n    table: 'network',\n  },\n  title: 'Untitled Report',\n  updatedOn: null,\n  visualization: {\n    metadata: {\n      columnAttributes: {},\n    },\n    type: 'table',\n    version: 2,\n  },\n};\n\nmodule('Unit | Route | reports/new', function (hooks) {\n  setupTest(hooks);\n  setupMirage(hooks);\n\n  hooks.beforeEach(async function () {\n    await this.owner.lookup('service:navi-metadata').loadMetadata();\n\n    let mockAuthor = this.owner.lookup('service:store').createRecord('user', { id: 'navi_user' });\n\n    this.owner.register(\n      'service:user',\n      Service.extend({\n        getUser: () => mockAuthor,\n      })\n    );\n  });\n\n  test('model', function (assert) {\n    assert.expect(1);\n\n    return settled().then(() => {\n      let model = this.owner.lookup('route:reports/new').model(null, { queryParams: {} });\n\n      assert.deepEqual(model.toJSON(), NEW_MODEL, 'A new report model is returned');\n    });\n  });\n\n  test('_newModel', function (assert) {\n    assert.expect(2);\n\n    return settled().then(() => {\n      let model = this.owner.lookup('route:reports/new')._newModel();\n      assert.deepEqual(model.toJSON(), NEW_MODEL, 'A new report model is returned');\n      assert.equal(model.request.dataSource, 'bardOne', 'Should fall back to default dataSource');\n    });\n  });\n\n  test('_deserializeUrlModel', function (assert) {\n    assert.expect(3);\n\n    return settled().then(() => {\n      return this.owner\n        .lookup('route:reports/new')\n        ._deserializeUrlModel(SERIALIZED_MODEL)\n        .then((newModel) => {\n          assert.ok(newModel.get('isNew'), 'A new ember data model is returned');\n\n          assert.ok(get(newModel, 'tempId'), 'A tempId is present');\n\n          assert.equal(\n            get(newModel, 'title'),\n            'Hyrule News',\n            'The new model inherits the properties of the given serialized model'\n          );\n        });\n    });\n  });\n\n  test('_deserializeUrlModel - error', function (assert) {\n    assert.expect(1);\n\n    return settled().then(() => {\n      return this.owner\n        .lookup('route:reports/new')\n        ._deserializeUrlModel('not actually a model')\n        .catch((error) =>\n          assert.equal(\n            error.message,\n            'Could not parse model query param',\n            'When modelString fails to deserialize, a rejected promise is returned'\n          )\n        );\n    });\n  });\n\n  test('_getDefaultTable', function (assert) {\n    assert.expect(2);\n\n    return settled().then(() => {\n      let table = this.owner.lookup('route:reports/new')._getDefaultTable();\n      assert.deepEqual(table.id, 'network', 'Return table based on alphabetical order if default config not specified');\n\n      let defaultDataTable = get(config, 'navi.defaultDataTable');\n\n      set(config, 'navi.defaultDataTable', 'tableA');\n      table = this.owner.lookup('route:reports/new')._getDefaultTable();\n      assert.equal(table.id, 'tableA', 'Return default table');\n\n      set(config, 'navi.defaultDataTable', defaultDataTable);\n    });\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/reports/report/clone-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/reports/report/view-test.js",["1289","1290"],"import EmberObject, { get } from '@ember/object';\nimport { run } from '@ember/runloop';\nimport { resolve } from 'rsvp';\nimport { module, test } from 'qunit';\nimport { setupTest } from 'ember-qunit';\nimport { task } from 'ember-concurrency';\n\nmodule('Unit | Route | reports/report/view', function (hooks) {\n  setupTest(hooks);\n\n  test('model', async function (assert) {\n    assert.expect(5);\n\n    const serializedRequest = 'foo',\n      factServiceResponse = 'bar',\n      reportModel = {\n        id: 1,\n        request: {\n          serialize: () => serializedRequest,\n        },\n        visualization: {\n          type: 'table',\n          isValidForRequest: () => false, // Test invalid config case\n          rebuildConfig(request, response) {\n            assert.equal(\n              request,\n              reportModel.request,\n              'When config is invalid, rebuildConfig is given raw request object'\n            );\n\n            assert.equal(\n              response,\n              factServiceResponse,\n              'When config is invalid, rebuildConfig is given fact service response'\n            );\n          },\n        },\n      };\n\n    class MockFacts extends EmberObject {\n      @task *fetch(request, options) {\n        assert.deepEqual(request, serializedRequest, \"Report's serialized request is given to fact service\");\n\n        assert.deepEqual(\n          options,\n          {\n            page: 1,\n            perPage: 10000,\n            clientId: 'customReports',\n            customHeaders: {\n              uiView: 'report.spv.1',\n            },\n            dataSourceName: undefined,\n          },\n          'Options from route are passed to fact service'\n        );\n\n        return yield resolve({ request: serializedRequest, response: factServiceResponse });\n      }\n    }\n\n    const facts = MockFacts.create();\n    let route = this.owner.factoryFor('route:reports/report/view').create({\n      modelFor: () => reportModel,\n      facts,\n    });\n\n    let model = await route.model();\n\n    assert.deepEqual(\n      model,\n      { request: serializedRequest, response: factServiceResponse },\n      'Model hook returns request and response from fact service wrapped in a PromiseObject'\n    );\n  });\n\n  test('invalid visualization', function (assert) {\n    assert.expect(1);\n\n    this.owner.register(\n      'navi-visualization-manifest:invalid-type',\n      EmberObject.extend({\n        typeIsValid: () => false,\n      })\n    );\n\n    let route = this.owner.lookup('route:reports/report/view'),\n      report = {\n        visualization: {\n          type: 'invalid-type',\n        },\n      };\n\n    run(() => {\n      route._setValidVisualizationType(null, report);\n    });\n\n    assert.equal(get(report, 'visualization.type'), 'table', 'Any invalid visualization types are defaulted to table');\n  });\n\n  test('runReport action', function (assert) {\n    assert.expect(2);\n\n    const route = this.owner.factoryFor('route:reports/report/view').create({\n      _hasRequestRun() {\n        return true;\n      },\n      refresh() {\n        throw new Error('The route should not refresh if the request has not changed');\n      },\n    });\n\n    /* == Request has no changes == */\n    route.send('runReport');\n\n    /* == Request has been changed == */\n    route.refresh = () => {\n      assert.ok(true, 'Action asks route to refresh model');\n    };\n    route._hasRequestRun = () => false;\n    route.send('runReport');\n\n    route._hasRequestRun = () => true;\n    route.send('forceRun');\n  });\n});\n","/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/routes/reports/report-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/serializers/report-test.js",[],"/Users/jholderbaugh/Documents/refactor-action-buttons/packages/reports/tests/unit/utils/request-metric-test.js",[],{"ruleId":"1291","severity":1,"message":"1292","line":11,"column":8,"nodeType":"1293","endLine":11,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":12,"column":1,"nodeType":"1296","endLine":12,"endColumn":42},{"ruleId":"1294","severity":1,"message":"1295","line":14,"column":1,"nodeType":"1296","endLine":14,"endColumn":46},{"ruleId":"1291","severity":1,"message":"1292","line":15,"column":8,"nodeType":"1293","endLine":15,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":16,"column":1,"nodeType":"1296","endLine":16,"endColumn":60},{"ruleId":"1297","severity":1,"message":"1298","line":21,"column":1,"nodeType":"1296","endLine":21,"endColumn":29},{"ruleId":"1299","severity":1,"message":"1300","line":38,"column":22,"nodeType":"1301","endLine":38,"endColumn":43,"fix":"1302"},{"ruleId":"1299","severity":1,"message":"1300","line":68,"column":26,"nodeType":"1301","endLine":68,"endColumn":54,"fix":"1303"},{"ruleId":"1299","severity":1,"message":"1300","line":70,"column":7,"nodeType":"1301","endLine":70,"endColumn":36,"fix":"1304"},{"ruleId":"1299","severity":1,"message":"1300","line":71,"column":43,"nodeType":"1301","endLine":71,"endColumn":65,"fix":"1305"},{"ruleId":"1306","severity":1,"message":"1307","line":98,"column":3,"nodeType":"1308","endLine":101,"endColumn":4},{"ruleId":"1299","severity":1,"message":"1300","line":111,"column":17,"nodeType":"1301","endLine":111,"endColumn":46,"fix":"1309"},{"ruleId":"1299","severity":1,"message":"1300","line":116,"column":32,"nodeType":"1301","endLine":116,"endColumn":62,"fix":"1310"},{"ruleId":"1299","severity":1,"message":"1300","line":121,"column":21,"nodeType":"1301","endLine":121,"endColumn":50,"fix":"1311"},{"ruleId":"1299","severity":1,"message":"1300","line":122,"column":20,"nodeType":"1301","endLine":122,"endColumn":50,"fix":"1312"},{"ruleId":"1299","severity":1,"message":"1300","line":132,"column":29,"nodeType":"1301","endLine":132,"endColumn":59,"fix":"1313"},{"ruleId":"1299","severity":1,"message":"1300","line":137,"column":20,"nodeType":"1301","endLine":137,"endColumn":50,"fix":"1314"},{"ruleId":"1299","severity":1,"message":"1300","line":161,"column":12,"nodeType":"1301","endLine":161,"endColumn":36,"fix":"1315"},{"ruleId":"1291","severity":1,"message":"1292","line":12,"column":8,"nodeType":"1293","endLine":12,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1317","line":17,"column":44,"nodeType":"1318","endLine":17,"endColumn":46},{"ruleId":"1291","severity":1,"message":"1292","line":12,"column":8,"nodeType":"1293","endLine":12,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":13,"column":1,"nodeType":"1296","endLine":13,"endColumn":55},{"ruleId":"1294","severity":1,"message":"1295","line":14,"column":1,"nodeType":"1296","endLine":14,"endColumn":49},{"ruleId":"1291","severity":1,"message":"1292","line":16,"column":8,"nodeType":"1293","endLine":16,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":18,"column":1,"nodeType":"1296","endLine":18,"endColumn":42},{"ruleId":"1294","severity":1,"message":"1295","line":11,"column":1,"nodeType":"1296","endLine":11,"endColumn":51},{"ruleId":"1291","severity":1,"message":"1292","line":12,"column":8,"nodeType":"1293","endLine":12,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":13,"column":1,"nodeType":"1296","endLine":13,"endColumn":47},{"ruleId":"1299","severity":1,"message":"1300","line":40,"column":24,"nodeType":"1301","endLine":40,"endColumn":67},{"ruleId":"1294","severity":1,"message":"1295","line":18,"column":1,"nodeType":"1296","endLine":18,"endColumn":53},{"ruleId":"1291","severity":1,"message":"1292","line":20,"column":8,"nodeType":"1293","endLine":20,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":21,"column":1,"nodeType":"1296","endLine":21,"endColumn":47},{"ruleId":"1299","severity":1,"message":"1300","line":56,"column":20,"nodeType":"1301","endLine":56,"endColumn":41,"fix":"1319"},{"ruleId":"1299","severity":1,"message":"1300","line":57,"column":19,"nodeType":"1301","endLine":57,"endColumn":48},{"ruleId":"1299","severity":1,"message":"1300","line":67,"column":20,"nodeType":"1301","endLine":67,"endColumn":41,"fix":"1320"},{"ruleId":"1299","severity":1,"message":"1300","line":68,"column":22,"nodeType":"1301","endLine":68,"endColumn":54},{"ruleId":"1291","severity":1,"message":"1292","line":13,"column":8,"nodeType":"1293","endLine":13,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":14,"column":1,"nodeType":"1296","endLine":14,"endColumn":55},{"ruleId":"1321","severity":1,"message":"1322","line":48,"column":3,"nodeType":"1308","endLine":58,"endColumn":4},{"ruleId":"1306","severity":1,"message":"1307","line":64,"column":3,"nodeType":"1308","endLine":84,"endColumn":4},{"ruleId":"1291","severity":1,"message":"1292","line":14,"column":8,"nodeType":"1293","endLine":14,"endColumn":17},{"ruleId":"1291","severity":1,"message":"1292","line":10,"column":8,"nodeType":"1293","endLine":10,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1317","line":13,"column":16,"nodeType":"1301","endLine":17,"endColumn":3},{"ruleId":"1323","severity":1,"message":"1324","line":13,"column":16,"nodeType":"1301","endLine":17,"endColumn":3},{"ruleId":"1291","severity":1,"message":"1292","line":15,"column":8,"nodeType":"1293","endLine":15,"endColumn":17},{"ruleId":"1291","severity":1,"message":"1292","line":8,"column":8,"nodeType":"1293","endLine":8,"endColumn":17},{"ruleId":"1291","severity":1,"message":"1292","line":7,"column":8,"nodeType":"1293","endLine":7,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1317","line":22,"column":16,"nodeType":"1301","endLine":110,"endColumn":3},{"ruleId":"1306","severity":1,"message":"1307","line":85,"column":3,"nodeType":"1325","endLine":85,"endColumn":21},{"ruleId":"1326","severity":1,"message":"1327","line":93,"column":3,"nodeType":"1328","endLine":109,"endColumn":4},{"ruleId":"1291","severity":1,"message":"1292","line":35,"column":8,"nodeType":"1293","endLine":35,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1317","line":44,"column":16,"nodeType":"1301","endLine":231,"endColumn":3},{"ruleId":"1323","severity":1,"message":"1324","line":44,"column":16,"nodeType":"1301","endLine":231,"endColumn":3},{"ruleId":"1306","severity":1,"message":"1307","line":139,"column":3,"nodeType":"1325","endLine":139,"endColumn":12},{"ruleId":"1329","severity":1,"message":"1330","line":162,"column":26,"nodeType":"1301","endLine":162,"endColumn":57},{"ruleId":"1329","severity":1,"message":"1330","line":162,"column":74,"nodeType":"1301","endLine":162,"endColumn":99},{"ruleId":"1306","severity":1,"message":"1307","line":170,"column":3,"nodeType":"1325","endLine":170,"endColumn":19},{"ruleId":"1329","severity":1,"message":"1330","line":174,"column":5,"nodeType":"1301","endLine":174,"endColumn":30},{"ruleId":"1306","severity":1,"message":"1307","line":182,"column":3,"nodeType":"1325","endLine":182,"endColumn":21},{"ruleId":"1329","severity":1,"message":"1330","line":186,"column":5,"nodeType":"1301","endLine":186,"endColumn":30},{"ruleId":"1329","severity":1,"message":"1330","line":196,"column":9,"nodeType":"1301","endLine":196,"endColumn":34},{"ruleId":"1329","severity":1,"message":"1330","line":196,"column":49,"nodeType":"1301","endLine":196,"endColumn":74},{"ruleId":"1329","severity":1,"message":"1330","line":197,"column":9,"nodeType":"1301","endLine":197,"endColumn":34},{"ruleId":"1326","severity":1,"message":"1327","line":222,"column":3,"nodeType":"1328","endLine":230,"endColumn":4},{"ruleId":"1291","severity":1,"message":"1292","line":12,"column":8,"nodeType":"1293","endLine":12,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1317","line":16,"column":16,"nodeType":"1301","endLine":30,"endColumn":3},{"ruleId":"1323","severity":1,"message":"1324","line":16,"column":16,"nodeType":"1301","endLine":30,"endColumn":3},{"ruleId":"1299","severity":1,"message":"1300","line":28,"column":12,"nodeType":"1301","endLine":28,"endColumn":65},{"ruleId":"1291","severity":1,"message":"1292","line":5,"column":8,"nodeType":"1293","endLine":5,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1317","line":9,"column":16,"nodeType":"1301","endLine":55,"endColumn":3},{"ruleId":"1323","severity":1,"message":"1324","line":9,"column":16,"nodeType":"1301","endLine":55,"endColumn":3},{"ruleId":"1299","severity":1,"message":"1300","line":36,"column":45,"nodeType":"1301","endLine":36,"endColumn":86},{"ruleId":"1299","severity":1,"message":"1300","line":45,"column":9,"nodeType":"1301","endLine":45,"endColumn":34},{"ruleId":"1299","severity":1,"message":"1300","line":49,"column":9,"nodeType":"1301","endLine":49,"endColumn":37,"fix":"1331"},{"ruleId":"1299","severity":1,"message":"1300","line":50,"column":15,"nodeType":"1301","endLine":50,"endColumn":42},{"ruleId":"1291","severity":1,"message":"1292","line":14,"column":8,"nodeType":"1293","endLine":14,"endColumn":17},{"ruleId":"1323","severity":1,"message":"1324","line":18,"column":16,"nodeType":"1301","endLine":85,"endColumn":3},{"ruleId":"1316","severity":1,"message":"1317","line":34,"column":3,"nodeType":"1328","endLine":34,"endColumn":15},{"ruleId":"1299","severity":1,"message":"1300","line":51,"column":9,"nodeType":"1301","endLine":51,"endColumn":30,"fix":"1332"},{"ruleId":"1299","severity":1,"message":"1300","line":63,"column":9,"nodeType":"1301","endLine":63,"endColumn":30,"fix":"1333"},{"ruleId":"1299","severity":1,"message":"1300","line":78,"column":9,"nodeType":"1301","endLine":78,"endColumn":30,"fix":"1334"},{"ruleId":"1299","severity":1,"message":"1300","line":82,"column":19,"nodeType":"1301","endLine":82,"endColumn":46},{"ruleId":"1291","severity":1,"message":"1292","line":12,"column":8,"nodeType":"1293","endLine":12,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":13,"column":1,"nodeType":"1296","endLine":13,"endColumn":50},{"ruleId":"1294","severity":1,"message":"1295","line":14,"column":1,"nodeType":"1296","endLine":14,"endColumn":51},{"ruleId":"1291","severity":1,"message":"1292","line":13,"column":8,"nodeType":"1293","endLine":13,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":5,"column":1,"nodeType":"1296","endLine":5,"endColumn":51},{"ruleId":"1291","severity":1,"message":"1292","line":7,"column":8,"nodeType":"1293","endLine":7,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":8,"column":1,"nodeType":"1296","endLine":8,"endColumn":50},{"ruleId":"1294","severity":1,"message":"1295","line":12,"column":1,"nodeType":"1296","endLine":12,"endColumn":51},{"ruleId":"1291","severity":1,"message":"1292","line":16,"column":8,"nodeType":"1293","endLine":16,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":17,"column":1,"nodeType":"1296","endLine":17,"endColumn":60},{"ruleId":"1316","severity":1,"message":"1317","line":28,"column":36,"nodeType":"1318","endLine":200,"endColumn":2},{"ruleId":"1299","severity":1,"message":"1300","line":63,"column":12,"nodeType":"1301","endLine":63,"endColumn":43,"fix":"1335"},{"ruleId":"1299","severity":1,"message":"1300","line":63,"column":64,"nodeType":"1301","endLine":63,"endColumn":91},{"ruleId":"1299","severity":1,"message":"1300","line":71,"column":12,"nodeType":"1301","endLine":71,"endColumn":50},{"ruleId":"1299","severity":1,"message":"1300","line":97,"column":12,"nodeType":"1301","endLine":97,"endColumn":65},{"ruleId":"1306","severity":1,"message":"1307","line":104,"column":3,"nodeType":"1308","endLine":109,"endColumn":4},{"ruleId":"1336","severity":1,"message":"1337","line":126,"column":3,"nodeType":"1338","endLine":126,"endColumn":63},{"ruleId":"1291","severity":1,"message":"1292","line":12,"column":8,"nodeType":"1293","endLine":12,"endColumn":17},{"ruleId":"1294","severity":1,"message":"1295","line":13,"column":1,"nodeType":"1296","endLine":13,"endColumn":42},{"ruleId":"1291","severity":1,"message":"1292","line":9,"column":8,"nodeType":"1293","endLine":9,"endColumn":17},{"ruleId":"1323","severity":1,"message":"1324","line":13,"column":16,"nodeType":"1301","endLine":32,"endColumn":3},{"ruleId":"1323","severity":1,"message":"1324","line":19,"column":16,"nodeType":"1301","endLine":44,"endColumn":3},{"ruleId":"1299","severity":1,"message":"1300","line":36,"column":20,"nodeType":"1301","endLine":36,"endColumn":61,"fix":"1339"},{"ruleId":"1323","severity":1,"message":"1324","line":9,"column":16,"nodeType":"1301","endLine":22,"endColumn":3},{"ruleId":"1299","severity":1,"message":"1300","line":20,"column":12,"nodeType":"1301","endLine":20,"endColumn":36,"fix":"1340"},{"ruleId":"1323","severity":1,"message":"1324","line":19,"column":16,"nodeType":"1301","endLine":43,"endColumn":3},{"ruleId":"1299","severity":1,"message":"1300","line":35,"column":39,"nodeType":"1301","endLine":35,"endColumn":72,"fix":"1341"},{"ruleId":"1323","severity":1,"message":"1324","line":10,"column":16,"nodeType":"1301","endLine":39,"endColumn":3},{"ruleId":"1299","severity":1,"message":"1300","line":28,"column":12,"nodeType":"1301","endLine":28,"endColumn":32,"fix":"1342"},{"ruleId":"1336","severity":1,"message":"1337","line":36,"column":21,"nodeType":"1301","endLine":38,"endColumn":5},{"ruleId":"1343","severity":1,"message":"1344","line":12,"column":16,"nodeType":"1301","endLine":50,"endColumn":3},{"ruleId":"1336","severity":1,"message":"1337","line":34,"column":5,"nodeType":"1301","endLine":48,"endColumn":7},{"ruleId":"1299","severity":1,"message":"1300","line":35,"column":26,"nodeType":"1301","endLine":35,"endColumn":53},{"ruleId":"1299","severity":1,"message":"1300","line":35,"column":57,"nodeType":"1301","endLine":35,"endColumn":82,"fix":"1345"},{"ruleId":"1299","severity":1,"message":"1300","line":36,"column":17,"nodeType":"1301","endLine":36,"endColumn":35,"fix":"1346"},{"ruleId":"1299","severity":1,"message":"1300","line":42,"column":46,"nodeType":"1301","endLine":42,"endColumn":76,"fix":"1347"},{"ruleId":"1299","severity":1,"message":"1300","line":42,"column":81,"nodeType":"1301","endLine":42,"endColumn":101,"fix":"1348"},{"ruleId":"1343","severity":1,"message":"1344","line":8,"column":16,"nodeType":"1301","endLine":18,"endColumn":3},{"ruleId":"1297","severity":1,"message":"1298","line":6,"column":1,"nodeType":"1296","endLine":6,"endColumn":29},{"ruleId":"1323","severity":1,"message":"1324","line":8,"column":16,"nodeType":"1301","endLine":14,"endColumn":3},{"ruleId":"1297","severity":1,"message":"1349","line":8,"column":16,"nodeType":"1325","endLine":8,"endColumn":18},{"ruleId":"1297","severity":1,"message":"1350","line":9,"column":11,"nodeType":"1325","endLine":9,"endColumn":13},{"ruleId":"1297","severity":1,"message":"1351","line":10,"column":10,"nodeType":"1325","endLine":10,"endColumn":12},{"ruleId":"1297","severity":1,"message":"1351","line":11,"column":14,"nodeType":"1325","endLine":11,"endColumn":16},{"ruleId":"1297","severity":1,"message":"1351","line":12,"column":14,"nodeType":"1325","endLine":12,"endColumn":16},{"ruleId":"1297","severity":1,"message":"1352","line":13,"column":12,"nodeType":"1325","endLine":13,"endColumn":14},{"ruleId":"1323","severity":1,"message":"1324","line":9,"column":16,"nodeType":"1301","endLine":22,"endColumn":3},{"ruleId":"1299","severity":1,"message":"1300","line":18,"column":12,"nodeType":"1301","endLine":18,"endColumn":29,"fix":"1353"},{"ruleId":"1299","severity":1,"message":"1300","line":20,"column":19,"nodeType":"1301","endLine":20,"endColumn":36,"fix":"1354"},{"ruleId":"1323","severity":1,"message":"1324","line":7,"column":16,"nodeType":"1301","endLine":15,"endColumn":3},{"ruleId":"1299","severity":1,"message":"1300","line":13,"column":12,"nodeType":"1301","endLine":13,"endColumn":29,"fix":"1355"},{"ruleId":"1291","severity":1,"message":"1292","line":1,"column":8,"nodeType":"1293","endLine":1,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1317","line":37,"column":7,"nodeType":"1301","endLine":37,"endColumn":59},{"ruleId":"1323","severity":1,"message":"1324","line":37,"column":7,"nodeType":"1301","endLine":37,"endColumn":59},{"ruleId":"1299","severity":1,"message":"1300","line":739,"column":9,"nodeType":"1301","endLine":739,"endColumn":38},{"ruleId":"1299","severity":1,"message":"1300","line":755,"column":9,"nodeType":"1301","endLine":755,"endColumn":41},{"ruleId":"1299","severity":1,"message":"1300","line":774,"column":9,"nodeType":"1301","endLine":774,"endColumn":67},{"ruleId":"1299","severity":1,"message":"1300","line":1429,"column":9,"nodeType":"1301","endLine":1429,"endColumn":44},{"ruleId":"1323","severity":1,"message":"1324","line":3,"column":16,"nodeType":"1301","endLine":7,"endColumn":3},{"ruleId":"1323","severity":1,"message":"1324","line":3,"column":16,"nodeType":"1301","endLine":7,"endColumn":3},{"ruleId":"1299","severity":1,"message":"1300","line":51,"column":7,"nodeType":"1301","endLine":51,"endColumn":24,"fix":"1356"},{"ruleId":"1291","severity":1,"message":"1292","line":1,"column":8,"nodeType":"1293","endLine":1,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1317","line":54,"column":60,"nodeType":"1301","endLine":54,"endColumn":78},{"ruleId":"1323","severity":1,"message":"1324","line":54,"column":60,"nodeType":"1301","endLine":54,"endColumn":78},{"ruleId":"1316","severity":1,"message":"1317","line":148,"column":61,"nodeType":"1301","endLine":148,"endColumn":79},{"ruleId":"1323","severity":1,"message":"1324","line":148,"column":61,"nodeType":"1301","endLine":148,"endColumn":79},{"ruleId":"1291","severity":1,"message":"1292","line":5,"column":8,"nodeType":"1293","endLine":5,"endColumn":17},{"ruleId":"1316","severity":1,"message":"1317","line":98,"column":7,"nodeType":"1301","endLine":100,"endColumn":9},{"ruleId":"1323","severity":1,"message":"1324","line":98,"column":7,"nodeType":"1301","endLine":100,"endColumn":9},{"ruleId":"1299","severity":1,"message":"1300","line":173,"column":7,"nodeType":"1301","endLine":173,"endColumn":24,"fix":"1357"},{"ruleId":"1299","severity":1,"message":"1300","line":20,"column":18,"nodeType":"1301","endLine":20,"endColumn":41,"fix":"1358"},{"ruleId":"1299","severity":1,"message":"1300","line":22,"column":22,"nodeType":"1301","endLine":22,"endColumn":54,"fix":"1359"},{"ruleId":"1299","severity":1,"message":"1300","line":26,"column":18,"nodeType":"1301","endLine":26,"endColumn":41,"fix":"1360"},{"ruleId":"1299","severity":1,"message":"1300","line":29,"column":7,"nodeType":"1301","endLine":29,"endColumn":39,"fix":"1361"},{"ruleId":"1299","severity":1,"message":"1300","line":36,"column":18,"nodeType":"1301","endLine":36,"endColumn":41,"fix":"1362"},{"ruleId":"1299","severity":1,"message":"1300","line":39,"column":7,"nodeType":"1301","endLine":39,"endColumn":39,"fix":"1363"},{"ruleId":"1299","severity":1,"message":"1300","line":28,"column":7,"nodeType":"1301","endLine":28,"endColumn":34,"fix":"1364"},{"ruleId":"1299","severity":1,"message":"1300","line":90,"column":16,"nodeType":"1301","endLine":90,"endColumn":37,"fix":"1365"},{"ruleId":"1299","severity":1,"message":"1300","line":98,"column":21,"nodeType":"1301","endLine":98,"endColumn":55,"fix":"1366"},{"ruleId":"1299","severity":1,"message":"1300","line":103,"column":26,"nodeType":"1301","endLine":103,"endColumn":60,"fix":"1367"},{"ruleId":"1323","severity":1,"message":"1324","line":52,"column":24,"nodeType":"1301","endLine":54,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1327","line":53,"column":17,"nodeType":"1328","endLine":53,"endColumn":44},{"ruleId":"1323","severity":1,"message":"1324","line":68,"column":24,"nodeType":"1301","endLine":70,"endColumn":17},{"ruleId":"1326","severity":1,"message":"1327","line":69,"column":17,"nodeType":"1328","endLine":69,"endColumn":44},{"ruleId":"1368","severity":1,"message":"1369","line":2,"column":1,"nodeType":"1296","endLine":2,"endColumn":79},{"ruleId":"1343","severity":1,"message":"1344","line":20,"column":26,"nodeType":"1301","endLine":20,"endColumn":69},{"ruleId":"1368","severity":1,"message":"1369","line":3,"column":1,"nodeType":"1296","endLine":3,"endColumn":65},{"ruleId":"1343","severity":1,"message":"1344","line":10,"column":29,"nodeType":"1301","endLine":10,"endColumn":86},{"ruleId":"1323","severity":1,"message":"1324","line":46,"column":7,"nodeType":"1301","endLine":48,"endColumn":9},{"ruleId":"1299","severity":1,"message":"1300","line":82,"column":21,"nodeType":"1301","endLine":82,"endColumn":44,"fix":"1370"},{"ruleId":"1299","severity":1,"message":"1300","line":85,"column":13,"nodeType":"1301","endLine":85,"endColumn":35,"fix":"1371"},{"ruleId":"1299","severity":1,"message":"1300","line":117,"column":30,"nodeType":"1301","endLine":117,"endColumn":66},{"ruleId":"1323","severity":1,"message":"1324","line":82,"column":7,"nodeType":"1301","endLine":84,"endColumn":9},{"ruleId":"1299","severity":1,"message":"1300","line":98,"column":18,"nodeType":"1301","endLine":98,"endColumn":51},"ember/no-classic-components","Use Glimmer components(@glimmer/component) instead of classic components(@ember/component)","ImportDefaultSpecifier","ember/no-computed-properties-in-native-classes","Don't use computed properties with native classes. Use getters or @tracked properties instead.","ImportDeclaration","ember/use-ember-data-rfc-395-imports","Imports from @ember-data packages should be preferred over imports from ember-data","ember/no-get","Use ES5 getters (`this.property`) instead of Ember's `get` function","CallExpression",{"range":"1372","text":"1373"},{"range":"1374","text":"1375"},{"range":"1376","text":"1377"},{"range":"1378","text":"1379"},"ember/no-component-lifecycle-hooks","Do not use classic ember components lifecycle hooks. Prefer using \"@ember/render-modifiers\" or custom functional modifiers.","MethodDefinition",{"range":"1380","text":"1377"},{"range":"1381","text":"1382"},{"range":"1383","text":"1377"},{"range":"1384","text":"1385"},{"range":"1386","text":"1382"},{"range":"1387","text":"1385"},{"range":"1388","text":"1389"},"ember/require-tagless-components","Please switch to a tagless component by setting `tagName: ''` or converting to a Glimmer component","ClassBody",{"range":"1390","text":"1391"},{"range":"1392","text":"1391"},"ember/classic-decorator-hooks","You cannot use define the init() lifecycle hook in non-classic classes, it is a classic lifecycle hook. Convert to using the constructor instead, or add the @classic decorator to the class to mark it as classic.","ember/no-classic-classes","Native JS classes should be used instead of classic classes","Identifier","ember/no-actions-hash","Use the @action decorator instead of declaring an actions hash","Property","ember/no-jquery","Do not use jQuery",{"range":"1393","text":"1394"},{"range":"1395","text":"1396"},{"range":"1397","text":"1396"},{"range":"1398","text":"1396"},{"range":"1399","text":"1400"},"ember/no-observers","Don't use observers","Decorator",{"range":"1401","text":"1402"},{"range":"1403","text":"1404"},{"range":"1405","text":"1406"},{"range":"1407","text":"1408"},"ember/no-new-mixins","Don't create new mixins",{"range":"1409","text":"1410"},{"range":"1411","text":"1412"},{"range":"1413","text":"1414"},{"range":"1415","text":"1416"},"Use `import Model from '@ember-data/model';` instead of using DS.Model","Use `import { belongsTo } from '@ember-data/model';` instead of using DS.belongsTo","Use `import { attr } from '@ember-data/model';` instead of using DS.attr","Use `import { hasMany } from '@ember-data/model';` instead of using DS.hasMany",{"range":"1417","text":"1418"},{"range":"1419","text":"1420"},{"range":"1421","text":"1420"},{"range":"1422","text":"1423"},{"range":"1424","text":"1412"},{"range":"1425","text":"1426"},{"range":"1427","text":"1428"},{"range":"1429","text":"1426"},{"range":"1430","text":"1428"},{"range":"1431","text":"1426"},{"range":"1432","text":"1428"},{"range":"1433","text":"1434"},{"range":"1435","text":"1436"},{"range":"1437","text":"1438"},{"range":"1439","text":"1438"},"ember/no-mixins","Don't use a mixin",{"range":"1440","text":"1441"},{"range":"1442","text":"1443"},[1246,1267],"this.queryIds",[2084,2112],"this._validDimValues",[2136,2165],"this._trimmedQueryIds",[2228,2250],"validDimVal.id",[3018,3047],[3127,3157],"this._dimensionService",[3241,3270],[3291,3321],"this.searchableIdField",[3585,3615],[3698,3728],[4403,4427],"meta.idFieldName",[1639,1660],"this.itemType",[1946,1967],[1147,1175],"this.checkPermission",[1214,1235],"this.disabled",[1493,1514],[1910,1931],[1870,1901],"this.naviVisualizations",[1343,1384],"this.deliveryRuleActionDispatcher",[460,484],"this.userService",[1242,1275],"this.itemActionDispatcher",[894,914],"this.content",[900,925],"this.selectedItem",[943,961],"this.items",[1172,1202],"(A(items).uniq()).length",[1207,1227],"items.length",[525,542],"this.user",[585,602],"this.store",[310,327],[1447,1464],"this.value",[5530,5547],[549,572],"component._page",[630,662],"component._itemsToRender",[784,807],[909,941],[1127,1150],[1252,1284],[961,988],"component.allTables",[2758,2779],"report.author",[3022,3056],"newRule.hasDirtyAttributes",[3219,3253],[2882,2905],"newModel.tempId",[2968,2990],"newModel.title"]